@model BankLoanSystem.Models.User


@{
    ViewBag.Title = "Profile";
    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
    }
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>

<script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/scripts/CommonFunctions.js"></script>

@section AddToHead{
    <style>
        .body-content {
            float: none;
            width: auto;
            margin: 0;
        }

        .err_msg_box {
            text-align: left;
        }

        #page-wrapper {
            min-height: 568px;
            padding: 0 36px;
            float: none !important;
            /* position: relative !important; */
            margin: auto !important;
        }
    </style>}

<script src="~/scripts/jquery-1.10.2.min.js"></script>

@*<script src="~/scripts/bootstrap.min.js"></script>*@

@*<link href="~/Content/pikaday.css" rel="stylesheet" />
    <link href="~/Content/theme.css" rel="stylesheet" />
    <link href="~/Content/triangle.css" rel="stylesheet" />
    <script src="~/scripts/moment.js"></script>
    <script src="~/scripts/pikaday.js"></script>*@

@*<link href="~/Content/commonActions.css" rel="stylesheet" />*@




<div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper usersetup_border">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <div class="container body-content">

                <div class="row">
                    <div class="container body-content new_container">

                        <div style="clear:both;"></div>
                        <div class="form-horizontal new_form_horizontal">

                            <div class="topErrors">
                                <p class="err_msg">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>
                                <div class="text-danger">@ViewBag.Error</div>
                            </div>

                            <div class="form-horizontal">

                                <div style="clear:both"></div>
                                @if (ViewBag.SuccessMsg != null && ViewBag.SuccessMsg.ToString().Equals("Profile is successfully updated"))
                                {
                                    <div id="successSpn" class="text-success"><span>@ViewBag.SuccessMsg</span></div>


                                }

                                else if (ViewBag.ErrorMsg != null && ViewBag.ErrorMsg.ToString().Equals("Failed to update Profile"))
                                {
                                    <div id="errorSpn" class="text-danger"><span>@ViewBag.ErrorMsg</span></div>

                                }

                                @using (Html.BeginForm("EditProfile", "UserManagement", FormMethod.Post, new { @id = "form" }))
                                {

                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>Username</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                <label class = "form-control text_field_input" style="border:none;display: block;box-shadow:none;text-align: left;">@Model.UserName</label>
                                                @*@Html.LabelFor(model => model.UserName, Model.UserName, htmlAttributes: new {@class = "form-control text_field_input", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;text-align: left;"})*@
                                            </div>
                                        </div>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>User Role</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field" style="text-align: left;">
                                                <label class="form-control text_field_input" style="border:none;display: block;box-shadow: none;text-align: left;">@ViewBag.RoleName</label>
                                            </div>
                                        </div>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>First Name</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtFname" } })
                                            </div>
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                            </div>
                                        </div>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>Last Name</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtLname" } })
                                            </div>
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                            </div>
                                        </div>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>email</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtEmail" } })
                                            </div>
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                            </div>
                                        </div>
                                        <div class="form-group new_form_group">

                                            <div id="divSAPhone" hidden>
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Phone Number</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtPhone" } })
                                                </div>

                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                                </div>
                                            </div>

                                            <div id="divPhone">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Phone Number</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.PhoneNumber2, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtPhone2" } })
                                                </div>

                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.PhoneNumber2, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                                </div>
                                            </div>

                                        </div>
                                        
                                        
                                        <div class="form-group new_form_group" id="lnkCreateNewBranch">
                                            @*<div style="font-size:14px;float:left">
                                                    <a onclick=ChangePwd()>Change Password</a>
                                                </div>*@
                                            <div class="control-label col-sm-2" style="font-weight:normal;color:#545454;font-size:14px;margin-left:-60px;margin-top:-10px;">
                                                <label>Do you need to change current password?</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field" style="font-weight:normal;color:#545454;font-size:14px;margin-left:-30px;margin-top:-7px;">
                                                @Html.RadioButtonFor(model => model.ChangePassword, "true", new { @id = "rbYes" }) Yes
                                                @Html.RadioButtonFor(model => model.ChangePassword, "false", new { @id = "rbNo", @style = "margin-left:20px" }) No
                                            </div>
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.ChangePassword, "", new { @class = "text-danger" })</p>
                                            </div>
                                        </div>
                                        <div id="divChangePwd" hidden>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Current Password</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtCurrentPassword", @placeholder = "Type current password" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>New Password</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtNewPassword", @placeholder = "Type new password" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Confirm New Password</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtConfirmPassword", @placeholder = "Confirm new password" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group new_form_group clear_next clear_next_bordr">
                                            <div>
                                                <nav>
                                                    <div class="pager new_pager">
                                                        <div class="button_box algn_left">
                                                            <input value="Dashboard" name="subBack" id="btnDashbrd" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button" onclick="window.location.href='/UserManagement/UserDetails'">
                                                        </div>
                                                        <div class="button_box algn_center">
                                                            <input value="Update" class="btn btn-primary m-b next_clear_button next_back" style="margin-left:10px" type="submit" id="btnUpdateUser">
                                                        </div>
                                                        <div class="button_box algn_right">
                                                            <input id="clear" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button">
                                                        </div>
                                                        <div style="clear:both"></div>
                                                    </div>
                                                </nav>
                                            </div>
                                        </div>
                                    </div>

                                }

                                <div>
                                </div>




                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    // for input mask

    new InputMask().Initialize(document.querySelectorAll("#txtPhone2,#txtPhone"),
    {
        mask: InputMaskDefaultMask.Phone,
        placeHolder: "(999) 999-9999"
    });

    $("#txtPhone2,#txtPhone").focusout(function (e) {


        $(this).attr("placeholder", "(999) 999-9999");

    });


    $('#txtCurrentPassword').change(function(){
        var uid = $("#hdnUserId3").val();
        var pwd = $("#txtCurrentPassword").val();

        $.ajax({
            url: '/UserManagement/CheckPasswd/',
            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify({userId:uid,Cpwd:pwd }),
            success: function (data) {
                //alert(data);
                if(data==0){
                    $('#txtCurrentPassword').closest("div").siblings('div').children("p").children("span").text("Current password does not match with the selected user");
                    $('#txtCurrentPassword').next("div").children("p").children("span").text("");
                    $('#txtCurrentPassword').addClass('input-validation-error');
                }
                if(data==1){
                    $('#txtCurrentPassword').closest("div").siblings('div').children("p").children("span").text("");
                    $('#txtCurrentPassword').next("div").children("p").children("span").text("");
                    $('#txtCurrentPassword').removeClass('input-validation-error');
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // Your handler here...

                // if session expires
                if (jqXHR.status == "404") {
                    window.location.href = '/Login/UserLogin?lbl=Session expired';
                }
            }
        });
    });

    $('#btnUpdateUser').click(function(e){
        if($('#txtCurrentPassword').closest("div").siblings('div').children("p").children("span").text() != ""){
            e.preventDefault();
        }

    });

    $('#txtCurrentPassword').focusout(function () {
        $(this).attr('placeholder', 'Type Current Password');
    });
    $('#txtNewPassword').focusout(function () {
        $(this).attr('placeholder', 'Type New Password');
    });
    $('#txtConfirmPassword').focusout(function () {
        $(this).attr('placeholder', 'Confirm new Password');
    });
    function ClearErrorMsgs(){
        $('#successSpn span').text("");
        $('#errorSpn span').text("");
        $('#txtCurrentPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtCurrentPassword').next("div").children("p").children("span").text("");
        $('#txtCurrentPassword').removeClass('input-validation-error');
        $('#txtNewPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtNewPassword').next("div").children("p").children("span").text("");
        $('#txtNewPassword').removeClass('input-validation-error');
        $('#txtConfirmPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtConfirmPassword').next("div").children("p").children("span").text("");
        $('#txtConfirmPassword').removeClass('input-validation-error');
        $('#txtFname').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtFname').next("div").children("p").children("span").text("");
        $('#txtLname').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtLname').next("div").children("p").children("span").text("");
        $('#txtEmail').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtEmail').next("div").children("p").children("span").text("");
        $('#txtPhone').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtPhone').next("div").children("p").children("span").text("");
        $('#rbStatusA').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbStatusA').next("div").children("p").children("span").text("");
        $('#rbStatusN').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbStatusN').next("div").children("p").children("span").text("");
        $('#rbYes').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbYes').next("div").children("p").children("span").text("");
        $('#rbNo').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbN0').next("div").children("p").children("span").text("");

    };
    $('#rbYes').click(function () {
        $('#txtCurrentPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtCurrentPassword').next("div").children("p").children("span").text("");
        $('#txtCurrentPassword').removeClass('input-validation-error');
        $('#txtNewPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtNewPassword').next("div").children("p").children("span").text("");
        $('#txtNewPassword').removeClass('input-validation-error');
        $('#txtConfirmPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtConfirmPassword').next("div").children("p").children("span").text("");
        $('#txtConfirmPassword').removeClass('input-validation-error');
        $('#txtCurrentPassword').val('');
        $('#txtNewPassword').val('');
        $('#txtConfirmPassword').val('');
        $('#divChangePwd').show();
    });
    $('#rbNo').click(function () {
        $('#txtCurrentPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtCurrentPassword').next("div").children("p").children("span").text("");
        $('#txtCurrentPassword').removeClass('input-validation-error');
        $('#txtNewPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtNewPassword').next("div").children("p").children("span").text("");
        $('#txtNewPassword').removeClass('input-validation-error');
        $('#txtConfirmPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtConfirmPassword').next("div").children("p").children("span").text("");
        $('#txtConfirmPassword').removeClass('input-validation-error');
        $('#txtCurrentPassword').val('');
        $('#txtNewPassword').val('');
        $('#txtConfirmPassword').val('');
        $('#divChangePwd').hide();
    });
    function ChangePwd(){
        $('#divChangePwd').show();
    };
    $(document).ready(function(){
        $('#rbStatusA').prop('checked', false);
        $('#rbStatusN').prop('checked', false);
        $('#rbYes').prop('checked', false);
        $('#rbNo').prop('checked', false);
    });
    $('#clear').click(function () {
        ClearErrorMsgs();
        $('#RoleIdSlct').closest("div").siblings('div').children("p").children("span").text("");
        $('#RoleIdSlct').next("div").children("p").children("span").text("");
        $('#BranchId').closest("div").siblings('div').children("p").children("span").text("");
        $('#BranchId').next("div").children("p").children("span").text("");
        $('#UserIdSA').closest("div").siblings('div').children("p").children("span").text("");
        $('#UserIdSA').next("div").children("p").children("span").text("");
        $('#RoleIdSlct').val('');
        $('#BranchId').val('');
        $('#BranchId2Lbl').text('');
        $('#txtBranchId2').val('');
        $('#BranchDiv1').show();
        $('#UserIdSA').val(0);
        $('#UserIdSA').show();
        $('#txtUserId2').text('');
        $('#txtUserId3').text('');
        $('#lblUserName').show();
        $('#divSingleUser').hide();
        $('#divSingleUser2').hide();
        $('#txtCurrentPassword').val('');
        $('#txtNewPassword').val('');
        $('#txtConfirmPassword').val('');
        $('#divChangePwd').hide();
        $('#txtFname').val('');
        $('#txtLname').val('');
        $('#txtEmail').val('');
        $('#txtPhone').val('');
        $('#txtPhone2').val('');
        $('#divSAPhone').hide();
        $('#divPhone').show();
        $('#rbStatusA').removeAttr('checked');
        //alert($('#rbStatusN').val());
        $('#rbStatusN').removeAttr('checked');
        // alert($('#rbStatusN').val());
        $('#rbYes').removeAttr('checked');
        //alert($('#rbStatusN').val());
        $('#rbNo').removeAttr('checked');
        // alert($('#rbStatusN').val());
    });
    $('#BranchId').change(function () {
        ClearErrorMsgs();
        $('#UserIdSA').closest("div").siblings('div').children("p").children("span").text("");
        $('#UserIdSA').next("div").children("p").children("span").text("");
        $('#UserIdSA').show();
        $('#UserIdSA').val(0);
        //$('#divUserId').hide();
        $('#txtUserId2').text('');
        $('#txtUserId3').text('');
        $('#divSingleUser').hide();
        $('#divSingleUser2').hide();
        $('#txtCurrentPassword').val('');
        $('#txtNewPassword').val('');
        $('#txtConfirmPassword').val('');
        $('#divChangePwd').hide();
        $('#txtFname').val('');
        $('#txtLname').val('');
        $('#txtEmail').val('');
        $('#txtPhone').val('');
        $('#txtPhone2').val('');
        $('#divSAPhone').hide();
        $('#divPhone').show();
        $('#rbStatusA').prop('checked', false);
        $('#rbStatusN').prop('checked', false);
        $('#rbYes').prop('checked', false);
        $('#rbNo').prop('checked', false);
        //alert($('#BranchId').val()+$('#RoleIdSlct').val());
        if(($('#BranchId').val()>0)&&($('#RoleIdSlct').val()>1))
        {

            var _roleid = $('#RoleIdSlct').val();
            var _branchId = $('#BranchId').val();
            GetUsersByBranchId(_roleid,_branchId);
        }
    });
    function RoleOnChange(_rId)
    {

        ClearErrorMsgs();
        $('#BranchId').closest("div").siblings('div').children("p").children("span").text("");
        $('#BranchId').next("div").children("p").children("span").text("");
        $('#UserIdSA').closest("div").siblings('div').children("p").children("span").text("");
        $('#UserIdSA').next("div").children("p").children("span").text("");
        $('#BranchId').val('');
        //$('#BranchId2Lbl').text('');
        $('#txtBranchId2').val('');
        $('#BranchDiv1').show();
        $('#UserIdSA option:selected').attr('selected',null);
       // $('#UserIdSA option').text("--Select Username--");
        $('#UserIdSA').show();
        $("#hdnUserId3").val('');
        $('#txtUserId2').text('');
        $('#txtUserId3').text('');
        $('#divSingleUser').hide();
        $('#divSingleUser2').hide();
        $('#txtCurrentPassword').val('');
        $('#txtNewPassword').val('');
        $('#txtConfirmPassword').val('');
        $('#divChangePwd').hide();
        $('#txtFname').val('');
        $('#txtLname').val('');
        $('#txtEmail').val('');
        $('#txtPhone').val('');
        $('#txtPhone2').val('');
        $('#divSAPhone').hide();
        $('#divPhone').show();
        $('#rbStatusA').prop('checked', false);
        $('#rbStatusN').prop('checked', false);
        $('#rbYes').prop('checked', false);
        $('#rbNo').prop('checked', false);
    }
    
</script>
<script>
    $("input[type=text]").click(function () {

        $('#successSpn span').text("");
        $('#errorSpn span').text("");

    });

    $('#txtUserName').keypress(function (e) {
        var code = e.which;
        if (this.value.length === 0 && (48 <= code && code <= 57)) {
            //$("#customError span[id^='spnUserName']").text("User name can't be start with numbers");
            this.focus();
            e.preventDefault();
            return;
        }

        var res = BlockText(e.which);
        if (res === 1) {
            //$("#customError span[id^='spnUserName']").text("Please use only letters (a-z) and numbers.");
            e.preventDefault();
            return;
        }
    });

    // change to title case

    $('#txtFname, #txtLname').blur(function (e) {
        //ToTitleCase(this.id, this.value);
        if (e.which !== 37 && e.which !== 8 && e.which !== 32)
            ToTitleCase(this.id, this.value);
    });


    //Check maximum length
    $('#txtUserName, #txtFname, #txtLname, #txtCurrentPassword,#txtNewPassword, #txtConfirmPassword').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 30);
        if (res === 0) {
            e.preventDefault();
            return;
        }
    });

    $('#txtCurrentPassword,#txtNewPassword, #txtConfirmPassword').keypress(function (e) {
        if (this.value.length === 0 && e.which === 32) {
            e.preventDefault();
            return;
        }
        var array = ['`', '*', '&', '=', '|', ';', '"', '<', '>'];
        var res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }
        else if (e.which === 92) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    //Check maximum length for email address and valid characters
    $('#txtEmail').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 100);
        if (res === 0) {
            e.preventDefault();
            return;
        }

        var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ','];
        res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }
        else if (e.which === 92 || e.which === 39) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    $('#txtFname, #txtLname').keypress(function (e) {
        //var array = [' ', '/', '`', '~', '!'];
        var array = ['~', '`', '!', '#', '$', '%', '&', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', ''];
        var res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }

        if (e.which === 92) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    $('#txtPhone, #txtPhone2').keypress(function (e) {
        var res = PhoneNumber(this, e.which);
        if (res === 0) {
            e.preventDefault();
            return;
        }

        res = CheckMaxLenth(this, this.value, 14);
        if (res === 0) {
            e.preventDefault();
            return;
        }
    });
</script>