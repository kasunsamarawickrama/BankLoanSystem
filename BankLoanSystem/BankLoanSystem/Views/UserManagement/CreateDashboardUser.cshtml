@model BankLoanSystem.Models.User
@{
    ViewBag.Title = "Create User";
    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
    }
    //WebGrid grid = new WebGrid(Model.UserRightsList, defaultSort: "CreatedDate", canPage: false, ajaxUpdateContainerId: "checkableGridDiv", ajaxUpdateCallback: "GridUpdate");
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>

<script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>
@section AddToHead{
<style>
     .body-content {

    float: none;
    width: auto;
    margin: 0;
   
    }
    .err_msg_box {
        text-align: left;
    }

    #page-wrapper {
        min-height: 568px;
        padding: 0 36px;
        float: none !important;
        /* position: relative !important; */
        margin: auto !important;
    }
</style>}

<script src="~/scripts/jquery-1.10.2.min.js"></script>

<div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper usersetup_border">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <div class="container body-content">

                <div class="row">
                    <div class="container body-content new_container">
                        
                        
                        <div style="clear:both;"></div>
                        <div class="form-horizontal new_form_horizontal">
                            <div class="topErrors">
                                <p class="err_msg">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>
                                <div class="text-danger">@ViewBag.Error</div>
                            </div>
                            <div class="form-horizontal">
                                
                                <div style="clear:both"></div>
                                
                                @if (ViewBag.SuccessMsg != null && ViewBag.SuccessMsg.ToString().Equals("User Successfully Created"))
                                {
                                
                                <span id="successSpn" class="text-success">@ViewBag.SuccessMsg</span>
                                }

                                else if (ViewBag.ErrorMsg != null && ViewBag.ErrorMsg.ToString().Equals("Failed To Create User"))
                                {
                                
                                <span id="errSpn" class="text-danger">@ViewBag.ErrorMsg</span>
                                }
@using (Html.BeginForm("CreateDashboardUser", "UserManagement", FormMethod.Post, new { @id = "form" }))
{

                                            @Html.AntiForgeryToken()

                                            <div class="form-horizontal">
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>Role</label>
                                                    </div>
                                                    @if (ViewBag.RoleId.Items.Count == 1)
                                                    {
                                                        <div class="col-xs-8 text_field short_text_field">
                                                            @Html.HiddenFor(model => model.RoleId, new { Value = (int)ViewBag.RoleId.Items[0].RoleId, id = "RoleId2" })
                                                            @Html.LabelFor(model => model.RoleId, (string)ViewBag.RoleId.Items[0].RoleName, htmlAttributes: new { @class = "form-control text_field_input", id = "RoleIdLbl", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;" })
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-xs-8 text_field short_text_field">
                                                            @Html.DropDownListFor(model => model.RoleId, null, "--Select Role--", htmlAttributes: new { @class = "form-control text_field_input", id = "RoleId" })

                                                        </div>
                                                    }
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                                    </div>
                                                </div>
                                                <div id="branchDiv" hidden>
                                                    @if (ViewBag.CurrUserRoleType != 3)
                                                    {
                                                        <div class="form-group new_form_group">
                                                            <div class="control-label col-sm-2 lable_style">
                                                                <label>Branch </label>
                                                            </div>
                                                            @if (ViewBag.BranchId.Items.Count == 1)
                                                            {
                                                                <div class="col-xs-8 text_field short_text_field" style="width:66.67%">
                                                                    @Html.HiddenFor(model => model.BranchId, new { Value = (int)ViewBag.BranchId.Items[0].BranchId, id = "BranchId2" })
                                                                    @Html.LabelFor(model => model.BranchId, (string)ViewBag.BranchId.Items[0].BranchName, htmlAttributes: new { @class = "form-control text_field_input", id = "RegisteredBranchId", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display:block;float:left" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="col-xs-8 text_field short_text_field">
                                                                    @Html.DropDownListFor(model => model.BranchId, null, "--Select Branch--", htmlAttributes: new { @class = "form-control", id = "BranchId" })
                                                                </div>
                                                            }
                                                            <div class="err_msg_box" style="margin-top:5px">
                                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>

                                                <div id="branchDivUser" hidden>
                                                    @if (ViewBag.CurrUserRoleType != 3)
                                                    {
                                                        <div class="form-group new_form_group">
                                                            <div class="control-label col-sm-2 lable_style">
                                                                <label>Branch </label>
                                                            </div>
                                                            @if (ViewBag.BranchIdUser.Items.Count == 1)
                                                            {
                                                                <div class="col-xs-8 text_field short_text_field" style="text-align:left;width:66.67%;">
                                                                    @Html.HiddenFor(model => model.BranchIdUser, new { @Value = (int)ViewBag.BranchIdUser.Items[0].BranchId, id = "BranchIdUser2" })
                                                                    @Html.LabelFor(model => model.BranchIdUser, (string)ViewBag.BranchIdUser.Items[0].BranchName, htmlAttributes: new { @class = "form-control text_field_input", id = "RegisteredBranchIdUser", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;" })
                                                                </div>

                                                            }
                                                            else
                                                            {
                                                                <div class="col-xs-8 text_field short_text_field">
                                                                    @Html.DropDownListFor(model => model.BranchIdUser, null, "--Select Branch--", htmlAttributes: new { @class = "form-control", id = "BranchIdUser" })
                                                                </div>
                                                            }
                                                            <div class="err_msg_box" style="margin-top:5px">
                                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.BranchIdUser, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                                <div id="branchid" class="hidden"></div>

                                                <div id="rightsSection">


                                                </div>


                                                <div id="loanid" class="hidden"></div>
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>First Name</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "txtFirstName" } })
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>Last Name</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "txtLastName" } })
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>email</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field">
                                                        @Html.EditorFor(model => model.NewEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtNewEmail" } })
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.NewEmail, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>
                                                            Phone Number<br>
                                                            <span class="optional">(Optional)</span>
                                                        </label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.EditorFor(model => model.PhoneNumber2, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtPhoneNumber" } })
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.PhoneNumber2, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>

                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>Username</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtUserName" } })
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>Password</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtPassword" } })
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>Confirm Password</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtConfirmPassword" } })
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                               <hr>

                                                
                                                
                                                <div class="form-group new_form_group" id="divActiveUser">
                                                  
                                                    <div class="control-label col-sm-2" style="font-weight:normal;color:#545454;font-size:14px;margin-left:-60px;margin-top:-10px;">
                                                        <label>Do you need to activate the user now?</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field" style="font-weight:normal;color:#545454;font-size:14px;margin-left:-30px;margin-top:-7px;">
                                                        @Html.RadioButtonFor(model => model.Status, "true", new { @id = "rbYes" }) Yes
                                                        @Html.RadioButtonFor(model => model.Status, "false", new { @id = "rbNo", @style = "margin-left:20px" }) No
                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                <div class="form-group new_form_group clear_next clear_next_bordr">
                                                    <div>
                                                        <nav>
                                                            <div class="pager new_pager">
                                                                <div class="button_box algn_left">
                                                                    <input value="Dashboard" name="subBack" id="btnPreStep3"  tabindex="-1" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button" onclick="window.location.href='/UserManagement/UserDetails'">
                                                                </div>
                                                                <div class="button_box algn_center">
                                                                    <input value="Create" class="btn btn-primary m-b next_clear_button next_back" style="margin-left:10px" type="submit" id="btnCreateUser">
                                                                </div>
                                                                <div class="button_box algn_right">
                                                                    <input id="clear" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button">
                                                                </div>
                                                                <div style="clear:both"></div>
                                                            </div>
                                                        </nav>
                                                    </div>
                                                </div>
                                            </div>

}





                                    <div>
                                    </div>

                                


                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script language="javascript">

    $(document).ready(function () {

        // for input mask

        new InputMask().Initialize(document.querySelectorAll("#txtPhoneNumber"),
        {
            mask: InputMaskDefaultMask.Phone,
            placeHolder: "(___) ___-____"
        });

        $("#txtPhoneNumber").focusout(function (e) {


            $(this).attr("placeholder", "(___) ___-____");

        });


        $('.nav li.active ul').removeClass('in');
        $('.nav li').removeClass('active');
        $('.nav li.user').addClass('active');
        $('.nav li.active ul').addClass('in');
    });
</script>



<script src="~/scripts/CommonFunctions.js"></script>

<script>
    $("#clear").click(function () {
        //document.getElementsByTagName("form")[0].reset();

        //$('#txtUserName').next('span').children().text('');
        $('#txtUserName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtUserName').next("div").children("p").children("span").text("");
        $('#txtPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtPassword').next("div").children("p").children("span").text("");
        $('#txtConfirmPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtConfirmPassword').next("div").children("p").children("span").text("");
        $('#txtFirstName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtFirstName').next("div").children("p").children("span").text("");
        $('#txtLastName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtLastName').next("div").children("p").children("span").text("");
        $('#txtNewEmail').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtNewEmail').next("div").children("p").children("span").text("");
        $('#txtPhoneNumber').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtPhoneNumber').next("div").children("p").children("span").text("");
        $('#RoleId').closest("div").siblings('div').children("p").children("span").text("");
        $('#RoleId').next("div").children("p").children("span").text("");
        $('#BranchId').closest("div").siblings('div').children("p").children("span").text("");
        $('#BranchId').next("div").children("p").children("span").text("");
        $('#BranchIdUser').closest("div").siblings('div').children("p").children("span").text("");
        $('#BranchIdUser').next("div").children("p").children("span").text("");
        $('#rbYes').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbYes').next("div").children("p").children("span").text("");
        $('#rbNo').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbNo').next("div").children("p").children("span").text("");
        $('#loanIdMessage span').text("");
        $('#checkBoxMessage span').text("");
        $('#branchDiv').hide();
        $('#branchDivUser').hide();
        $('#rightsSection').hide();
        $('#successSpn').text("");
        $('#errSpn').text("");

    });

    function clearValues_1() {
        //alert('hi');

        $("input[type=text]").each(function () {

            ($(this).removeClass('input-validation-error'));

        });
        $('#txtUserName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtUserName').next("div").children("p").children("span").text("");

        $('#txtPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtPassword').next("div").children("p").children("span").text("");
        $('#txtPassword').removeClass('input-validation-error');
        $('#txtConfirmPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtConfirmPassword').next("div").children("p").children("span").text("");
        $('#txtConfirmPassword').removeClass('input-validation-error');
        $('#txtFirstName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtFirstName').next("div").children("p").children("span").text("");
        $('#txtLastName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtLastName').next("div").children("p").children("span").text("");
        $('#txtNewEmail').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtNewEmail').next("div").children("p").children("span").text("");
        $('#txtNewEmail').removeClass('input-validation-error');
        $('#txtPhoneNumber').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtPhoneNumber').next("div").children("p").children("span").text("");
        $('#txtPhoneNumber').removeClass('valid');
        $('#RoleId').closest("div").siblings('div').children("p").children("span").text("");
        $('#RoleId').next("div").children("p").children("span").text("");
        $('#BranchId').closest("div").siblings('div').children("p").children("span").text("");
        $('#BranchId').next("div").children("p").children("span").text("");
        $('#BranchIdUser').closest("div").siblings('div').children("p").children("span").text("");
        $('#BranchIdUser').next("div").children("p").children("span").text("");
        $('#rbYes').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbYes').next("div").children("p").children("span").text("");
        $('#rbNo').closest("div").siblings('div').children("p").children("span").text("");
        $('#rbNo').next("div").children("p").children("span").text("");
        $('#BranchIdUser').val('');
        $('#BranchId').val('');
        $('#LoanIdUser2').val('');
        //$('#BranchId2').val('');
        // $('#BranchIdUser2').val('');
        document.getElementById("branchid").innerHTML = "";
        document.getElementById("loanid").innerHTML = "";
        $('#loanIdMessage span').text("");
        $('#checkBoxMessage span').text("");
        $('#successSpn').text("");
        $('#errSpn').text("");
        $('#txtUserName').val('');
        $('#txtPassword').val('');
        $('#txtConfirmPassword').val('');
        $('#txtFirstName').val('');
        $('#txtLastName').val('');
        $('#txtNewEmail').val('');
        $('#txtPhoneNumber').val('');
        $('#rbYes').prop('checked', false);
        $('#rbNo').prop('checked', false);

    };
    $(document).on('change', '#RoleId', function () {
        //alert('4');
        //$('#BranchIdUser option:selected').val('');
        //$('#LoanIdUser2 option:selected').val('');
        //$('#BranchId option:selected').val('');
        //$('#selectAll').prop('checked', false);
        //$('.All').prop('checked', false);
        clearValues_1();
        var val = document.getElementById("RoleId").value;
        if (val == '1') {
            $('#branchDiv').hide();
            $('#branchDivUser').hide();
            $('#rightsSection').hide();
            clearValues_1();

        }
        else if (val == '2') {
            //$('#BranchId').val('');
            $('#branchDiv').show();
            $('#branchDivUser').hide();
            $('#rightsSection').hide();
            clearValues_1();
        }
        else if (val == '3') {
            //alert('ggg');
            //$('#BranchIdUser option:selected').val('');
            //alert('3');
            $('#branchDiv').hide();
            $('#LoanIdUser2').val('');
            //$('#BranchId').val('');
            $('#selectAll').prop('checked', false);
            $('.All').prop('checked', false);
            clearValues_1();
            $('#branchDivUser').show();
            $('#rightsSection').show();
            //$('#BranchIdUser').val('');
            //document.getElementById("branchid").innerHTML = "";
            //

            @if (ViewBag.BranchIdUser.Items.Count == 1){
               
                   <text> $('#BranchIdUser2').val(@ViewBag.BranchIdUser.Items[0].BranchId); </text>
                
                    <text>GetLoan($('#BranchIdUser2').val()); </text>

            <text>$('#rightsSection').show(); </text>
            <text> $('#branchDiv').hide(); </text>
                }
            //}
            else{
                    <text> $('#branchDivUser').show();</text>
            <text>$('#branchDiv').hide();</text>
            }
            //$('#branchDivLoan').show();

        }
        else {

            clearValues_1();
            $('#branchDiv').hide();
            $('#branchDivUser').hide();
            $('#rightsSection').hide();
        }
    });

    $('#RoleId').change(function () {
        //alert('4');
        //$('#BranchIdUser option:selected').val('');
        //$('#LoanIdUser2 option:selected').val('');
        //$('#BranchId option:selected').val('');
        //$('#selectAll').prop('checked', false);
        //$('.All').prop('checked', false);
        clearValues_1();
        var val = document.getElementById("RoleId").value;
        if (val == '1') {
            $('#branchDiv').hide();
            $('#branchDivUser').hide();
            $('#rightsSection').hide();
            clearValues_1();

        }
        else if (val == '2') {
            //$('#BranchId').val('');
            $('#branchDiv').show();
            $('#branchDivUser').hide();
            $('#rightsSection').hide();
            clearValues_1();
        }
        else if (val == '3') {
            //alert('ggg');
            //$('#BranchIdUser option:selected').val('');
            //alert('3');
            $('#branchDiv').hide();
            $('#LoanIdUser2').val('');
            //$('#BranchId').val('');
            $('#selectAll').prop('checked', false);
            $('.All').prop('checked', false);
            clearValues_1();
            $('#branchDivUser').show();
            $('#rightsSection').show();
            //$('#BranchIdUser').val('');
            //document.getElementById("branchid").innerHTML = "";
            //

            @if (ViewBag.BranchIdUser.Items.Count == 1){
                
                 <text>$('#BranchIdUser2').val(@ViewBag.BranchIdUser.Items[0].BranchId); </text>
                
                 <text>GetLoan($('#BranchIdUser2').val()); </text>

                 <text>$('#rightsSection').show(); </text>
                 <text>$('#branchDiv').hide(); </text>
            }
                //}
            else{
                 <text>$('#branchDivUser').show(); </text>
                 <text>$('#branchDiv').hide(); </text>
            }
            //$('#branchDivLoan').show();

        }
        else {

            clearValues_1();
            $('#branchDiv').hide();
            $('#branchDivUser').hide();
            $('#rightsSection').hide();
        }
    });
    $('#BranchId').change(function () {
        // $('#BranchId2').val('');
        //alert('3');
        $('#BranchIdUser').val('');
        $('#LoanIdUser2').val('');
        // $('#BranchId2').val('');
        $('#BranchIdUser2').val('');
        document.getElementById("branchid").innerHTML = "";
        document.getElementById("loanid").innerHTML = "";
        $('#loanIdMessage span').text("");
        $('#checkBoxMessage span').text("");
        $('#successSpn').text("");
        $('#errSpn').text("");
    });
    $(document).on('change', '#BranchIdUser', function () {



        $('#LoanIdUser2').val('');
        $('#loanIdMessage span').text("");
        $('#checkBoxMessage span').text("");
        $('#successSpn').text("");
        $('#errSpn').text("");
        //alert(loan);

    });
    $('#BranchIdUser').change(function () {
        //alert('rtr');
        $('#BranchId').val('');
        $('#LoanIdUser2').val('');
        //$('#BranchId2').val('');
        $('#BranchIdUser2').val('');
        document.getElementById("branchid").innerHTML = "";
        document.getElementById("loanid").innerHTML = "";
        $('#loanIdMessage span').text("");
        $('#checkBoxMessage span').text("");
        $('#successSpn').text("");
        $('#errSpn').text("");

        var val = document.getElementById("RoleId").value;
        if (val == '3') {

            var branchL = $('#BranchIdUser option:selected').val();
            //alert(branchL);
            //alert(branchL);
            if (branchL > 0) {
                GetLoan(branchL);
            }


        }


        //else if (val == '3') {
        //    $('#branchDivUser').show();


        //    //$('#branchDivLoan').show();

        //    $('#branchDiv').hide();
        //}
        //else {
        //    $('#branchDiv').hide();
        //    $('#branchDivUser').hide();
        //}
    });
    function SendParaTo(loan) {
        //alert(document.getElementById("loanid").innerHTML);
        document.getElementById("loanid").innerHTML = loan;
        //alert(loan);
    };
    $(document).on('change', '#LoanIdUser2', function () {

        $('#successSpn').text("");
        $('#errSpn').text("");
        $('#loanIdMessage span').text("");
        // $('#checkBoxMessage span').text("");
        var loan = $('#LoanIdUser2 option:selected').val();
        //alert(loan);
        SendParaTo(loan)
    });
    function GetLoan(branchL) {
        $.ajax({
            url: '/UserManagement/GetLoansByBranches',

            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify({ BranchIdL: branchL }),
            success: function (View) {
                $('#rightsSection').html(View);
                //$('#rightsSection').show();
                //$('#rightDiv').show();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // Your handler here...

                // if session expires
                if (jqXHR.status == "404") {
                    window.location.href = '/Login/UserLogin?lbl=Due to inactivity your session has timed out, please log in again.';
                }
            }
        });
    }
    $("#clear").click(function () {
        $('#branchDiv').hide();

    });

</script>

<script type="text/javascript">


    $(".tab.3").parent("li").addClass("active").siblings().removeClass('active');

    //Progress(3);


    //Validation

    // User name validate
    $('#txtUserName').keypress(function (e) {

        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var code = e.which;
            if (this.value.length === 0 && (48 <= code && code <= 57)) {
                //$("#customError span[id^='spnUserName']").text("User name can't be start with numbers");
                this.focus();
                e.preventDefault();
                return;
            }

            var res = BlockText(e.which);
            if (res === 1) {
                //$("#customError span[id^='spnUserName']").text("Please use only letters (a-z) and numbers.");
                e.preventDefault();
                return;
            }
        }
        
    });

    // change to title case

    $('#txtFirstName, #txtLastName').blur(function (e) {
        //ToTitleCase(this.id, this.value);
        if (e.which !== 37 && e.which !== 8 && e.which !== 32)
            ToTitleCase(this.id, this.value);
    });


    //Check maximum length
    $('#txtUserName, #txtFirstName, #txtLastName, #txtPassword, #txtConfirmPassword').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            if (e.which !== 8 && e.which !== 0) {
                var res = CheckMaxLenth(this, this.value, 30);
                if (res === 0) {
                    e.preventDefault();
                    return;
                }
            }
        }
        
    });

    $('#txtPassword, #txtConfirmPassword').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            if (this.value.length === 0 && e.which === 32) {
                e.preventDefault();
                return;
            }
            var array = ['`', '*', '&', '=', '|', ';', '"', '<', '>'];
            var res = InvalidCharacters(this, array, e.which);

            if (res === 1) {
                e.preventDefault();
                return;
            }
            else if (e.which === 92) {
                //$(this).siblings('div').children('span').text("Invalid character.");
                e.preventDefault();
                return;
            }
        }
        
    });

    //Check maximum length for email address and valid characters
    $('#txtNewEmail').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            if (e.which !== 8 && e.which !== 0) {
                var res = CheckMaxLenth(this, this.value, 100);
                if (res === 0) {
                    e.preventDefault();
                    return;
                }
            }
            var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ','];
            res = InvalidCharacters(this, array, e.which);

            if (res === 1) {
                e.preventDefault();
                return;
            }
            else if (e.which === 92 || e.which === 39) {
                //$(this).siblings('div').children('span').text("Invalid character.");
                e.preventDefault();
                return;
            }
        }
        
    });

    $('#txtFirstName, #txtLastName').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            //var array = [' ', '/', '`', '~', '!'];
            var array = ['~', '`', '!', '#', '$', '%', '&', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', ''];
            var res = InvalidCharacters(this, array, e.which);

            if (res === 1) {
                e.preventDefault();
                return;
            }

            if (e.which === 92) {
                //$(this).siblings('div').children('span').text("Invalid character.");
                e.preventDefault();
                return;
            }
        }
        
    });

    $('#txtPhoneNumber').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var res = PhoneNumber(this, e.which);
            if (res === 0) {
                e.preventDefault();
                return;
            }
            if (e.which !== 8 && e.which !== 0) {
                res = CheckMaxLenth(this, this.value, 14);
                if (res === 0) {
                    e.preventDefault();
                    return;
                }
            }
        }
        
    });

    $('#btnCreateUser').click(function () {
    //    //alert('hh');
    //    //alert($('#BranchId option:selected').val());
        if (document.getElementById("loanid").innerHTML == "") {
            //alert('1');
            $('#loanIdMessage span').text("please select a loan.");

        }
        if ($('#RoleId option:selected').val() == 3) {
            checked = $("input[type=checkbox]:checked").length;

            if (!checked) {
                //alert("You must check at least one checkbox.");
                $('#checkBoxMessage span').text("please select at least one right.");
                e.preventDefault();
            }
        }


    //    if (($('#txtUserName').val() != "") && ($('#txtPassword').val() != "") && ($('#txtConfirmPassword').val() != "") && ($('#txtFirstName').val() != "") && ($('#txtLastName').val() != "") && ($('#RoleId option:selected').val() != "")) {
    //        //alert('hh');
    //        {
    //            if ($('#RoleId option:selected').val() == 1) {
    //                alert('1');
    //                InsertUser();
    //            }
    //            else if (($('#RoleId option:selected').val() == 2) && (($('#BranchId2').val() != "") || ($('#BranchId option:selected').val() != ""))) {

    //                alert($('#BranchId2').val());
    //                InsertUser();
    //            }
    //            else if (($('#RoleId option:selected').val() == 3) && (($('#BranchId2').val() != "") || ($('#BranchId option:selected').val() != "")) && (document.getElementById("loanid").innerHTML != "")) {
    //                //alert('3');
    //                var arrRights = modcheck();
    //                var strRights = arrRights.toString();
    //                if (strRights != "") {
    //                    // alert('4');
    //                    InsertUser();
    //                }
    //                else if (strRights == "") {
    //                    alert('4');
    //                    $('#checkBoxMessage span').text("please select at least one.");
    //                    e.preventDefault();
    //                }
    //            }
    //        }
    //    }
    });
    

    $("input[type=text]").click(function () {

        $('#successSpn').text("");
        $('#errSpn').text("");

    });
    $('input').prop('autocomplete', 'off');

</script>



