@model BankLoanSystem.Models.User
@{
    ViewBag.Title = "CreateUser";
    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_SetupProcess.cshtml";

    }
    //WebGrid grid = new WebGrid(Model.UserRightsList, defaultSort: "CreatedDate", canPage: false, ajaxUpdateContainerId: "checkableGridDiv", ajaxUpdateCallback: "GridUpdate");
}


<div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper usersetup_border" style="min-height: 629px;">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <div class="container body-content">

                <div class="row">
                    <div class="container body-content new_container">
                        <div class="setupImage"><img src="~/Images/UserSetupImage.png" width="100" alt=""></div>
                        <div class="setupTitle">
                            <h2>Create User</h2>
                        </div>
                        <div style="clear:both;"></div>
                        <div class="form-horizontal new_form_horizontal">
                            <div class="topErrors">
                                <p class="err_msg">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>
                            </div>
                            <div class="form-horizontal">
                                
                                <div style="clear:both"></div>
                                @if (ViewBag.SuccessMsg != null && ViewBag.SuccessMsg.ToString().Equals("User Successfully Created"))
                                {
                                    using (Ajax.BeginForm("Step3", "SetupProcess", new AjaxOptions()
                                    {

                                        OnFailure = "handleErrorMsg",
                                        HttpMethod = "POST",
                                        InsertionMode = InsertionMode.Replace,
                                        UpdateTargetId = "changeContainer",
                                        LoadingElementId = "loadingDiv"
                                    }, new { id = "form", style = "clear: both;" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <span class="text-success">@ViewBag.SuccessMsg</span>
                                        <div class="form-group">
                                            <div class="button-panel">
                                                <input type="button" id="createNewUser" value="Create a New User" class="btn btn-info left-button" />
                                                

                                            </div>

                                        </div>
                                    }

                                    <script>
                                    $(function () {
                                        $('#createNewUser').click(function () {

                                            $('#loadingDiv').show();
                                            $.ajax({
                                                url: '@Url.Action("Step3")',
                                                type: 'GET',


                                                success: function (partialView) {
                                                    $('#loadingDiv').hide();
                                                    $('#changeContainer').html(partialView);
                                                    $('#changeContainer').show();
                                                },

                                                error: function (request, status, error) {
                                                    //handleErrorMsg(request.responseText);

                                                }
                                            });


                                        });

                                        $(function () {
                                            $('#step4').click(function () {

                                                $('#loadingDiv').show();
                                                $.ajax({
                                                    url: '@Url.Action("Step4")',
                                                    type: 'GET',


                                                    success: function (partialView) {
                                                        $('#loadingDiv').hide();
                                                        $('#changeContainer').html(partialView);
                                                        $('#changeContainer').show();
                                                        Progress(4);
                                                    },
                                                    error: function (request, status, error) {
                                                        //handleErrorMsg(request.responseText);

                                                    }
                                                });
                                            });
                                        });
                                    });

                                    </script>


                                }

                                else
                                {

                                    using (Ajax.BeginForm("Step3", "SetupProcess", new AjaxOptions()
                                    {

                                        OnFailure = "handleErrorMsg",
                                        HttpMethod = "POST",
                                        InsertionMode = InsertionMode.Replace,
                                        UpdateTargetId = "changeContainer",
                                        LoadingElementId = "loadingDiv"
                                    }, new { id = "form" }))
                                    {
                                        @Html.AntiForgeryToken()



                                        <div class="form-horizontal">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>User Name</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtUserName" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Password</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtPassword" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Confirm Password</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtConfirmPassword" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>First Name</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "txtFirstName" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Last Name</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "txtLastName" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Email</label>
                                                </div>
                                                <div class="col-xs-8 text_field">
                                                    @Html.EditorFor(model => model.NewEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtNewEmail" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.NewEmail, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>
                                                        Phone Number<br>
                                                        <span class="optional">(Optional)</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.PhoneNumber2, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtPhoneNumber" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.PhoneNumber2, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>

                                            
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Role</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.DropDownListFor(model => model.RoleId, null, "--Select Role--", htmlAttributes: new { @class = "form-control text_field_input", id = "RoleId" })

                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                                </div>
                                            </div>
                                            <div id="branchDiv" hidden>
                                                @if (ViewBag.CurrUserRoleType !=3)
                    {
                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 lable_style">
                                                            <label>Branch </label>
                                                        </div>
                                                        @if (ViewBag.BranchId.Items.Count == 1)
                        {
                                                            <div class="col-xs-8 text_field short_text_field">
                                                                @Html.HiddenFor(model => model.BranchId, new { @Value = (int)ViewBag.BranchId.Items[0].BranchId,id="BranchId2" })
                                                                @Html.LabelFor(model => model.BranchId, (string)ViewBag.BranchId.Items[0].BranchName, htmlAttributes: new { @class = "form-control text_field_input", id = "RegisteredBranchId", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;" })
                                                            </div>
                                                        }
                                                        else {
                                                            <div class="col-xs-8 text_field short_text_field">
                                                                @Html.DropDownListFor(model => model.BranchId, null, "--Select Branch--", htmlAttributes: new { @class = "form-control", id = "BranchId" })
                                                            </div>
                                                        }
                                                        <div class="err_msg_box">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                }
                                            </div>

                                            <div id="branchDivUser" hidden>
                                                
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>Branch </label>
                                                    </div>
                                                    @if (ViewBag.BranchIdUser.Items.Count == 1)
                                                    {
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.HiddenFor(model => model.BranchIdUser, new { @Value = (int)ViewBag.BranchIdUser.Items[0].BranchId,id="BranchIdUser2" })
                                                        @Html.LabelFor(model => model.BranchIdUser, (string)ViewBag.BranchIdUser.Items[0].BranchName, htmlAttributes: new { @class = "form-control text_field_input", id = "RegisteredBranchIdUser", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;" })
                                                    </div>
                                                   
                                                    }
                                                    else {
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @Html.DropDownListFor(model => model.BranchIdUser, null, "--Select Branch--", htmlAttributes: new { @class = "form-control", id = "BranchIdUser" })
                                                    </div>
                                                    }
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                
                                            </div>
                                            <div id="branchid" class="hidden"></div>
                                            <div id="rightsSection">
                                                
                                            </div>
                                           
                                            <div id="loanid" class="hidden"></div>

                                            <div class="form-group new_form_group clear_next clear_next_bordr">
                                                <div>
                                                    <nav>
                                                        <div class="pager new_pager">
                                                            <div class="button_box algn_left">
                                                                <input value="Back" name="subBack" id="btnPreStep3" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button">
                                                            </div>
                                                            <div class="button_box algn_center">
                                                                <input value="Create" class="btn btn-primary m-b next_clear_button next_back" style="margin-left:10px" type="button" id="btnCreateUser">
                                                            </div>
                                                            <div class="button_box algn_right">
                                                                <input id="clear" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button">
                                                            </div>
                                                            <div style="clear:both"></div>
                                                        </div>
                                                    </nav>
                                                </div>
                                            </div>
                                        </div>

                                    }

                                    <div>
                                    </div>

                                }


                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script language="javascript">

  $(document).ready(function(){

  $('.nav li.active ul').removeClass('in');
  $('.nav li').removeClass('active');
  $('.nav li.user').addClass('active');
  $('.nav li.active ul').addClass('in');
  })
</script>



<script src="~/scripts/CommonFunctions.js"></script>

<script>

    $('#RoleId').change(function () {
        var val = document.getElementById("RoleId").value;
        if (val == '2') {
            $('#branchDiv').show();
            $('#branchDivUser').hide();
        }
        else if (val == '3') {
            $('#branchDivUser').show();

            if (@ViewBag.BranchIdUser.Items.Count == 1){
                //alert($('#BranchIdUser2').val());
                GetLoan($('#BranchIdUser2').val());
            }
           
            //$('#branchDivLoan').show();
            
            $('#branchDiv').hide();
        }
        else {
            $('#branchDiv').hide();
            $('#branchDivUser').hide();
        }
    });
    $('#BranchIdUser').change(function () {
        var val = document.getElementById("RoleId").value;
        if (val == '3') {
            
              var  branchL = $('#BranchIdUser option:selected').val();
            
            //alert(branchL);
              GetLoan(branchL);

        }


        //else if (val == '3') {
        //    $('#branchDivUser').show();


        //    //$('#branchDivLoan').show();

        //    $('#branchDiv').hide();
        //}
        //else {
        //    $('#branchDiv').hide();
        //    $('#branchDivUser').hide();
        //}
    });
    function SendParaTo(loan){
        //alert(document.getElementById("loanid").innerHTML);
        document.getElementById("loanid").innerHTML=loan;
        //alert(loan);
    };
    $(document).on('change','#LoanIdUser2' , function () {
        
       
            
        var  loan = $('#LoanIdUser2 option:selected').val();
        //alert(loan); 
        SendParaTo(loan)
    });
    function GetLoan(branchL) {
        $.ajax({
            url: '/UserManagement/GetLoansByBranches',

            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify({ BranchIdL: branchL }),
            success: function (View) {
                $('#rightsSection').html(View);
                //$('#rightsSection').show();
                //$('#rightDiv').show();
            },
            error: function (reponse) {
                $('#loadingSpan').hide();
                alert("error : " + reponse);
            }
        });
    }
    $("#clear").click(function () {
        $('#branchDiv').hide();

    });

</script>

<script type="text/javascript">
    $(function () {
        $('#btnPreStep3').click(function () {

            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("step2", "SetupProcess")',
                type: 'GET',
                data: { edit: 1 },

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    //handleErrorMsg(request.responseText);

                }
            });
        });
    });

    $(".tab.3").parent("li").addClass("active").siblings().removeClass('active');

    //Progress(3);


    //Validation

    // User name validate
    $('#txtUserName').keypress(function (e) {
        var code = e.which;
        if (this.value.length === 0 && (48 <= code && code <= 57)) {
            //$("#customError span[id^='spnUserName']").text("User name can't be start with numbers");
            this.focus();
            e.preventDefault();
            return;
        }

        var res = BlockText(e.which);
        if (res === 1) {
            //$("#customError span[id^='spnUserName']").text("Please use only letters (a-z) and numbers.");
            e.preventDefault();
            return;
        }
    });

    // change to title case

    $('#txtFirstName, #txtLastName').blur(function (e) {
        //ToTitleCase(this.id, this.value);
        if (e.which !== 37 && e.which !== 8 && e.which !== 32)
            ToTitleCase(this.id, this.value);
    });


    //Check maximum length
    $('#txtUserName, #txtFirstName, #txtLastName, #txtPassword, #txtConfirmPassword').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 30);
        if (res === 0) {
            e.preventDefault();
            return;
        }
    });

    $('#txtPassword, #txtConfirmPassword').keypress(function (e) {
        if (this.value.length === 0 && e.which === 32) {
            e.preventDefault();
            return;
        }
        var array = ['`', '*', '&', '=', '|', ';', '"', '<', '>'];
        var res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }
        else if (e.which === 92) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    //Check maximum length for email address and valid characters
    $('#txtNewEmail').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 100);
        if (res === 0) {
            e.preventDefault();
            return;
        }

        var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ','];
        res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }
        else if (e.which === 92 || e.which === 39) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    $('#txtFirstName, #txtLastName').keypress(function (e) {
        //var array = [' ', '/', '`', '~', '!'];
        var array = ['~', '`', '!', '#', '$', '%', '&', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', ''];
        var res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }

        if (e.which === 92) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    $('#txtPhoneNumber').keypress(function (e) {
        var res = PhoneNumber(this, e.which);
        if (res === 0) {
            e.preventDefault();
            return;
        }

        res = CheckMaxLenth(this, this.value, 15);
        if (res === 0) {
            e.preventDefault();
            return;
        }
    });

    $('#btnCreateUser').click(function () {
        //alert($('hh'));
        //alert($('#BranchId option:selected').val());
        InsertUser();

    });
    function InsertUser() {
        var branch="";
        if ($('#RoleId option:selected').val() == 1) {


        }
        else if ($('#RoleId option:selected').val() == 2) {
            
            if (@ViewBag.BranchId.Items.Count == 1) {
                
                document.getElementById("branchid").innerHTML = $('#BranchId2').val();
                //alert($('#BranchId2').val());
            }
            else if (@ViewBag.BranchId.Items.Count > 1)
            {
                
                document.getElementById("branchid").innerHTML = $('#BranchId option:selected').val();
            }

        }
        else if ($('#RoleId option:selected').val() == 3) {
            if (@ViewBag.BranchIdUser.Items.Count == 1) {
                //alert('1');
                branch = $('#BranchIdUser2').val();
                //alert($('#BranchId2').val());
            }
            else if (@ViewBag.BranchIdUser.Items.Count > 1) {
                branch = $('#BranchIdUser option:selected').val();
            }
            //var branch = $('#BranchIdUser option:selected').val();
        }
        var userObj = {
            "UserName": $('#txtUserName').val(),
            "Password": $('#txtPassword').val(),
            "ConfirmPassword": $('#txtConfirmPassword').val(),
            "FirstName": $('#txtFirstName').val(),
            "LastName": $('#txtLastName').val(),
            "NewEmail": $('#txtNewEmail').val(),
            "PhoneNumber2": $('#txtPhoneNumber').val(),
            "RoleId": $('#RoleId option:selected').val(),
            "BranchId": document.getElementById("branchid").innerHTML,
            "LoanId":document.getElementById("loanid").innerHTML
        };
        $.ajax({
            url: '/UserManagement/InsertDashboardUser',
            data: JSON.stringify(userObj),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (View) {
                if (View != '1') {
                    $(location).attr('href', '/UserManagement/InsertDashboardUser');
                } else {
                    $(location).attr('href', '/UserManagement/InsertDashboardUser');
                }
            }
        });
        //alert(para8);
    }

</script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

