@model  BankLoanSystem.Models.User


@{
    ViewBag.Title = "Assign User Rights";
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>

<script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>
@section AddToHead{
<style>
    .err_msg_box {
        text-align: left;
    }

    #page-wrapper {
        min-height: 568px;
        padding: 0 36px;
        float: none !important;
        /* position: relative !important; */
        margin: auto !important;
    }
    #rights > input {
        float: none;
        margin-right: 10px;
        width: 17px;
        height: 17px;
    }

    #rights {
        text-align: left;
        font-size: 14px;
        font-weight: normal;
        color: #545454;
    }
</style>}




@{Html.RenderAction("LoanInfo", "Unit", new { title = @ViewBag.Title, msg = @ViewBag.Msg });
}

<div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper usersetup_border" style="min-height: 629px;">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <div class="container body-content">

                <div class="row">
                    <div class="container body-content new_container">


                        <div style="clear:both;"></div>
                        <div class="form-horizontal new_form_horizontal">
                            <div class="topErrors">
                                <p class="err_msg">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>
                                <div class="text-danger">@ViewBag.Error</div>
                            </div>
                            <div class="form-horizontal">

                                <div style="clear:both"></div>

                                @if (ViewBag.SuccessMsg != null && ViewBag.SuccessMsg.ToString().Equals("User Rights Successfully Updated"))
                                {
                                    <span class="text-success" id="success">@ViewBag.SuccessMsg</span>
                                }

                                else if (ViewBag.ErrorMsg != null && ViewBag.ErrorMsg.ToString().Equals("Failed To Update User Rights"))
                                {
                                    <span class="text-danger" id="fail">@ViewBag.ErrorMsg</span>
                                }
                               @using (Html.BeginForm("AssignRights", "UserManagement", FormMethod.Post, new { id = "form" }))
                               {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">

                                    <div class="form-group new_form_group">
                                        <div class="control-label col-sm-2 lable_style">
                                            <label>Loan </label>
                                        </div>
                                        <div class="col-xs-8 text_field short_text_field">
                                            @if (ViewBag.LoanId != null && ViewBag.LoanId > 0)
                                            {
                                                @Html.HiddenFor(model => model.LoanId, new { @Value = (int)ViewBag.LoanId ,@id="LoanId"})
                                                @Html.LabelFor(model => model.LoanNumber, (string)ViewBag.LoanNumber, htmlAttributes: new { @class = "form-control text_field_input" })
                                            }

                                        </div>
                                    </div>
                                    <div id="rightDiv">
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>Select User</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @if (ViewBag.userSelectList != null && ViewBag.userSelectList.Count > 0)
                                                {
                                                    @Html.DropDownListFor(model => model.UserId, new SelectList(ViewBag.userSelectList, "UserId", "UserName"), "--Select User--", htmlAttributes: new { @class = "form-control", @style= "height: 34px;", @id="SelectUser" })

                                                }
                                                @if (ViewBag.userSelectList == null || ViewBag.userSelectList.Count <= 0)
                                                {                                                    
                                                  <p class="err_msg new_err_msg"><span class="err_msg new_err_msg" style="margin-top: 33px;">No Active Users</span></p>
                                                }
                                            </div>
                                            <div class="err_msg_box" style="margin-top: 13px;">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" , @id="valid" })</p>
                                            </div>
                                            </div>

                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Select Loan Rights</label>
                                                </div>

                                                <div class="form-group new_form_group">
                                                    <div class="col-sm-6">
                                                        <div id="rights">

                                                            @Html.CheckBox("selectAll", new { @class = "All", @id = "CheckAll" })
                                                            @Html.Label("Select All")
                                                            <br /><br />
                                                            @for (var i = 0; i < Model.UserRightsList.Count; i++)
                                                            {

                                                                @Html.HiddenFor(x => x.UserRightsList[i].rightId)
                                                                @Html.CheckBoxFor(x => x.UserRightsList[i].active, new { @class = "All" ,@id = i+1})
                                                                @Html.DisplayFor(x => x.UserRightsList[i].description)
                                                                <br />
                                                            }
                                                        </div>

                                                    </div>
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg"><div id="checkBoxMessage"><span class="err_msg new_err_msg"></span></div></p>
                                                    </div>

                                                </div>
                                            </div>

                                        </div>

                                        <div class="form-group new_form_group clear_next clear_next_bordr">
                                            <div>
                                                <nav>
                                                    <div class="pager new_pager">
                                                        <div class="button_box algn_left">
                                                            <input value="Dashboard" name="subBack" id="btnPreStep3" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button" onclick="window.location.href='/UserManagement/UserDetails'">
                                                        </div>
                                                        <div class="button_box algn_center">
                                                            <input value="Assign" class="btn btn-primary m-b next_clear_button next_back" style="margin-left:10px" type="submit" id="Submit">
                                                        </div>
                                                        <div class="button_box algn_right">
                                                            <input id="clear" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button">
                                                        </div>
                                                        <div style="clear:both"></div>
                                                    </div>
                                                </nav>
                                            </div>
                                        </div>
                                    </div>
                                   }
                                    <div>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <script>
        $('#Submit').click(function (e) {
            var checked = $("input[type=checkbox]:checked").length;

            if (!checked) {
                //alert("You must check at least one checkbox.");
                $('#checkBoxMessage span').text("please check at least one checkbox.");
                if($('#SelectUser').val() != ""){
                    e.preventDefault();
                }
            }

        });

        $(function () {
            $('#CheckAll').on('change', function () {
                if ($(this).is(':checked')) {
                    //alert('checked');
                    $('.All').prop('checked', true);

                }
                else {
                    //alert('unchecked');
                    $('.All').prop('checked', false);
                }
            });
        });
        forOneUser();
        function forOneUser(){

            @if(ViewBag.userSelectList.Count == 1){
                if (ViewBag.userSelectList !=null)
                {
                    <text>$('#SelectUser').val(@ViewBag.userSelectList[0].UserId);</text>
                }

               <text> getRights();</text>
            }
        }

        $('#SelectUser').change(function () {
            getRights();
        });
        function getRights(){
            var selectedUser = $('#SelectUser').val();
            var loanId = $('#LoanId').val();
            var model = @Html.Raw(Json.Encode(Model));
            $('.All').prop('checked', false);
            $('.All').attr('disabled', true);
            $.ajax({
                url: '/UserManagement/ExistingUserRights',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({ userId: selectedUser, loanId, loanId }),
                success: function (data) {
                    //alert(data);
                    var array = data.split(',');
                    for (var i = 0 ; i < model.UserRightsList.length; i++){
                        for (var j = 0 ; j < array.length; j++){

                            if (model.UserRightsList[i].rightId  === array[j] ) {
                                //alert('checked');
                                var str = '#'+(i+1);
                                $(str).prop('checked', true);
                            }
                        }
                    }
                    if(data.length >0){
                        $('#Submit').val("Update");
                    }else{
                        $('#Submit').val("Assign");
                    }
                    $('.All').attr('disabled', false);
                    checkAll();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Your handler here...

                    // if session expires
                    if (jqXHR.status == "404") {
                        window.location.href = '/Login/UserLogin?lbl=Session expired';
                    }
                }
            });

            $('#success').text("");
            $('#fail').text("");
        }

        $(function () {
            $('.All').on('change', function () {
                $('#checkBoxMessage span').text("");
                checkAll();
            });
        });
        function checkAll(){
            var model = @Html.Raw(Json.Encode(Model));
            var len = model.UserRightsList.length;
            var count =0;
            for (var j = 0 ; j < model.UserRightsList.length; j++){
                var str = '#'+(j+1);
                if ($(str).is(':checked')) {
                    //alert('checked');
                    count++;
                }
            }
            if(count === len){
                $('#CheckAll').prop('checked', true);
            }else{
                $('#CheckAll').prop('checked', false);
            }
            $('#success').text("");
            $('#fail').text("");
        };

        $('#clear').click(function(){
            $('#Submit').val("Assign");
            $('#checkBoxMessage span').text("");
            $('#valid').text("");
            $('#SelectUser').val("");
            //form.reset() ;
            $('#success').text("");
            $('#fail').text("");
        });
    </script>