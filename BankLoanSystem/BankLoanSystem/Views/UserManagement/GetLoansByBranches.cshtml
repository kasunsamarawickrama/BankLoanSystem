@model BankLoanSystem.Models.User
<div id="branchDivLoan">

    <div class="form-group new_form_group">
        <div class="control-label col-sm-2 lable_style">
            <label>Loan </label>
        </div>
        @if (ViewBag.LoanId.Items.Count == 1)
        {
        <div class="col-xs-8 text_field short_text_field">
            @Html.HiddenFor(model => model.LoanId, new { @Value = (int)ViewBag.LoanId.Items[0].LoanId, id = "LoanIdUser" })
            @Html.LabelFor(model => model.LoanId, (string)ViewBag.LoanId.Items[0].LoanNumber, htmlAttributes: new { @class = "form-control text_field_input", id = "RegisteredBranchIdUser", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;" })
        </div>
        }
        else {
        <div class="col-xs-8 text_field short_text_field">
            @Html.DropDownListFor(model => model.LoanId, null, "--Select Loan--", htmlAttributes: new { @class = "form-control", id = "LoanIdUser2" })
        </div>
        }
        <div class="err_msg_box">
            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LoanId, "", new { @class = "text-danger" })</p>
        </div>
    </div>

</div>



<div id="rightDiv">
    <div class="form-group new_form_group">
        <div class="control-label col-sm-2 lable_style">
            <label>Select Loan Rights</label>
        </div>
        <div class="col-xs-8 new_unit_type">
            @if (Model.UserRightsList.Count > 0)
            {
            <div class="col-sm-7">
                @Html.CheckBox("selectAll", new { @class = "All" })
                @Html.Label("Select All")
                <br />
                <div id="rights">
                    @for (var i = 0; i < Model.UserRightsList.Count; i++)
                    {

                        @Html.HiddenFor(x => x.UserRightsList[i].rightId)
                        @Html.CheckBoxFor(x => x.UserRightsList[i].active, new { @class = "All", @id = i.ToString() })
                        @Html.DisplayFor(x => x.UserRightsList[i].description)
                        <br />


                    }
                </div>

            </div>
            }
        </div>
        </div>
        
    </div>


<script type="text/javascript">
    $(function () {
        $('#selectAll').on('change', function () {
            if ($(this).is(':checked')) {
                //alert('checked');
                $('.All').prop('checked', true);

            }
            else {
                //alert('unchecked');
                $('.All').prop('checked', false);
            }
        });
    });
    if(@ViewBag.LoanId.Items.Count==1){
        var loan = $('#LoanIdUser').val();
        SendParaTo(loan);
    }
    @*else if(@ViewBag.LoanId.Items.Count>1){
        var loan = $('#LoanIdUser2 option:selected').val();
        SendParaTo(loan);
    }*@
    //$('#LoanIdUser2').change(function () {



    //    var branchL = $('#LoanIdUser2 option:selected').val();

    //    alert(branchL);
    //    //GetLoan(branchL);




    //    //else if (val == '3') {
    //    //    $('#branchDivUser').show();


    //    //    //$('#branchDivLoan').show();

    //    //    $('#branchDiv').hide();
    //    //}
    //    //else {
    //    //    $('#branchDiv').hide();
    //    //    $('#branchDivUser').hide();
    //    //}
    //});
    function modcheck(){
        var model = @Html.Raw(Json.Encode(Model));
        //console.log(model);
        var arr = new Array();
        for(var j=0,k=0; j< model.UserRightsList.length ;j++){
            var ids = '#'+ j.toString();
            if($(ids).is(':checked')){    
                arr[k] = model.UserRightsList[j].rightId;
                k++;
            }
        }
        return arr;
        //console.log(arr);
    }
    </script>




