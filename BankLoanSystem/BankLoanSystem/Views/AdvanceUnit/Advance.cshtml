@model BankLoanSystem.Models.AdvanceUnit

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<link href="~/Content/pikaday.css" rel="stylesheet" />
<link href="~/Content/theme.css" rel="stylesheet" />
<link href="~/Content/triangle.css" rel="stylesheet" />
<script src="~/scripts/moment.js"></script>
<script src="~/scripts/pikaday.js"></script>


@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@{
    ViewBag.Title = "Advance Unit";
    Layout = "~/Views/Shared/_UnitAdvance.cshtml";
    WebGrid grid = new WebGrid(Model.NotAdvanced, defaultSort: "CreatedDate", ajaxUpdateContainerId: "checkableGrid", ajaxUpdateCallback: "GridUpdate");/**/
   //WebGrid grid1 = new WebGrid(Model.Search, defaultSort: "CreatedDate", selectionFieldName: "selectedRow");// grid with sorting and paging
}
<style type="text/css">
    .gridtable {
        margin: 30px;
        border-collapse: collapse;
        width: 800px;
        background-color: aliceblue;
    }



    .webgrid-header {
        background-color:paleturquoise;
        font-weight: bold;
        color:#337ab7;
    }

    .gridtable th, .gridtable td {
        border: 1px solid cadetblue;
        padding: 5px;
    }

    .webgrid-alternating-row {
        background-color:aliceblue;
        color: #000;
        font-weight:normal;
    }
    .webgrid-row-style
    {
        padding: 3px 7px 2px;
    }
    .gridHead a:hover {
        text-decoration: underline;
    }

    .description {
        width: auto;
    }

    .select {
        background-color:mediumaquamarine;
    }

    .hidden {
        display: none;
    }
     .gridColumn {
       text-align:right ;
    }
</style>



@using (Ajax.BeginForm("Advance", null, new AjaxOptions()
{
    OnFailure = "handleError",
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "changeContainer",
    LoadingElementId = "loadingDiv"
}, new { id = "form" }))
{

    <div id="noUnitLabelDiv" class="info-unit" style="float: unset; font:medium;color:red;">
        @Html.Label("Not advance units not found", htmlAttributes: new { @class = "control-label col-sm-8", @style = "float:unset" })
    </div>
    <div class ="info-unit" id ="checkableGridDiv"style="margin-top:10px;padding:unset">
        <div style="overflow-x: hidden;overflow-y: scroll;height: 200px;">
            @grid.GetHtml(
                  tableStyle: "gridtable",
                 headerStyle: "webgrid-header",

                 alternatingRowStyle: "webgrid-alternating-row",
                 rowStyle: "webgrid-row-style",
                 htmlAttributes: new { id = "checkableGrid" },
                 columns: grid.Columns(
                 grid.Column(
                      format:@<text><input type="checkbox" value="@item.UnitId" name="ids" class="checkboxAll" id="all"/></text>
                         , header: "{checkall}"

                 ), //grid.Column("", "select all", style: "gridColumn", format:@<text>@{<label id="chkText" class="cost"></label>}</text>),
                      grid.Column(
                         "CreatedDate",
                         "Date Entered",
                         format: (item) => string.Format("{0:MM/dd/yyyy}", item.CreatedDate)
                     ),
                 grid.Column("VIN/HIN/serial #", "VIN/HIN/serial #", canSort: false, format:@<text>@{<label id="vin" class="vin">@item.IdentificationNumber</label>}</text>),
                      grid.Column("Year", "Year", format:@<text>@{<label id="year" class="year">@item.Year</label>}</text>),
                      grid.Column("Make", "Make", format:@<text>@{<label id="make" class="make">@item.Make</label>}</text>),
                     grid.Column("Model", "Model", format:@<text>@{<label id="model" class="model">@item.Model</label>}</text>),
                     grid.Column("Cost", "Cost", style: "gridColumn", format:@<text>@{<label id="cost" class="cost">@item.Cost</label>}</text>),
                      grid.Column("Advance Amount", "Advance Amount", canSort: false, style: "gridColumn", format:@<text>@{<label id="am" class="advanceAmount">@item.AdvanceAmount</label>}</text>)
        )
    )

        </div>
        <div id="subtotal"> Current Total to Advance : $ 0 </div>
        <div id="unitid" class="hidden"></div>
    </div>
}
    <div class ="info-unit" id="advanceAllDiv" style="margin-top:10px">
        <div class="form-group">
            <div class="control-label col-sm-3" style="text-align:right;padding-top:5px">
                @Html.Label("AdvanceDate", htmlAttributes: new { })<span style="color:red"> *</span>
            </div>
            <div class="col-xs-3" id="advanceDateAll" >
                @Html.EditorFor(model => model.AdvanceDate, new { htmlAttributes = new { @class = "form-control",  @id = "startDate", autocomplete = "off", @disabled = "disabled" } })
        </div>
            <input type="submit" value="Advance all selected items" id="btnAdvanceAll" class="btn btn-primary m-b" style="margin-left:60px" disabled/>
        </div>
    </div>






<form>
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="info-unit" id="searchDiv" style="margin-top:10px;padding-top:0px">
            <div class="control-label col-lg-10" id="searchLabelDiv" style="color:dodgerblue;">
                <h5>@Html.Label("Search Units", htmlAttributes: new { })</h5>
            </div>
            <div class="form-group">
                @Html.Label("VIN/HIN/Serial", htmlAttributes: new { @class = "control-label col-sm-3", @style = "text-align: right;" })
                <div class="col-sm-4">
                    @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control", @id = "identificationNumberSearch", @placeholder = "VIN/HIN/Serial", @maxlength = "20" } })
                    @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
                </div>



                @Html.Label("Year", htmlAttributes: new { @class = "control-label col-sm-1", @style = "text-align: right;padding-left:20px" })
                <div class="col-sm-2">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @id = "yearSearch", @placeholder = "Year", @maxlength = "4", @onkeypress = "return onlyDotsAndNumbers(event)" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.Label("Make", htmlAttributes: new { @class = "control-label col-sm-3", style = "text-align:right" })
                <div class="col-sm-2">
                    @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control", @id = "makeSearch", @placeholder = "Make", @maxlength = "20" } })
                    @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                </div>



                @Html.Label("Model", htmlAttributes: new { @class = "control-label col-sm-3", style = "text-align:right" })
                <div class="col-sm-2">
                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", @id = "vehicleModelSearch", @placeholder = "Model", @maxlength = "50" } })
                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <input type="button" name="search" value="Search" id="btnSearch" class="btn btn-info cancel" style="float:right;margin-left:200px;margin-right:200px" />

                <input type="button" value="Clear" id="btnClear" class="btn btn-default cancel" style="float:left;margin-left:200px" />

            </div>

        </div>
      
            
        </div>


    <div class="form-horizontal" style="margin-bottom:10px;margin-top:10px">
        <div class="info-unit" id="searchGrid1" style="margin-top:10px;padding:unset">
   

        </div>
    </div>

<div class="form-horizontal" style="margin-bottom:10px">

    

    <div class="info-unit" id="unitDetailDiv" style="margin-top:10px;padding-top:20px">
        
        <div class="form-group">
            <div class="control-label col-sm-2">
                @Html.Label("VIN/HIN/Serial", htmlAttributes: new { @id = "iVIN" })

            </div>
            <div class="col-xs-4">
                @Html.Editor("iVin", new { @id = "iVin", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>


            <div class="control-label col-sm-2">
                @Html.Label("Year", htmlAttributes: new { })

            </div>
            <div class="col-xs-4">
                @Html.Editor("iYear", new { @id = "iYear", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>

            </div>

        <div class="form-group">
            <div class="control-label col-sm-2">
                @Html.Label(" Make", htmlAttributes: new { })

            </div>
            <div class="col-xs-4">
                @Html.Editor("iMake", new { @id = "iMake", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>
            <div class="control-label col-sm-2">
                @Html.Label("Model", htmlAttributes: new { })

            </div>
            <div class="col-xs-4">
                @Html.Editor("iModel", new { @id = "iModel", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-2">
                @Html.Label("Price", htmlAttributes: new { })

            </div>
            <div class="col-xs-4">
                @Html.Editor("iCost", new { @id = "iCost", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>




            <div class="control-label col-sm-2">
                @Html.Label("Advance Amount", htmlAttributes: new { })

            </div>
            <div class="col-xs-4">
                @Html.Editor("iAdvance", new { @id = "iAdvance", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

               
                <div id="tagscloud"><span class="text-danger"></span></div>
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-3">
                @Html.Label("AdvanceDate", htmlAttributes: new { })<span style="color:red"> *</span>
            </div>


            <div class="col-xs-4">


                @Html.EditorFor(model => model.AdvanceDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "MM/DD/YYYY", @id = "advanceDate", autocomplete = "off", @disabled = "disabled" } })

            </div>

        </div>

        <div class="form-group">
            <input type="submit" name="Advance" value="Advance" id="btnAdvance" class="btn btn-primary m-b" style="float:right;margin-right:200px;margin-left:200px" disabled />

            <input type="button" value="Cancel" id="btnCancel" class="btn btn-default cancel" style="float:left;margin-left:200px" />
        </div>
            


        </div>
                      
                        
                  
    </div>
        
</form>



<script type="text/javascript">

        function onlyDotsAndNumbers(event) {
            var charCode = (event.which) ? event.which : event.keyCode
            if (charCode == 46) {
                return true;
            }
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }
    $("#btnCancel").click(function () {
        ClearTextBoxValues();

        total = 0;
        checkCount = 0;
        $("#btnAdvance").attr("disabled", "disabled");
        $("#btnAdvanceAll").attr("disabled", "disabled");
        $("#advanceDate").attr("disabled", "disabled");
        $("#startDate").attr("disabled", "disabled");

        var count = 0;
        $("#checkableGrid").find("input:checkbox").each(function () {
            this.checked = false;
            if (count > 0) {
                $(this).parents('tr').css('background', 'transparent');
            }
            count++;
        });
        document.getElementById('all').checked = false;
        document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
    });

    $("#btnClear").click(function () {

       $("#identificationNumberSearch").val('');
        $("#yearSearch").val('');
        $("#makeSearch").val('');
        $("#vehicleModelSearch").val('');
        

    });

    $("#btnSearch").click(function () {
        
        var para1 = $("#identificationNumberSearch").val();
        var para2 = $("#yearSearch").val();
        var para3 = $("#makeSearch").val();
        var para4 = $("#vehicleModelSearch").val();
        Search(para1, para2, para3, para4);

    });

    function Search(para1, para2, para3, para4) {

        $.ajax({
            url: '/AdvanceUnit/SearchUnit',
            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify({ identificationNumber: para1, year: para2, make: para3, vehicleModel: para4 }),
            success: function (View) {
                $('#searchGrid1').html(View);
                $('#searchGrid1').show();
            },
            error: function (reponse) {
                $('#loadingSpan').hide();
                alert("error : " + reponse);
            }
        });
    }
   $(document).ready(function () {

       if ($('#checkableGrid').children('tbody').children('tr').length == 0) {
           $("#checkableGridDiv").hide();
           $("#advanceAllDiv").hide();
           $("#searchDiv").hide();
           $("#searchGrid1").hide();
           $("#unitDetailDiv").hide();
           $("#noDataLabelDiv").hide();
           $("#noUnitLabelDiv").show();
           $("#searchLabelDiv").hide();
           
       }
       else if (($('#checkableGrid').children('tbody').children('tr').length > 0) && ($('#searchResultGrid').children('tbody').children('tr').length > 0)) {
           $("#checkableGridDiv").show();
           $("#advanceAllDiv").show();
           $("#searchDiv").show();
           $("#searchGrid1").show();
           $("#unitDetailDiv").show();
           $("#noDataLabelDiv").hide();
           $("#noUnitLabelDiv").hide();
           $("#searchLabelDiv").show();
       }
            else if (($('#checkableGrid').children('tbody').children('tr').length > 0) && ($('#searchResultGrid').children('tbody').children('tr').length == 0)) {
           $("#checkableGridDiv").show();
           $("#advanceAllDiv").show();
           $("#searchDiv").show();
           $("#unitDetailDiv").show();
           $("#searchGrid1").hide();
           $("#noDataLabelDiv").show();
           $("#noUnitLabelDiv").hide();
           $("#searchLabelDiv").show();
       }
       
   });

</script>


        <script type="text/javascript">
            var total = 0;
            var checkCount = 0;

            function GridUpdate() {
               // var $ctrl2 = $('<input />', {type: 'checkbox',id: "cbSelectAll"});
                 var ctrl =  
                //$('.gridtable thead tr th:first').html(
                    $('<input />', {
                        type: 'checkbox',
                        id: "cbSelectAll",
                        click: function () {
                            var checkboxes = $(this).closest('table').find('tbody tr td input[type="checkbox"]');
                            checkboxes.prop('checked', $(this).is(':checked'));
                            var chk = checkboxes.prop('checked');
                            if (chk) {
                                var gg = $('<div />').attr({ id: 'someID' }).html(' Deselect ');
                                $('.gridtable thead tr th:first').html(gg.prepend(ctrl));
                            } else {
                                var gg = $('<div />').attr({ id: 'someID' }).html(' Select ');
                                $('.gridtable thead tr th:first').html(gg.prepend(ctrl));
                            }
                            total = 0;
                            $('.advanceAmount').each(function () {
                                var tr = $(this).parents('tr:first');

                                if (document.getElementById('all').checked) {
                                    total = total + parseFloat(tr.find("#am").text());
                                    checkCount++;

                                    $(this).parents('tr').css('background', 'lightblue');
                                } else {
                                    checkCount = 0;
                                    total = 0;
                                    $(this).parents('tr').css('background', 'transparent');
                                }
                                document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                                $("#btnAdvanceAll").attr("disabled", "disabled");
                                $("#startDate").attr("disabled", "disabled");

                            });

                            if (checkCount > 1) {
                                ClearTextBoxValues();
                            }

                        }
                    })//);

               

                var gg =$('<div />').attr({id: 'someID' }).html('Select ');
                $('.gridtable thead tr th:first').html(gg.prepend(ctrl));

                //$('.gridtable thead tr th:first').html(ctrl);



            //    $('.gridtable thead tr th:first').html(
            //       // "<span>Select All</span>".prepend(
            //    $('<input />', {
            //        type: 'checkbox',
            //        id: "cbSelectAll",                    
            //        click: function () {
            //            var checkboxes = $(this).closest('table').find('tbody tr td input[type="checkbox"]');
            //            checkboxes.prop('checked', $(this).is(':checked'));
            //            //checkboxes.innerText = 'testttt';
                       
            //            total = 0;
            //            $('.advanceAmount').each(function () {
            //                var tr = $(this).parents('tr:first');

            //                if (document.getElementById('all').checked) {
            //                    total = total + parseFloat(tr.find("#am").text());
            //                    checkCount++;

            //                    $(this).parents('tr').css('background', 'lightblue');
            //                } else {
            //                    checkCount = 0;
            //                    total = 0;
            //                    $(this).parents('tr').css('background', 'transparent');
            //                }
            //                document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
            //                $("#btnAdvanceAll").attr("disabled", "disabled");                            
            //                $("#startDate").attr("disabled", "disabled");
            //                alert($('#chkText').val());
            //                $('.chkText').text = 'aaa';

            //            });

            //            if (checkCount > 1) {
            //                ClearTextBoxValues();
            //            }

            //        }
            //    })//.appendTo()
            //    // $(this).append("<span>Select All</span>");
            ////)
            //    );

                //var $ctrl = $('<label />').html('Hello world').prepend($('<input/>').attr({ type: 'checkbox', id: 'someID' }));

                //$('body').append($ctrl);

                $('.checkboxAll').change(function () {
                    var tr = $(this).parents('tr:first');
                    
                    var checked = tr.find("#all").is(':checked');
                    if (checked) {
                        total = total + parseFloat(tr.find("#am").text());
                        checkCount++;
                        $(this).parents('tr').css('background', 'lightblue');
                    } else {
                        total = total - parseFloat(tr.find("#am").text());
                        checkCount--;
                        $(this).parents('tr').css('background', 'transparent');
                    }


                    if (checkCount == 1) {
                        if (checked) {

                            SetTextBoxValues(tr);
                        } else {
                            $('.advanceAmount').each(function () {

                                var tr = $(this).parents('tr:first');
                                var checked = tr.find("#all").is(':checked');

                                if (checked) {

                                    SetTextBoxValues(tr);
                                }
                            });
                        }
                    }                    
                    else {
                        
                        ClearTextBoxValues();
                        document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                    }

                    if (checkCount > 0) {
                        var chkText = $('<div />').attr({ id: 'someID' }).html(' Select');
                        $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                        //ChangeCheckBoxText('select ');

                        var totalRows = $("#checkableGrid td :checkbox").length;
                        var checked = $("#checkableGrid td :checkbox:checked").length;

                        if (checked == totalRows) {
                            var chkText = $('<div />').attr({ id: 'someID' }).html(' Deselect');
                            $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                        }
                    }

                });
            }

            $(function () {
                GridUpdate();
            });

            

            $(document).on('click', 'tbody', (function (e) {
                var target = $(e.target);
                if (target.parents('#checkableGrid').length) {
                    
                
                var $td = $(e.target).closest("td");
                var rowIndex = $td.parent().index();
                rowIndex++;
                var ColIndex = $td.parent().children().index($td);
                var table = document.getElementById("checkableGrid");
                var row = $("tr:eq(" + rowIndex + ")", '#checkableGrid');
                if (ColIndex != 0) {
                    var checked = row.find("#all").prop('checked');
                    if (!checked) {
                        row.find("#all").prop('checked', true);
                        row.css('background', 'lightblue');

                        checkCount++;
                        total = total + parseFloat(row.find("#am").text());

                        if (checkCount == 1) {
                            SetTextBoxValues(row);
                        }
                        else {
                           
                            SetRadioBtnHeaderChecked();
                            ClearTextBoxValues();
                            document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                           
                        }
                    }
                } else {
                    SetRadioBtnHeaderChecked();
                }
                }
            }));          

            $(document).ready(function () {
                $("#content tbody tr").each(function (i, row) {
                    var $actualRow = $(row);
                    if ($actualRow.find('input[type=checkbox]').prop('checked') == true) {
                        $actualRow.css('background-color', '#EAF2D3');
                    }
                    else {
                        $actualRow.css('background-color', '#FF9E9E');
                    }
                });
            });

            $('#btnAdvance').click(function (e) {

                if ($("#tagscloud span").text() != "") {
                    e.preventDefault();
                }

                else if ($('#iVin').val() != '') {
                    
                    var unit = {
                        "UnitId": $('#unitid').text(),
                        "IdentificationNumber": $('#iVin').val(),
                        "AdvanceAmount": $('#iAdvance').val(),
                        "AdvanceDate": $('#advanceDate').val()
                    };

                    $.ajax({
                        url: '/AdvanceUnit/UpdateAdvance/',
                        data: JSON.stringify(unit),
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        success: function (View) {
                            //$('#container').html(View);
                        $(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                            //$('#checkableGridDiv').html(View);
                            //$('#container').show();
                            
                        }
                    });
                }
            });

            $('#btnAdvanceAll').click(function () {
                if (checkCount > 1) {
                    var data = { ItemList: [] };
                    $('.advanceAmount').each(function () {
                        var tr = $(this).parents('tr:first');
                        var checked = tr.find("#all").is(':checked');
                        if (checked) {
                            data.ItemList.push({ UnitId: tr.find("#all").val(), IdentificationNumber: tr.find("#vin").text(), AdvanceAmount: tr.find("#am").text(), AdvanceDate: $('#startDate').val() });

                        }
                    });

                    $.ajax({
                        url: '/AdvanceUnit/UpdateAdvanceAll/',
                        data: JSON.stringify(data),
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',

                        success: function (View) {
                            $(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                            //$('#changeContainer').html(partialView);
                            //$('#changeContainer').show();
                        }
                    });
                }

            });

            function ClearTextBoxValues() {
                $('#ivin').val('');
                $('#iVin').val('');
                $('#iYear').val('');
                $('#iMake').val('');
                $('#iModel').val('');
                $('#iCost').val('');
                $('#iAdvance').val('');
                $("#btnAdvance").attr("disabled", "disabled");
                $("#btnAdvanceAll").removeAttr("disabled");
                $("#advanceDate").attr("disabled", "disabled");
                $("#startDate").removeAttr("disabled");
            }

            function SetTextBoxValues(tr) {
                $('#iVin').val(tr.find("#vin").text());
                $('#iYear').val(tr.find("#year").text());
                $('#iMake').val(tr.find("#make").text());
                $('#iModel').val(tr.find("#model").text());
                $('#iCost').val(tr.find("#cost").text());
                $('#iAdvance').val(tr.find("#am").text());
                document.getElementById("unitid").innerHTML = tr.find("#all").val();
                document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ "; 
                @if(ViewBag.loanDetails.isEditAllowable == true)
                {
                    <text> $('#iAdvance').removeAttr('disabled'); </text>
                }
                
                $("#btnAdvanceAll").attr("disabled", "disabled");
                $("#btnAdvance").removeAttr("disabled");
                $("#startDate").attr("disabled", "disabled");
                $("#advanceDate").removeAttr("disabled");
               
               
               
            }

            function SetRadioBtnHeaderChecked() {
                var totalRows = $("#checkableGrid td :checkbox").length;
                var checked = $("#checkableGrid td :checkbox:checked").length;

                if (checked == totalRows) {
                    var chkText = $('<div />').attr({ id: 'someID' }).html(' Deselect');
                    //alert(chkText);
                    //$('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                    //$('#checkableGrid thead tr th:first').html(chkText.prepend(ctrl));

                    $("#checkableGrid").find("input:checkbox").each(function () {
                        this.checked = true;

                    });
                }
                else {
                    
                    $("#cbSelectAll").removeAttr("checked");
                }
            }

            function ChangeCheckBoxText(value) {
                var chkText = $('<div />').attr({ id: 'someID' }).html(value);
                $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
            }

            var startPicker = new Pikaday({
             field: document.getElementById('startDate'),
                format: 'l'


            });

            startPicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
            startPicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));

            var advDatePicker = new Pikaday({
                field: document.getElementById('advanceDate'),
                format: 'l'


            });

            advDatePicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
            advDatePicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));




            $('#iAdvance').keypress(function (e) {
                var cost = document.getElementById('iCost').value;

                if ((e.which >= 48 && e.which <= 57) || e.which === 46 || e.which === 8) {
                    var val = this.value;
                    
                    if (e.which === 46 || e.which === 8) {


                    } else {
                        if (val.length + 1 > cost.length) {
                            $("#tagscloud span").fadeIn();
                            $(this).addClass('input-validation-error');
                            $("#tagscloud span").text("Advance can not be higer than cost/ input two decimal point only");
                            $("#tagscloud span").delay(1000).fadeOut();
                            $(this).removeClass('input-validation-error');
                            $("#tagscloud span");
                            e.preventDefault();
                        }

                    }

                } else {
                    $("#tagscloud span").fadeIn();
                    $(this).addClass('input-validation-error')
                    $("#tagscloud span").text("Advance must be a positive number");
                    $("#tagscloud span").delay(1000).fadeOut();
                    $(this).removeClass('input-validation-error');
                    e.preventDefault();
                }
            });

            $('#iAdvance').blur(function () {

                var cost = document.getElementById('iCost').value;
  

                var val = $.trim($(this).val());

                if (val.indexOf(',') > -1) {
                    val = val.replace(',', '');
                }
             
                var num = parseFloat(val);
                var num = num.toFixed(2);
                if (isNaN(num)) {
                    num = '';
                }


               

                if (isNaN(num)) {
                  
                    $("#tagscloud span").fadeIn();
                    $(this).addClass('input-validation-error');
                    $("#tagscloud span").text("Advance must be a positive number");
                   
                }
                else if (Number(num) > Number(cost)) {

                    $("#tagscloud span").fadeIn();
                    $(this).addClass('input-validation-error');
                    $("#tagscloud span").text("Advance must be less than cost");


                }

                else if (Number(num) <= 0) {
                    $("#tagscloud span").fadeIn();
                    $(this).addClass('input-validation-error');
                    $("#tagscloud span").text("Advance must be greater than zero");
                 
                } else {
                    $("#tagscloud span").fadeOut();
                    $(this).removeClass('input-validation-error');
                    $("#tagscloud span").text("");

                }


                $(this).val(num);
            });




        </script>
<style>
    .info-unit {
        margin-left: 0px;
        margin-right: 20px;
        border-radius: 15px;
        border: 2px solid #8D987E;
        padding: 20px 20px 10px 20px;
    }

    .form-horizontal .control-label {
        text-align: left;
        padding-left: 60px;
    }
</style>







