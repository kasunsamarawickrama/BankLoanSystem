
@model BankLoanSystem.Models.AdvanceUnit

@{
    WebGrid grid1 = new WebGrid(Model.Search, defaultSort: "CreatedDate", selectionFieldName: "selectedRow" , canPage:false);// grid with sorting and paging
}

@if (Model.Search.Count() != 0)
{
    <span class="icon-help_outline help-search-select" style="float:left;padding-left: 0px;"></span>
    <div id="searchGrid" @*style="overflow-x: hidden;overflow-y: scroll;height: 200px;"*@>
        @grid1.GetHtml(
               tableStyle: "gridtable",
                     headerStyle: "webgrid-header",

                     alternatingRowStyle: "webgrid-alternating-row",
                     selectedRowStyle: "select",
                     rowStyle: "webgrid-row-style",
                     htmlAttributes: new { id = "searchResultGrid" },
                     columns: grid1.Columns(
                    
                     grid1.Column(
                             "CreatedDate",
                             "Date Entered", canSort: false, style: "gridColumnOthers",
                             format: (item) => string.Format("{0:MM/dd/yyyy}", item.CreatedDate)
                         ),
                     grid1.Column("VIN / HIN / Serial #", "VIN / HIN / Serial #", canSort: false, style: "gridColumnVIN", format:@<text>@{<label id="vin" class="vin">@item.IdentificationNumber</label><input type="hidden" value="@item.UnitId" name="ids" class="checkboxAll" id="all" />}</text>),
                     grid1.Column("Year", "Year", canSort: false, style: "gridColumnSmall", format:@<text>@{<label id="year" class="year">@item.Year</label>}</text>),
                     grid1.Column("Make", "Make", canSort: false, style: "gridColumnOthers", format:@<text>@{<label id="make" class="make">@item.Make</label>}</text>),
                     grid1.Column("Model", "Model", canSort: false, style: "gridColumnOthers", format:@<text>@{<label id="model" class="model">@item.Model</label>}</text>),
                     grid1.Column("Cost", "Cost ($)", style: "gridColumn", canSort: false, format:@<text>@{<label id="cost" class="cost">@Convert.ToDecimal(item.Cost).ToString("#,##0.00")</label>}</text>),
                     grid1.Column("Advance Amount", "Advance Amount ($)", style: "gridColumn", canSort: false, format:@<text>@{<label id="am" class="advance">@Convert.ToDecimal(item.AdvanceAmount).ToString("#,##0.00")</label>}</text>)
                 ))
    </div>

    <script>
    $(function () {

        $('#searchResultGrid').children('tbody').children('tr').click(function () {
            var tr = $(this);
            
            $(this).css('background', 'lightblue');
            $(this).siblings().css('background', 'aliceblue');
            SetTextBoxValues(tr);
            ClearMainGrid();
        });
    });

    $('.help-search-select').click(function () {

        $('.help-text h4').html("Select a Unit");
        $('.help-text p').html(" &nbsp;&nbsp; You can select a single unit from this grid to advance.");

    });
    </script>

}
else {
    <div id="noDataLabelDiv" style="padding-bottom: 15px;width:870px;float: unset;margin-top:10px; font:medium;color:red;text-align:center">
        @*@Html.Label("No units matching the search could be found.", htmlAttributes: new { @class = "control-label col-sm-3" ,@style = "float:unset" })*@
        <label>No units matching the search could be found.</label>
    </div>

}

@*<script>
    // Change the selector if needed
    var table = $('#searchResultGrid'),
        bodyCells = table.find('tbody tr:first').children(),
        colWidth;

    // Adjust the width of thead cells when window resizes
    $(window).resize(function () {
        // Get the tbody columns width array
        colWidth = bodyCells.map(function () {
            return $(this)[0].getBoundingClientRect().width;
        }).get();

        // Set the width of thead columns
        table.find('thead tr').children().each(function (i, v) {
            $(v).outerWidth(colWidth[i]);
        });
    }).resize(); // Trigger resize handler

    $(window).bind("load", function () {

        // Get the tbody columns width array
        colWidth = bodyCells.map(function () {
            return $(this)[0].getBoundingClientRect().width;
        }).get();

        // Set the width of thead columns
        table.find('thead tr').children().each(function (i, v) {
            $(v).outerWidth(colWidth[i]);
        });
    });
</script>*@