
@model BankLoanSystem.Models.Fees
@{
    ViewBag.Title = "Step8";

    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_SetupProcess.cshtml";
    }
}
@using BankLoanSystem.Models;
<script src="~/scripts/jquery-1.10.2.min.js"></script>
<script src="~/scripts/jquery.validate.min.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/scripts/CommonFunctions.js"></script>


<div class="form-horizontal">


    <div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper lonesetup_border" style="min-height: 472px;">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <div class="container body-content">
                    <div class="row">
                        <div class="container body-content new_container">
                            <div class="setupImage"><img src="~/Images/loanSetupImage.png" width="100" alt=""></div>
                            <div class="setupTitle"><h2>Fees</h2></div>
                            <div style="clear:both;"></div>
                            @using (Ajax.BeginForm("Step8", "SetupProcess", new AjaxOptions()
                            {

                                OnFailure = "handleErrorMsg",
                                HttpMethod = "POST",
                                InsertionMode = InsertionMode.Replace,
                                UpdateTargetId = "changeContainer",
                                LoadingElementId = "loadingDiv"
                            }, new { id = "form" }))
                            {

                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div>
                                        <hr>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 mLable">
                                                <h3 class="text_algn" style="font-size: 16px;"><label>Per Item Advance Fee</label></h3>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @{
                                                    List<SelectListItem> listItemsoption = new List<SelectListItem>();

                                                    listItemsoption.Add(new SelectListItem
                                                    {
                                                        Text = "Yes",
                                                        Value = "1"
                                                    });
                                                    listItemsoption.Add(new SelectListItem
                                                    {
                                                        Text = "No",
                                                        Value = "2"
                                                    });
                                                }
                                                @Html.HiddenFor(model => model.LoanId)
                                                @Html.HiddenFor(model => model.isEdit)
                                                @Html.DropDownListFor(model => model.AdvanceId, listItemsoption, "-- select --", new { @id = "dropDownAdvance", @class = "form-control col-sm-2 text_field_input", onChange = "changeDropDownValueAdvance();" })
                                            </div>
                                            <div class="err_msg_box  mErrMsgBox">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.AdvanceId, "", new { @class = "text-danger" })</p>
                                            </div>
                                        </div>

                                        <div id="advance">
                                            <div class="form-group new_form_group">

                                                <div class="control-label col-sm-2 mLable">
                                                    <label>Per Unit Advanced Fee Amount</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.AdvanceAmount, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input short_text_field a", @id = "advanceAmount", style = "text-align:right" } })
                                                </div>
                                                <div class="err_msg_box  mErrMsgBo">
                                                    <p class="err_msg new_err_msg" style="padding-left: 51px;">@Html.ValidationMessageFor(model => model.AdvanceAmount, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>

                                            @*@if (ViewBag.isLender == true)
                                                {
                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 mLable">
                                                            <label>Fee Complete auto reminder?</label>
                                                        </div>
                                                        <div class="control-label col-sm-2">
                                                            @Html.RadioButtonFor(model => model.IsAdvanceFeeCompleteEmailReminder, true, new { @id = "needReminderAdvanceCompleteT" }) Yes
                                                            @Html.RadioButtonFor(model => model.IsAdvanceFeeCompleteEmailReminder, false, new { @id = "needReminderAdvanceCompleteF" }) No
                                                        </div>
                                                        <div class="err_msg_box  mErrMsgBo">
                                                            <p class="err_msg new_err_msg" style="padding-left: 51px;">@Html.ValidationMessageFor(model => model.IsAdvanceFeeCompleteEmailReminder, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                    <div id="remindEmailAdvanceComplete">
                                                        <div class="form-group new_form_group">
                                                            <div class="control-label col-sm-2 mLable">
                                                                @Html.LabelFor(model => model.AdvanceFeeDealerEmail, htmlAttributes: new { })
                                                            </div>
                                                            <div class="col-xs-8 text_field short_text_field" style="width: 325px;">
                                                                @Html.EditorFor(model => model.AdvanceFeeDealerEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input e dueEmail", @id = "advanceDealerEmail", placeholder = "example@example.com" } })
                                                            </div>
                                                            <div class="err_msg_box  mErrMsgBox">
                                                                <p class="err_msg new_err_msg"> @Html.ValidationMessageFor(model => model.AdvanceFeeDealerEmail, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>

                                                        <div class="form-group new_form_group">
                                                            <div class="control-label col-sm-2 mLable">
                                                                @Html.LabelFor(model => model.AdvanceFeeDealerEmailRemindPeriod, htmlAttributes: new { })
                                                            </div>
                                                            <div class="col-xs-8 text_field short_text_field" style="width: 110px;">
                                                                @Html.EditorFor(model => model.AdvanceFeeDealerEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input x remindPeriod", @id = "advanceDealerEmailRemindPeriod", placeholder = "days" } })

                                                            </div>
                                                            <div class="err_msg_box  mErrMsgBox">
                                                                <p class="err_msg new_err_msg"> @Html.ValidationMessageFor(model => model.AdvanceFeeDealerEmailRemindPeriod, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }*@

                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 mLable">
                                                    <label>Due Type</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @{
                                                        List<SelectListItem> listItems2 = new List<SelectListItem>();
                                                        listItems2.Add(new SelectListItem
                                                        {
                                                            Text = "Time of Advance",
                                                            Value = "Time of Advance"
                                                        });
                                                        listItems2.Add(new SelectListItem
                                                        {
                                                            Text = "Once a Month",
                                                            Value = "Once a Month"
                                                        });
                                                        listItems2.Add(new SelectListItem
                                                        {
                                                            Text = "Vehicle Payoff",
                                                            Value = "Vehicle Payoff"
                                                        });

                                                    }
                                                    @Html.DropDownListFor(model => model.AdvanceDue, listItems2, "-- select due type --", new { @id = "advanceDue", @class = "form-control text_field_input short_text_field", onChange = "changeDropDownValueDueAdvance();" })

                                                </div>
                                                <div class="err_msg_box  mErrMsgBox">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.AdvanceDue, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div></div>
                                            <div id="monthAdvance">
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Due Date</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @{
                                                            List<SelectListItem> listItems4 = new List<SelectListItem>();
                                                            for (var i = 1; i < 29; i++)
                                                            {
                                                                listItems4.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                                            }
                                                            listItems4.Add(new SelectListItem { Text = "EoM", Value = "EoM" });
                                                        }
                                                        @Html.DropDownListFor(model => model.AdvanceDueDate, listItems4, "-- select a date --", new { @class = "form-control text_field_input short_text_field", @id = "advanceDueDate" })

                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBox">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.AdvanceDueDate, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="advanceFeeCalculateType">
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Advance Fee calculate</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @{
                                                            List<SelectListItem> listItems8 = new List<SelectListItem>();
                                                            listItems8.Add(new SelectListItem
                                                            {
                                                                Text = "Per Month",
                                                                Value = "Month"
                                                            });
                                                            listItems8.Add(new SelectListItem
                                                            {
                                                                Text = "Per Pay Period",
                                                                Value = "PayPeriod"
                                                            });
                                                        }
                                                        @Html.DropDownListFor(model => model.AdvanceFeeCalculateType, listItems8, "-- select type --", new { @id = "advanceCalculateType", @class = "form-control text_field_input short_text_field" })
                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBo">
                                                        <p class="err_msg new_err_msg" style="padding-left: 51px;">@Html.ValidationMessageFor(model => model.AdvanceFeeCalculateType, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <div class="control-label col-sm-2">
                                                        @Html.Label("Due Date auto reminder?", htmlAttributes: new { })
                                                    </div>
                                                    <div class="col-xs-8">
                                                        @*@Html.CheckBoxFor(model => model.IsAdvanceFeeDueEmailReminder, new { @id = "needReminderAdvanceDue", htmlAttributes = new { Value = false } })*@
                                                        @Html.RadioButtonFor(model => model.IsAdvanceFeeDueEmailReminder, true, new { @id = "needReminderAdvanceDueT" }) Yes
                                                        @Html.RadioButtonFor(model => model.IsAdvanceFeeDueEmailReminder, false, new { @id = "needReminderAdvanceDueF" }) No
                                                        @Html.ValidationMessageFor(model => model.IsAdvanceFeeDueEmailReminder, "", new { @class = "text-danger", style = "top:66%;left:3%;" })
                                                    </div>
                                                </div>
                                                <div id="remindEmailAdvanceDue">
                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 mLable">
                                                            <label>Remind Email</label>
                                                        </div>
                                                        <div class="col-xs-8 text_field short_text_field" style="width: 325px;">
                                                            @Html.EditorFor(model => model.AdvanceDueEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input e dueEmail", @id = "advanceDueEmail", placeholder = "example@example.com" } })
                                                        </div>
                                                        <div class="err_msg_box  mErrMsgBox">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.AdvanceDueEmail, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                    <div class="form-group new_form_group">

                                                        <div class="control-label col-sm-2 mLable">
                                                            <label>Email Remind Period</label>
                                                        </div>
                                                        <div class="col-xs-8 text_field short_text_field" style="width: 110px;">
                                                            @Html.EditorFor(model => model.AdvanceDueEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input x remindPeriod", @id = "advanceDueEmailRemindPeriod", placeholder = "days" } })
                                                        </div>
                                                        <div class="err_msg_box  mErrMsgBox">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.AdvanceDueEmailRemindPeriod, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <hr>

                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 mLable">
                                                <h3 class="text_algn" style="font-size: 16px;"><label>Monthly Loan Administration Fee</label></h3>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @Html.DropDownListFor(model => model.MonthlyLoanId, listItemsoption, "-- select --", new { @id = "dropDownLoan", @class = "form-control col-sm-2 text_field_input", onChange = "changeDropDownValueLoan();" })

                                            </div>
                                            <div class="err_msg_box  mErrMsgBox">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.MonthlyLoanId, "", new { @class = "text-danger" })</p>
                                            </div>
                                        </div>
                                        <div id="loan">
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 mLable">
                                                    <label>Amount</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.MonthlyLoanAmount, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input short_text_field a", @id = "loanAmount", style = "text-align:right" } })
                                                </div>
                                                <div class="err_msg_box  mErrMsgBox">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.MonthlyLoanAmount, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>

                                            @*@if (ViewBag.isLender == true)
                                                {

                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 mLable">
                                                            <label>Fee complete auto reminder?</label>
                                                        </div>
                                                        <div class="control-label col-sm-2">
                                                            @Html.RadioButtonFor(model => model.IsLoanFeeCompleteEmailReminder, true, new { @id = "needReminderLoanCompleteT" }) Yes
                                                            @Html.RadioButtonFor(model => model.IsLoanFeeCompleteEmailReminder, false, new { @id = "needReminderLoanCompleteF" }) No

                                                        </div>
                                                        <div class="err_msg_box  mErrMsgBox">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.IsLoanFeeCompleteEmailReminder, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>

                                                    <div id="remindEmailLoanComplete">
                                                        <div class="form-group new_form_group">
                                                            <div class="control-label col-sm-2 mLable" style="margin-top:10px">
                                                                @Html.LabelFor(model => model.MonthlyLoanFeeDealerEmail, htmlAttributes: new { })
                                                            </div>
                                                            <div class="col-xs-8 text_field short_text_field" style="width: 325px;">
                                                                @Html.EditorFor(model => model.MonthlyLoanFeeDealerEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input e dueEmail", @id = "loanDealerEmail", placeholder = "example@example.com" } })
                                                            </div>
                                                            <div class="err_msg_box  mErrMsgBox">
                                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.MonthlyLoanFeeDealerEmail, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>

                                                        <div class="form-group new_form_group">
                                                            <div class="control-label col-sm-2 mLable">
                                                                @Html.LabelFor(model => model.MonthlyLoanFeeDealerEmailRemindPeriod, htmlAttributes: new { })
                                                            </div>
                                                            <div class="col-xs-8 text_field short_text_field" style="width: 110px;">
                                                                @Html.EditorFor(model => model.MonthlyLoanFeeDealerEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input x remindPeriod", @id = "loanDealerEmailRemindPeriod", placeholder = "days" } })

                                                            </div>
                                                            <div class="err_msg_box  mErrMsgBox">
                                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.MonthlyLoanFeeDealerEmailRemindPeriod, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }*@

                                            @*<div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        @Html.LabelFor(model => model.MonthlyLoanDue, htmlAttributes: new { })
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @{
                                                            List<SelectListItem> listItems5 = new List<SelectListItem>();
                                                            listItems5.Add(new SelectListItem
                                                            {
                                                                Text = "Time of Advance",
                                                                Value = "Time of Advance"
                                                            });
                                                            listItems5.Add(new SelectListItem
                                                            {
                                                                Text = "Once a Month",
                                                                Value = "Once a Month"
                                                            });
                                                            listItems5.Add(new SelectListItem
                                                            {
                                                                Text = "Vehicle Payoff",
                                                                Value = "Vehicle Payoff"
                                                            });

                                                        }
                                                        @Html.DropDownListFor(model => model.MonthlyLoanDue, listItems5, "-- select due type --", new { @id = "loanDue", @class = "form-control text_field_input short_text_field", onChange = "changeDropDownValueDueLoan();" })
                                                        @Html.ValidationMessageFor(model => model.MonthlyLoanDue, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                            <div id="monthLoan">
                                                <div class="form-group new_form_group">

                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Monthly Due Date</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @{
                                                            List<SelectListItem> listItems6 = new List<SelectListItem>();
                                                            for (var i = 1; i < 29; i++)
                                                            {
                                                                listItems6.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                                            }
                                                            listItems6.Add(new SelectListItem { Text = "EoM", Value = "EoM" });
                                                        }
                                                        @Html.DropDownListFor(model => model.MonthlyLoanDueDate, listItems6, "-- select a date --", new { @class = "form-control", @id = "loanDueDate" })

                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBox">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.MonthlyLoanDueDate, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 mLable">
                                                    <label>Due Date auto reminder?</label>
                                                </div>
                                                <div class="control-label col-sm-2">
                                                    @Html.RadioButtonFor(model => model.IsLoanFeeDueEmailReminder, true, new { @id = "needReminderLoanDueT", @class = "needReminderLoanDueTF" }) Yes
                                                    @Html.RadioButtonFor(model => model.IsLoanFeeDueEmailReminder, false, new { @id = "needReminderLoanDueF", @class = "needReminderLoanDueTF" }) No
                                                </div>
                                                <div class="err_msg_box  mErrMsgBox">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.IsLoanFeeDueEmailReminder, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>

                                            <div id="remindEmailLoanDue">
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Remind Email</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field" style="width: 325px;">
                                                        @Html.EditorFor(model => model.MonthlyLoanDueEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input e dueEmail", @id = "loanDueEmail", placeholder = "example@example.com" } })

                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBox">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.MonthlyLoanDueEmail, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>

                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Email Remind Period</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field" style="width: 110px;">
                                                        @Html.EditorFor(model => model.MonthlyLoanDueEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input x remindPeriod", @id = "loanDueEmailRemindPeriod", placeholder = "days" } })

                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBox">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.MonthlyLoanDueEmailRemindPeriod, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <hr>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 mLable">
                                                <h3 class="text_algn" style="font-size: 16px;"><label>Lot Inventory Inspection Fee</label></h3>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @Html.DropDownListFor(model => model.LotInspectionId, listItemsoption, "-- select --", new { @id = "dropDownLot", @class = "form-control col-sm-2 text_field_input", onChange = "changeDropDownValueLot();" })

                                            </div>
                                            <div class="err_msg_box  mErrMsgBox">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionId, "", new { @class = "text-danger" })</p>
                                            </div>
                                        </div>
                                        <div id="lot">
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 mLable">
                                                    <label>Amount</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.LotInspectionAmount, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input short_text_field a", @id = "lotAmount", style = "text-align:right" } })
                                                </div>
                                                <div class="err_msg_box  mErrMsgBox">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionAmount, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>

                                            @*@if (ViewBag.isLender == true)
                                                {

                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 mLable">
                                                            <label>Fee Complete auto reminder?</label>
                                                        </div>
                                                        <div class="control-label col-sm-2">
                                                            @Html.RadioButtonFor(model => model.IsLotFeeCompleteEmailReminder, true, new { @id = "needReminderLotCompleteT" }) Yes
                                                            @Html.RadioButtonFor(model => model.IsLotFeeCompleteEmailReminder, false, new { @id = "needReminderLotCompleteF" }) No
                                                        </div>
                                                        <div class="err_msg_box  mErrMsgBox">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.IsLotFeeCompleteEmailReminder, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                    <div id="remindEmailLotComplete">
                                                        <div class="form-group new_form_group">

                                                            <div class="control-label col-sm-2 mLable">
                                                                <label>Dealer email</label>
                                                            </div>
                                                            <div class="col-xs-8 text_field short_text_field" style="width: 325px;">
                                                                @Html.EditorFor(model => model.LotInspectionFeeDealerEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input e dueEmail", @id = "lotDealerEmail", placeholder = "example@example.com" } })

                                                            </div>
                                                            <div class="err_msg_box  mErrMsgBox">
                                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionFeeDealerEmail, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>
                                                        <div class="form-group new_form_group">

                                                            <div class="control-label col-sm-2 mLable">
                                                                <label>email Remind Period</label>
                                                            </div>
                                                            <div class="col-xs-8 text_field short_text_field" style="width: 110px;">
                                                                @Html.EditorFor(model => model.LotInspectionFeeDealerEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input x remindPeriod", @id = "lotDealerEmailRemindPeriod", placeholder = "days" } })

                                                            </div>
                                                            <div class="err_msg_box  mErrMsgBox">
                                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionFeeDealerEmailRemindPeriod, "", new { @class = "text-danger" })</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }*@

                                            @*<div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Due Type</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @{
                                                            List<SelectListItem> listItems3 = new List<SelectListItem>();
                                                            listItems3.Add(new SelectListItem
                                                            {
                                                                Text = "Monthly",
                                                                Value = "Monthly"

                                                            });
                                                            listItems3.Add(new SelectListItem
                                                            {
                                                                Text = "Quaterly",
                                                                Value = "Quaterly"
                                                            });
                                                            listItems3.Add(new SelectListItem
                                                            {
                                                                Text = "Annually",
                                                                Value = "Annually"
                                                            });
                                                            listItems3.Add(new SelectListItem
                                                            {
                                                                Text = "Random",
                                                                Value = "Random"
                                                            });
                                                        }
                                                        @Html.DropDownListFor(model => model.LotInspectionDue, listItems3, new { @id = "lotDue", onChange = "changeDropDownValueDueLot();", @class = "form-control text_field_input short_text_field" })
                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBox"><p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionDue, "", new { @class = "text-danger" })</p></div>
                                                </div>*@

                                            <div id="monthLot">
                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Monthly Due Date</label>
                                                    </div>
                                                    <div class="col-xs-8 text_field short_text_field">
                                                        @{
                                                            List<SelectListItem> listItems7 = new List<SelectListItem>();
                                                            for (var i = 1; i < 29; i++)
                                                            {
                                                                listItems7.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                                            }
                                                            listItems7.Add(new SelectListItem { Text = "EoM", Value = "EoM" });
                                                        }
                                                        @Html.DropDownListFor(model => model.LotInspectionDueDate, listItems7, "-- select a date --", new { @class = "form-control", @id = "lotDueDate" })
                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBox">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionDueDate, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="lotRemEmail">

                                                <div class="form-group new_form_group">
                                                    <div class="control-label col-sm-2 mLable">
                                                        <label>Due Date auto reminder?</label>
                                                    </div>
                                                    <div class="control-label col-sm-2">
                                                        @Html.RadioButtonFor(model => model.IsLotFeeDueEmailReminder, true, new { @id = "needReminderLotDueT" }) Yes
                                                        @Html.RadioButtonFor(model => model.IsLotFeeDueEmailReminder, false, new { @id = "needReminderLotDueF" }) No
                                                    </div>
                                                    <div class="err_msg_box  mErrMsgBox">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.IsLotFeeDueEmailReminder, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>

                                                <div id="remindEmailLotDue">
                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 mLable">
                                                            <label>Remind email</label>
                                                        </div>
                                                        <div class="col-xs-8 text_field short_text_field" style="width: 325px;">
                                                            @Html.EditorFor(model => model.LotInspectionDueEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input e dueEmail", @id = "lotDueEmail", placeholder = "example@example.com" } })

                                                        </div>
                                                        <div class="err_msg_box  mErrMsgBox">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionDueEmail, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 mLable">
                                                            <label>email Remind Period</label>
                                                        </div>
                                                        <div class="col-xs-8 text_field short_text_field" style="width: 110px;">
                                                            @Html.EditorFor(model => model.LotInspectionDueEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input x remindPeriod", @id = "lotDueEmailRemindPeriod", placeholder = "days" } })
                                                        </div>
                                                        <div class="err_msg_box  mErrMsgBox">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LotInspectionDueEmailRemindPeriod, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <hr>
                                    </div>

                                    <div class="form-group new_form_group clear_next clear_next_bordr">
                                        <div>
                                            <nav>
                                                <div class="pager new_pager">
                                                    <div class="button_box algn_left">
                                                        <input value="Back" name="subBack" id="btnPreStep8" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button">
                                                    </div>
                                                    <div class="button_box algn_center">
                                                        <input value="Next" class="btn btn-primary m-b next_clear_button next_back" style=" margin-left 10px" type="submit">
                                                    </div>
                                                    <div class="button_box algn_right">
                                                        <input id="clearx" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button" onclick="clear();">
                                                    </div>
                                                    <div style="clear:both"></div>
                                                </div>
                                            </nav>
                                        </div>
                                    </div>
                                </div>
                                                            }


                        </div>
                    </div>



                </div>

            </div>

        </div>

    </div>
</div>

<div class="rightPanel">
    @{
        @Html.Partial("Step8help")
    }
</div>


<script language="javascript">

  $(document).ready(function(){

  $('.nav li.active ul').removeClass('in');
  $('.nav li').removeClass('active');
  $('.nav li.loan').addClass('active');
  $('.nav li.active ul').addClass('in');
  })
</script>

<script>
    $('#clear').click(function () {
        document.getElementsByTagName("form")[0].reset();
        $(".text-danger").html("");

    });
</script>

<script type="text/javascript">

    function changeDropDownValueDueAdvance() {

        if (document.getElementById("advanceDue").value == "Once a Month") {
            $("#monthAdvance").show("slow");
            $('#advanceFeeCalculateType').show("slow");
        }
        else {
            $('#remindEmailAdvanceDue').hide();
            $("#needReminderAdvanceDueT").prop("checked", false);
            $("#needReminderAdvanceDueF").prop("checked", false);
            document.getElementById("advanceDueEmailRemindPeriod").value = "";
            document.getElementById("advanceCalculateType").value = "";
            document.getElementById("advanceDueDate").value = "";
            $("#monthAdvance").hide("slow");
            $('#advanceFeeCalculateType').hide("slow");
            $('#monthAdvance').children('div').children('div').children('select').next('span').children('span').text('');
            $('#monthAdvance').children('div').children('div').children('select').removeClass('valid');
            $('#monthAdvance').children('div').children('div').children('select').removeClass('input-validation-error');

            $('#monthAdvance').closest("div").siblings('div').children("p").children("span").text("");
            $('#monthAdvance').next("div").children("p").children("span").text("");

            $("#monthAdvance").children('div').children('div').children("p").children("span").text("");

        }
    }
    //function changeDropDownValueDueLoan() {

    //    if (document.getElementById("loanDue").value == "Once a Month") {
    //        $("#monthLoan").show("slow");
    //    }
    //    else {
    //        document.getElementById("loanDueDate").value = "";
    //        $("#monthLoan").hide("slow");
    //        $('#monthLoan').children('div').children('div').children('select').next('span').children('span').text('');
    //        $('#monthLoan').children('div').children('div').children('select').removeClass('valid');
    //        $('#monthLoan').children('div').children('div').children('select').removeClass('input-validation-error');

    //        $("#monthLoan").children('div').children('div').children("p").children("span").text("");
    //    }
    //}
    //function changeDropDownValueDueLot() {
    //    $("#lotRemEmail").show("slow");
    //    if (document.getElementById("lotDue").value == "Monthly") {
    //        $("#monthLot").show("slow");
    //    }
    //    else {
    //        document.getElementById("lotDueDate").value = "";
    //        $("#monthLot").hide("slow");
    //        if (document.getElementById("lotDue").value == "Random") {

    //            document.getElementById("lotDueEmailRemindPeriod").value = "";
    //            $('#lotDueEmailRemindPeriod').next('span').children('span').text('');
    //            $('#lotDueEmailRemindPeriod').removeClass('valid');
    //            $('#lotDueEmailRemindPeriod').removeClass('input-validation-error');
    //            $('#needReminderLotDueT').prop('checked',false);
    //            $('#needReminderLotDueF').prop('checked',false);
    //            $('#remindEmailLotDue').hide();
    //            $("#lotRemEmail").next('span').children('span').text('');
    //            $("#lotRemEmail").hide("slow");

    //        }
    //        $('#monthLot').children('div').children('div').children('select').next('span').children('span').text('');
    //        $('#monthLot').children('div').children('div').children('select').removeClass('valid');
    //        $('#monthLot').children('div').children('div').children('select').removeClass('input-validation-error');

    //        $("#monthLot").children('div').children('div').children("p").children("span").text("");

    //    }
    //}
    @*@if (ViewBag.isLender == true) { <text>


    $('#needReminderAdvanceCompleteT').change(function () {
            $('#remindEmailAdvanceComplete').show("slow");
    });
    $('#needReminderAdvanceCompleteF').change(function () {
            document.getElementById("advanceDealerEmail").value = "";
            document.getElementById("advanceDealerEmailRemindPeriod").value = "";
            $('#remindEmailAdvanceComplete').hide("slow");
        $('#remindEmailAdvanceComplete').children('div').children('div').children('input').next('span').children('span').text('');
        $('#remindEmailAdvanceComplete').children('div').children('div').children('input').removeClass('valid');
        $('#remindEmailAdvanceComplete').children('div').children('div').children('input').removeClass('input-validation-error');

        $('#remindEmailAdvanceComplete').children('div').children('div').children("p").children("span").text("");
    });
    $('#needReminderLoanCompleteT').change(function () {
            $('#remindEmailLoanComplete').show("slow");
    });
    $('#needReminderLoanCompleteF').change(function () {
            document.getElementById("loanDealerEmail").value = "";
            document.getElementById("loanDealerEmailRemindPeriod").value = "";
            $('#remindEmailLoanComplete').hide("slow");
        $('#remindEmailLoanComplete').children('div').children('div').children('input').next('span').children('span').text('');
        $('#remindEmailLoanComplete').children('div').children('div').children('input').removeClass('valid');
        $('#remindEmailLoanComplete').children('div').children('div').children('input').removeClass('input-validation-error');

        $('#remindEmailLoanComplete').children('div').children('div').children("p").children("span").text("");
    });
    $('#needReminderLotCompleteT').change(function () {
            $('#remindEmailLotComplete').show("slow");
    });
    $('#needReminderLotCompleteF').change(function () {
            document.getElementById("lotDealerEmail").value = "";
            document.getElementById("lotDealerEmailRemindPeriod").value = "";
            $('#remindEmailLotComplete').hide("slow");
        $('#remindEmailLotComplete').children('div').children('div').children('input').next('span').children('span').text('');
        $('#remindEmailLotComplete').children('div').children('div').children('input').removeClass('valid');
        $('#remindEmailLotComplete').children('div').children('div').children('input').removeClass('input-validation-error');

        $('#remindEmailLotComplete').children('div').children('div').children("p").children("span").text("");
    });
    </text> }*@
    $('#needReminderAdvanceDueT').change(function () {
            $('#remindEmailAdvanceDue').show("slow");
    });
    $('#needReminderAdvanceDueF').change(function () {
            //document.getElementById("advanceDueEmail").value = "";
            document.getElementById("advanceDueEmailRemindPeriod").value = "";
            $('#remindEmailAdvanceDue').hide("slow");
        $('#remindEmailAdvanceDue').children('div').children('div').children('input').next('span').children('span').text('');
        $('#remindEmailAdvanceDue').children('div').children('div').children('input').removeClass('valid');
        $('#remindEmailAdvanceDue').children('div').children('div').children('input').removeClass('input-validation-error');

        $('#remindEmailAdvanceDue').children('div').children('div').children("p").children("span").text("");
    });
    $('#needReminderLoanDueT').change(function () {
            $('#remindEmailLoanDue').show("slow");

    });
    $('#needReminderLoanDueF').change(function () {
            //document.getElementById("loanDueEmail").value = "";
            document.getElementById("loanDueEmailRemindPeriod").value = "";
            $('#remindEmailLoanDue').hide("slow");
        $('#remindEmailLoanDue').children('div').children('div').children('input').next('span').children('span').text('');
        $('#remindEmailLoanDue').children('div').children('div').children('input').removeClass('valid');
        $('#remindEmailLoanDue').children('div').children('div').children('input').removeClass('input-validation-error');

        $('#remindEmailLoanDue').children('div').children('div').children("p").children("span").text("");
    });
    $('#needReminderLotDueT').change(function () {

         $('#remindEmailLotDue').show("slow");

    });
    $('#needReminderLotDueF').change(function () {
            //document.getElementById("lotDueEmail").value = "";
        document.getElementById("lotDueEmailRemindPeriod").value = "";
        $('#remindEmailLotDue').hide("slow");
        $('#remindEmailLotDue').children('div').children('div').children('input').next('span').children('span').text('');
        $('#remindEmailLotDue').children('div').children('div').children('input').removeClass('valid');
        $('#remindEmailLotDue').children('div').children('div').children('input').removeClass('input-validation-error');

        $('#remindEmailLotDue').children('div').children('div').children("p").children("span").text("");
    });
    function changeDropDownValueAdvance() {
        var drop1 = document.getElementById("dropDownAdvance").value;
        if (drop1 != "1") {
            $('#advance').hide("slow");
            //$('#remindEmailAdvanceComplete').hide();
            $('#remindEmailAdvanceDue').hide();
            $("#monthAdvance").hide();
            $('#advanceFeeCalculateType').hide();
            $("#needReminderAdvanceDueT").prop("checked", false);
            //$("#advanceNeedReceiptT").prop("checked", false);
            $("#needReminderAdvanceDueF").prop("checked", false);
            document.getElementById("advanceDueDate").value = "";

            @*@if (ViewBag.isLender == true) { <text>
            $("#needReminderAdvanceCompleteT").prop("checked", false);
            $("#needReminderAdvanceCompleteF").prop("checked", false);
            //$("#advanceNeedReceiptF").prop("checked", false);
            document.getElementById("advanceDealerEmail").value = "";
            document.getElementById("advanceDealerEmailRemindPeriod").value = "";
            </text> }*@
            //document.getElementById("advanceDueEmail").value = "";
            document.getElementById("advanceDueEmailRemindPeriod").value = "";
            document.getElementById("advanceAmount").value = "";
            document.getElementById("advanceCalculateType").value = "";
            document.getElementById("advanceDue").value = "";

            $("#advance input").each(function(){
                //$(this).val('');
                $(this).next('span').children('span').text('');
                $(this).removeClass('valid');
                $(this).removeClass('input-validation-error');

                $(this).closest("div").siblings('div').children("p").children("span").text("");
                $(this).next("div").children("p").children("span").text("");

            });

            $("#advance select").each(function(){
                //$(this).val('');
                $(this).next('span').children('span').text('');
                $(this).removeClass('valid');
                $(this).removeClass('input-validation-error');

                $(this).closest("div").siblings('div').children("p").children("span").text("");
                $(this).next("div").children("p").children("span").text("");

            });
            //$('#advance').children('div').children('div').children('input').next('span').children('span').text('');
            //$('#advance').children('div').children('div').children('input').removeClass('valid');
            //$('#advance').children('div').children('div').children('input').removeClass('input-validation-error');
            //$('#advance').children('div').children('div').children('select').next('span').children('span').text('');
            //$('#advance').children('div').children('div').children('select').removeClass('valid');
            //$('#advance').children('div').children('div').children('select').removeClass('input-validation-error');
        }
        else {
            document.getElementById('advanceAmount').value = "";
            $('#advanceAmount').val("");
            $('#advance').show("slow");
        }
    }
    function changeDropDownValueLoan() {
        var drop2 = document.getElementById("dropDownLoan").value;
        if (drop2 != "1") {
            $('#loan').hide("slow");
            //$('#remindEmailLoanComplete').hide();
            $('#remindEmailLoanDue').hide();
            $("#needReminderLoanDueT").prop("checked", false);
            //$("#monthlyLoanNeedReceiptT").prop("checked", false);
            $("#needReminderLoanDueF").prop("checked", false);
            document.getElementById("loanDueDate").value = "";
             @*@if (ViewBag.isLender == true) { <text>
            $("#needReminderLoanCompleteT").prop("checked", false);
            $("#needReminderLoanCompleteF").prop("checked", false);
            //$("#monthlyLoanNeedReceiptF").prop("checked", false);

            document.getElementById("loanDealerEmail").value = "";
            document.getElementById("loanDealerEmailRemindPeriod").value = "";
            </text> }*@
            //document.getElementById("loanDueEmail").value = "";
            document.getElementById("loanDueEmailRemindPeriod").value = "";
            document.getElementById("loanAmount").value = "";
            //document.getElementById("loanDue").value = "";

            $("#loan input").each(function(){
                //$(this).val('');
                $(this).next('span').children('span').text('');
                $(this).removeClass('valid');
                $(this).removeClass('input-validation-error');

                $(this).closest("div").siblings('div').children("p").children("span").text("");
                $(this).next("div").children("p").children("span").text("");
            });

            $("#loan select").each(function(){
                //$(this).val('');
                $(this).next('span').children('span').text('');
                $(this).removeClass('valid');
                $(this).removeClass('input-validation-error');

                $(this).closest("div").siblings('div').children("p").children("span").text("");
                $(this).next("div").children("p").children("span").text("");
            });

            //$('#loan').children('div').children('div').children('input').next('span').children('span').text('');
            //$('#loan').children('div').children('div').children('input').removeClass('valid');
            //$('#loan').children('div').children('div').children('input').removeClass('input-validation-error');
            //$('#loan').children('div').children('div').children('select').next('span').children('span').text('');
            //$('#loan').children('div').children('div').children('select').removeClass('valid');
            //$('#loan').children('div').children('div').children('select').removeClass('input-validation-error');
        }
        else {
            //$('input').next('span').children('span').text('');

            // for dropdown field
            //$('select').next('span').children('span').text('');
            document.getElementById('loanAmount').value = "";
            $('#loanAmount').val("");
            $("#monthLoan").show();
            $('#loan').show("slow");
        }
    }
    function changeDropDownValueLot() {
        var drop3 = document.getElementById("dropDownLot").value;
        if (drop3 != "1") {
            $('#lot').hide("slow");
           // $('#remindEmailLotComplete').hide();
            $('#remindEmailLotDue').hide();
            $("#needReminderLotDueT").prop("checked", false);
           // $("#lotInspectionNeedReceiptT").prop("checked", false);
            $("#needReminderLotDueF").prop("checked", false);
            document.getElementById("lotDueDate").value = "";
            @*@if (ViewBag.isLender == true) { <text>
            $("#needReminderLotCompleteF").prop("checked", false);
            //$("#lotInspectionNeedReceiptF").prop("checked", false);
            $("#needReminderLotCompleteT").prop("checked", false);
            document.getElementById("lotDealerEmail").value = "";
            document.getElementById("lotDealerEmailRemindPeriod").value = "";
            </text> }*@

            //document.getElementById("lotDueEmail").value = "";
            document.getElementById("lotDueEmailRemindPeriod").value = "";
            document.getElementById("lotAmount").value = "";
            //document.getElementById("lotDue").value = "";


            $("#lot input").each(function(){
                //$(this).val('');
                $(this).next('span').children('span').text('');
                $(this).removeClass('valid');
                $(this).removeClass('input-validation-error');

                $(this).closest("div").siblings('div').children("p").children("span").text("");
                $(this).next("div").children("p").children("span").text("");
            });

            $("#lot select").each(function(){
                //$(this).val('');
                $(this).next('span').children('span').text('');
                $(this).removeClass('valid');
                $(this).removeClass('input-validation-error');

                $(this).closest("div").siblings('div').children("p").children("span").text("");
                $(this).next("div").children("p").children("span").text("");
            });

            //$('#lot').children('div').children('div').children('input').next('span').children('span').text('');
            //$('#lot').children('div').children('div').children('input').removeClass('valid');
            //$('#lot').children('div').children('div').children('input').removeClass('input-validation-error');
            //$('#lot').children('div').children('div').children('select').next('span').children('span').text('');
            //$('#lot').children('div').children('div').children('select').removeClass('valid');
            //$('#lot').children('div').children('div').children('select').removeClass('input-validation-error');
        }
        else {
            //$('input').next('span').children('span').text('');

            // for dropdown field
            //$('select').next('span').children('span').text('');
            document.getElementById('lotAmount').value = "";
            $('#lotAmount').val("");
            $("#monthLot").show();
            $('#lot').show("slow");
        }
    }
    $('.a').attr('placeholder','0.00');
    partialLoad();
    function partialLoad() {

        var isEdit = '@ViewBag.isEdit';
        var model = @Html.Raw(Json.Encode(Model));

        if(isEdit == "editable"){

            if (model.AdvanceAmount > 0) {
                document.getElementById("dropDownAdvance").value = "1";
                $('#advance').show("slow");
                if(model.AdvanceDue == "Once a Month"){
                    $("#monthAdvance").show();
                    $("#advanceFeeCalculateType").show();
                }
                else{
                    $("#monthAdvance").hide();
                    $('#advanceFeeCalculateType').hide();
                    document.getElementById("advanceDueDate").value = "";
                }
                @*if(model.IsAdvanceFeeCompleteEmailReminder == true ){
                    @if (ViewBag.isLender == true) { <text>
                    $("#needReminderAdvanceCompleteT").attr("checked");
                    $("#remindEmailAdvanceComplete").show();
                    </text> }
                }
                else{
                    $("#remindEmailAdvanceComplete").hide();
                    @if (ViewBag.isLender == true) { <text>
                    document.getElementById("advanceDealerEmail").value = "";
                    document.getElementById("advanceDealerEmailRemindPeriod").value = "";
                    </text> }

                }*@
                if(model.IsAdvanceFeeDueEmailReminder == true ){
                    $("#needReminderAdvanceDueT").attr("checked");
                    $("#remindEmailAdvanceDue").show();
                }
                else{
                    $("#remindEmailAdvanceDue").hide();
                    //document.getElementById("advanceDueEmail").value = "";
                    document.getElementById("advanceDueEmailRemindPeriod").value = "";
                }
            }
            else{
                document.getElementById("dropDownAdvance").value = "2";
                $('#advance').hide();
                $("#monthAdvance").hide();
                $('#advanceFeeCalculateType').hide();
                //$('#remindEmailAdvanceComplete').hide();
                $('#remindEmailAdvanceDue').hide();
                $("#needReminderAdvanceDueT").prop("checked", false);
                $("#needReminderAdvanceDueF").prop("checked", false);
                document.getElementById("advanceDueDate").value = "";

                @*@if (ViewBag.isLender == true) { <text>
                $("#needReminderAdvanceCompleteT").prop("checked", false);
                //$("#advanceNeedReceiptT").prop("checked", false);
                $("#needReminderAdvanceCompleteF").prop("checked", false);
                //$("#advanceNeedReceiptF").prop("checked", false);
                document.getElementById("advanceDealerEmail").value = "";
                document.getElementById("advanceDealerEmailRemindPeriod").value = "";
                </text> }*@

                //document.getElementById("advanceDueEmail").value = "";
                document.getElementById("advanceDueEmailRemindPeriod").value = "";
                document.getElementById("advanceAmount").value = "";
                document.getElementById("advanceCalculateType").value = "";
                document.getElementById("advanceDue").value = "";
            }
            if (model.MonthlyLoanAmount > 0) {
                document.getElementById("dropDownLoan").value = "1";
                $('#loan').show("slow");
                if(model.MonthlyLoanDue == "Once a Month"){
                    $("#monthLoan").show();
                }
                else{
                    $("#monthLoan").hide();
                    document.getElementById("loanDueDate").value = "";
                }
                @*if(model.IsLoanFeeCompleteEmailReminder == true ){
                      @if (ViewBag.isLender == true) { <text>
                        $("#needReminderLoanCompleteT").attr("checked");
                        $("#remindEmailLoanComplete").show();
                      </text> }
                }
                else{

                    @if (ViewBag.isLender == true) { <text>
                    $("#remindEmailLoanComplete").hide();
                    document.getElementById("loanDealerEmail").value = "";
                    document.getElementById("loanDealerEmailRemindPeriod").value = "";
                    </text> }

                }*@
                if(model.IsLoanFeeDueEmailReminder == true ){
                    $("#needReminderLoanDueT").attr("checked");
                    $("#remindEmailLoanDue").show();
                }
                else{
                    $("#remindEmailLoanDue").hide();
                    //document.getElementById("loanDueEmail").value = "";
                    document.getElementById("loanDueEmailRemindPeriod").value = "";
                }
            }
            else{
                document.getElementById("dropDownLoan").value = "2";
                $('#loan').hide();
                $("#monthLoan").hide();
                //$('#remindEmailLoanComplete').hide();
                $('#remindEmailLoanDue').hide();
                document.getElementById("loanDueDate").value = "";
                $("#needReminderLoanDueT").prop("checked", false);
                //$("#monthlyLoanNeedReceiptT").prop("checked", false);
                $("#needReminderLoanDueF").prop("checked", false);
                @*@if (ViewBag.isLender == true) { <text>
                $("#needReminderLoanCompleteF").prop("checked", false);
                $("#needReminderLoanCompleteT").prop("checked", false);
                //$("#monthlyLoanNeedReceiptF").prop("checked", false);
                document.getElementById("loanDealerEmail").value = "";
                document.getElementById("loanDealerEmailRemindPeriod").value = "";
                </text> }*@

                //document.getElementById("loanDueEmail").value = "";
                document.getElementById("loanDueEmailRemindPeriod").value = "";
                document.getElementById("loanAmount").value = "";
                //document.getElementById("loanDue").value = "";
            }
            if (model.LotInspectionAmount > 0) {
                document.getElementById("dropDownLot").value = "1";
                $('#lot').show("slow");
                if(model.LotInspectionDue == "Monthly"){
                    $("#monthLot").show();
                }
                else{
                    $("#monthLot").hide();
                    document.getElementById("lotDueDate").value = "";
                    if (model.LotInspectionDue == "Random") {
                        $("#lotRemEmail").hide();
                    }
                }
                @*if(model.IsLotFeeCompleteEmailReminder == true ){
                    @if (ViewBag.isLender == true) { <text>
                    $("#remindEmailLotComplete").hide();
                    $("#needReminderLotCompleteT").attr("checked");
                    $("#remindEmailLotComplete").show();
                    </text> }
                }
                else{

                    @if (ViewBag.isLender == true) { <text>
                    $("#remindEmailLotComplete").hide();
                    document.getElementById("lotDealerEmail").value = "";
                    document.getElementById("lotDealerEmailRemindPeriod").value = "";
                    </text> }

                }*@
                if(model.IsLotFeeDueEmailReminder == true ){
                    $("#needReminderLotDueT").attr("checked");
                    $("#remindEmailLotDue").show();
                }
                else{
                    $("#remindEmailLotDue").hide();
                    document.getElementById("lotDueEmail").value = "";
                    document.getElementById("lotDueEmailRemindPeriod").value = "";
                }
            }
            else{
                document.getElementById("dropDownLot").value = "2";
                $('#lot').hide();
                $("#monthLot").hide();
                //$('#remindEmailLotComplete').hide();
                $('#remindEmailLotDue').hide();
                $("#needReminderLotDueT").prop("checked", false);
                //$("#lotInspectionNeedReceiptT").prop("checked", false);
                $("#needReminderLotDueF").prop("checked", false);
                document.getElementById("lotDueDate").value = "";
                @*@if (ViewBag.isLender == true) { <text>
                $("#needReminderLotCompleteF").prop("checked", false);
                //$("#lotInspectionNeedReceiptF").prop("checked", false);
                $("#needReminderLotCompleteT").prop("checked", false);
                document.getElementById("lotDealerEmail").value = "";
                document.getElementById("lotDealerEmailRemindPeriod").value = "";
                </text> }*@

                //document.getElementById("lotDueEmail").value = "";
                document.getElementById("lotDueEmailRemindPeriod").value = "";
                document.getElementById("lotAmount").value = "";
                //document.getElementById("lotDue").value = "";
            }
        }
        else{

            $('#advance').hide();
            $("#monthAdvance").hide();
            $('#advanceFeeCalculateType').hide();
            //$('#remindEmailAdvanceComplete').hide();
            $('#remindEmailAdvanceDue').hide();
            $("#needReminderAdvanceDueT").prop("checked", false);
            document.getElementById("advanceDueDate").value = "";
            $("#needReminderAdvanceDueF").prop("checked", false);
            //$("#advanceNeedReceiptT").prop("checked", false);
            @*@if (ViewBag.isLender == true) { <text>
            $("#needReminderAdvanceCompleteT").prop("checked", false);
            $("#needReminderAdvanceCompleteF").prop("checked", false);
            //$("#advanceNeedReceiptF").prop("checked", false);
            document.getElementById("advanceDealerEmail").value = "";
            document.getElementById("advanceDealerEmailRemindPeriod").value = "";
            </text> }*@

            //document.getElementById("advanceDueEmail").value = "";
            document.getElementById("advanceDueEmailRemindPeriod").value = "";
            document.getElementById("advanceAmount").value = "";
            document.getElementById("advanceCalculateType").value = "";
            document.getElementById("advanceDue").value = "";

            $('#loan').hide();
            $("#monthLoan").hide();
            //$('#remindEmailLoanComplete').hide();
            $('#remindEmailLoanDue').hide();
            $("#needReminderLoanDueT").prop("checked", false);
            //$("#monthlyLoanNeedReceiptT").prop("checked", false);
            $("#needReminderLoanDueF").prop("checked", false);
            document.getElementById("loanDueDate").value = "";

            @*@if (ViewBag.isLender == true) { <text>
            $("#needReminderLoanCompleteT").prop("checked", false);
            $("#needReminderLoanCompleteF").prop("checked", false);
            //$("#monthlyLoanNeedReceiptF").prop("checked", false);
            document.getElementById("loanDealerEmail").value = "";
            document.getElementById("loanDealerEmailRemindPeriod").value = "";
            </text> }*@

            //document.getElementById("loanDueEmail").value = "";
            document.getElementById("loanDueEmailRemindPeriod").value = "";
            document.getElementById("loanAmount").value = "";
            //document.getElementById("loanDue").value = "";

            $('#lot').hide();
            $("#monthLot").hide();
            //$('#remindEmailLotComplete').hide();
            $('#remindEmailLotDue').hide();
            $("#needReminderLotDueT").prop("checked", false);
            //$("#lotInspectionNeedReceiptT").prop("checked", false);
            $("#needReminderLotDueF").prop("checked", false);
            document.getElementById("lotDueDate").value = "";

            @*@if (ViewBag.isLender == true) { <text>
            $("#needReminderLotCompleteT").prop("checked", false);
            $("#needReminderLotCompleteF").prop("checked", false);
            //$("#lotInspectionNeedReceiptF").prop("checked", false);
            document.getElementById("lotDealerEmail").value = "";
            document.getElementById("lotDealerEmailRemindPeriod").value = "";
            </text> }*@

            //document.getElementById("lotDueEmail").value = "";
            document.getElementById("lotDueEmailRemindPeriod").value = "";
            document.getElementById("lotAmount").value = "";
            //document.getElementById("lotDue").value = "";
        }
    }
    $('#clearx').click(function () {
        document.getElementById("form").reset();
        // for all input field
        $('input').next('span').children('span').text('');
        $('input').removeClass('valid');
        // for dropdown field
        $('select').next('span').children('span').text('');
        $('select').removeClass('valid');


        $('.new_err_msg').children("span").text("");

        document.getElementById("dropDownAdvance").value = "";
        $('#advance').hide();
        $("#monthAdvance").hide();
        $('#advanceFeeCalculateType').hide();
        //$('#remindEmailAdvanceComplete').hide();
        $('#remindEmailAdvanceDue').hide();
        $("#needReminderAdvanceDueT").prop("checked", false);
        document.getElementById("advanceDueDate").value = "";
        //$("#advanceNeedReceiptT").prop("checked", false);
        $("#needReminderAdvanceDueF").prop("checked", false);
        @*@if (ViewBag.isLender == true) { <text>
        $("#needReminderAdvanceCompleteT").prop("checked", false);
        $("#needReminderAdvanceCompleteF").prop("checked", false);
        //$("#advanceNeedReceiptF").prop("checked", false);
        document.getElementById("advanceDealerEmail").value = "";
        document.getElementById("advanceDealerEmailRemindPeriod").value = "";
        </text> }*@

        //document.getElementById("advanceDueEmail").value = "";
        document.getElementById("advanceDueEmailRemindPeriod").value = "";
        document.getElementById("advanceAmount").value = "";
        document.getElementById("advanceCalculateType").value = "";
        document.getElementById("advanceDue").value = "";

        document.getElementById("dropDownLoan").value = "";
        $('#loan').hide();
        $("#monthLoan").hide();
        //$('#remindEmailLoanComplete').hide();
        $('#remindEmailLoanDue').hide();
        $("#needReminderLoanDueT").prop("checked", false);

        //$("#monthlyLoanNeedReceiptT").prop("checked", false);
        $("#needReminderLoanDueF").prop("checked", false);
        document.getElementById("loanDueDate").value = "";
        @*@if (ViewBag.isLender == true) { <text>
        $("#needReminderLoanCompleteT").prop("checked", false);
        $("#needReminderLoanCompleteF").prop("checked", false);
        //$("#monthlyLoanNeedReceiptF").prop("checked", false);
        document.getElementById("loanDealerEmail").value = "";
        document.getElementById("loanDealerEmailRemindPeriod").value = "";
        </text> }*@

        //document.getElementById("loanDueEmail").value = "";
        document.getElementById("loanDueEmailRemindPeriod").value = "";
        document.getElementById("loanAmount").value = "";
        //document.getElementById("loanDue").value = "";

        document.getElementById("dropDownLot").value = "";
        $('#lot').hide();
        $("#monthLot").hide();
        //$('#remindEmailLotComplete').hide();
        $('#remindEmailLotDue').hide();
        $("#needReminderLotDueT").prop("checked", false);
        document.getElementById("lotDueDate").value = "";
        //$("#lotInspectionNeedReceiptT").prop("checked", false);
        $("#needReminderLotDueF").prop("checked", false);
        @*@if (ViewBag.isLender == true) { <text>
        $("#needReminderLotCompleteF").prop("checked", false);
        $("#needReminderLotCompleteT").prop("checked", false);
        //$("#lotInspectionNeedReceiptF").prop("checked", false);
        document.getElementById("lotDealerEmail").value = "";
        document.getElementById("lotDealerEmailRemindPeriod").value = "";
        </text> }*@

        //document.getElementById("lotDueEmail").value = "";
        document.getElementById("lotDueEmailRemindPeriod").value = "";
        document.getElementById("lotAmount").value = "";
        //document.getElementById("lotDue").value = "";


    });


    //Back Button
    $(function () {
        $('#btnPreStep8').click(function () {
            $('#loadingDiv').show();
            @if ((Session["isInterest"] != null)) {
                if ((Boolean)Session["isInterest"] == true)
                {
                    <text>
            $.ajax({
                url: '@Url.Action("Step7", "SetupProcess")',
                type: 'GET',
                data: { edit: 1 },

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();
                        },
                        error: function (request, status, error) {
                            handleErrorMsg(request.responseText);
                        }
                    });
                    </text>
                }
                else
                {
                    <text>
                    $.ajax({
                        url: '@Url.Action("Step6", "SetupProcess")',
                        type: 'GET',
                        data: { edit: 1 },
                        success: function (partialView) {
                            $('#loadingDiv').hide();
                            $('#changeContainer').html(partialView);
                            $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    handleErrorMsg(request.responseText);
                        }
                    });
                    </text>
                }
            }

            });
        });
    $("#advanceAmount").keypress(function(e){
        var advanceAmount = $('#advanceAmount').val();
        if($('#advanceAmount').val().length >= 15){
            e.preventDefault();
        }
        else if(numericAllowDecimal(e,advanceAmount)){

        }else{
            e.preventDefault();
        }
    });
    $("#advanceAmount").blur(function(){
        var advanceAmount = $('#advanceAmount').val();
        if(advanceAmount > 0){
            if(advanceAmount.indexOf('.')=== -1){
                var num = parseFloat(advanceAmount);
                num = num.toFixed(2);
                $('#advanceAmount').val(num);
            }
        }
    });
    $("#loanAmount").keypress(function(e){
        var advanceAmount = $('#loanAmount').val();
        if($('#loanAmount').val().length >= 15){
            e.preventDefault();
        }
        else if(numericAllowDecimal(e,advanceAmount)){

        }else{
            e.preventDefault();
        }
    });
    $("#loanAmount").blur(function(){
        var loanAmount = $('#loanAmount').val();
        if(loanAmount > 0){
        if(loanAmount.indexOf('.')=== -1){
            var num = parseFloat(loanAmount);
            num = num.toFixed(2);
            $('#loanAmount').val(num);
        }
        }
    });
    $("#lotAmount").keypress(function(e){
        var advanceAmount = $('#lotAmount').val();
        if($('#lotAmount').val().length >= 15){
            e.preventDefault();
        }
        else if(numericAllowDecimal(e,advanceAmount)){

        }else{
            e.preventDefault();
        }
    });
    $("#lotAmount").blur(function(){
        var lotAmount = $('#lotAmount').val();
        if(lotAmount > 0){
            if(lotAmount.indexOf('.')=== -1){
                var num = parseFloat(lotAmount);
                num = num.toFixed(2);
                $('#lotAmount').val(num);
            }
        }
    });
    function numericAllowDecimal(e,val){
        var ch = e.which;
        if(val.indexOf('.')=== -1){
            if ((ch >= 48 && ch <= 57 )|| ch == 46) {
                return 1;
            }
        }else{
            if (ch >= 48 && ch <= 57 ) {
                return 1;
            }
        }
        return 0;
    }

    $(".x").keypress(function(e){
        if($(this).val().length >= 5){
            e.preventDefault();
        }
        else if(numericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $(".e").keypress(function(e){
        if($(this).val().length >= 100){
            e.preventDefault();
        }
        else if(forEmail(e)){

        }else{
            e.preventDefault();
        }
    });
    function numericAllow(e){
        var ch = e.which;
        if (ch >= 48 && ch <= 57) {
            return 1;
        }
        return 0;
    }
    function forEmail(e){
        var ch = e.which;
        if ((ch >= 48 && ch <= 57)||((ch >= 97 && ch <= 122))||((ch >= 65 && ch <= 90))||ch == 46 ||ch == 64) {
            return 1;
        }
        return 0;
    }
    $(".a").on('click', function(e) {
        //if (this.value === "0.00") {
        //    document.getElementById(this.id).value = "";
        //}
        //else if (this.value === "0") {
        //    document.getElementById(this.id).value = "";
        //}
        $(this).removeAttr('placeholder');
    });
    $('.a').blur(function () {
        if (this.value == "") {
            //$(this).val("0.00");
            $(this).attr('placeholder','0.00');
        }

    });

    $('.remindPeriod').focusout(function () {
        $(this).attr('placeholder', 'days');
    });

    $('.dueEmail').focusout(function () {
        $(this).attr('placeholder', 'example@example.com');
    });

    $(".tab.8").parent("li").addClass("active").siblings().removeClass('active');
    Progress(8);



    @if ((Session["isInterest"] != null ) && Convert.ToBoolean(Session["isInterest"]) == false && ((LoanSetupStep)Session["loanStep"]).stepId >= 3)
    {
        <text>
    $(".right_arrw.7").children("img").remove();
        $(".right_arrw.7").parent('li').css("pointer-events", "none").css("cursor", "default");
        $(".right_arrw.7").css('background-image', 'none');
        $(".right_arrw.7").prepend('<img id="theImg" src="/Images/lockIco.png" />');

        </text>

    }
    @if ((Session["isInterest"] != null ) && Convert.ToBoolean(Session["isInterest"]) == true && ((LoanSetupStep)Session["loanStep"]).stepId >= 3)
    {
        <text>
    $(".right_arrw.7").children("img").remove();
        $(".right_arrw.7").parent('li').css("pointer-events", "auto").css("cursor", "pointer");
        $(".right_arrw.7").css('background-image', 'none');
        $(".right_arrw.7").prepend('<img id="theImg" src="/Images/rightIco.png" />');

        </text>

    }


    // this is for helpers

    //$("#dropDownAdvance").click(function(){

    //    $("#simplediv p").html('Advance fee was clicked');
    //});

    //$("#dropDownLoan").click(function(){

    //    $("#simplediv p").html('Monthly Loan fee was clicked');
    //});

    //$("#LotInspectionId").click(function(){

    //    $("#simplediv p").html('Lot Inspection fee was clicked');
    //});

</script>