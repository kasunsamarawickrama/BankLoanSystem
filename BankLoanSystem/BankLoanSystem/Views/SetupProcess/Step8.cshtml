@model BankLoanSystem.Models.Fees
@{
    ViewBag.Title = "Step8";
    Layout = "~/Views/Shared/_SetupProcess.cshtml";
}

<h2>Step8</h2>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>


<div class="row">
    <div class="container body-content">
        <h2>Fees</h2>

        @using (Ajax.BeginForm("Step8", "SetupProcess", new AjaxOptions()
            {
                OnFailure = "handleErrorMsg",
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "changeContainer",
                LoadingElementId = "loadingDiv"
            }, new { id = "form" }))
            {

            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
              
                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.AdvanceId, htmlAttributes: new { })
                    </div>
                    <div class="col-xs-8 no">
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "Yes",
                                Value = "1"
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "No",
                                Value = "0",
                                Selected = true
                            });
                        }
                        @Html.DropDownListFor(model => model.AdvanceId, listItems ,new {@id="dropDownAdvance" , onChange = "changeDropDownValueAdvance();" })
                        @Html.ValidationMessageFor(model => model.AdvanceId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    
                    <div class="col-xs-8 no">
                        @Html.EditorFor(model => model.AdvanceAmount, new { htmlAttributes = new { @class = "form-control", @id = "advanceAmount", placeholder = " Amount" } })
                        @Html.ValidationMessageFor(model => model.AdvanceAmount, "", new { @class = "text-danger" })
                    </div>
                   
                    <div class="col-xs-8 no">
                        @Html.EditorFor(model => model.AdvanceDue, new { htmlAttributes = new { @class = "form-control", @id = "advanceDue", placeholder = "Due" } })
                        @Html.ValidationMessageFor(model => model.AdvanceDue, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-8 no">
                        @Html.EditorFor(model => model.AdvanceReminder, new { htmlAttributes = new { @class = "form-control", @id = "advanceReminder", placeholder = "Reminder" } })
                        @Html.ValidationMessageFor(model => model.AdvanceReminder, "", new { @class = "text-danger" })
                    </div>
                   
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.MonthlyLoanId, htmlAttributes: new { })
                    </div>
                    <div class="col-xs-8 no">
                        @{
                            List<SelectListItem> listItems2 = new List<SelectListItem>();
                            listItems2.Add(new SelectListItem
                            {
                                Text = "Yes",
                                Value = "1"
                            });
                            listItems2.Add(new SelectListItem
                            {
                                Text = "No",
                                Value = "0",
                                Selected = true
                            });
                        }
                        @Html.DropDownListFor(model => model.MonthlyLoanId, listItems2, new { @id = "dropDownLoan", onChange = "changeDropDownValueLoan();" })
                        @Html.ValidationMessageFor(model => model.MonthlyLoanId, "", new { @class = "text-danger" })
                    </div>
                </div>

                    <div class="form-group">
                       
                        <div class="col-xs-8 no">
                            @Html.EditorFor(model => model.MonthlyLoanAmount, new { htmlAttributes = new { @class = "form-control", @id = "loanAmount", placeholder = "Amount" } })
                            @Html.ValidationMessageFor(model => model.MonthlyLoanAmount, "", new { @class = "text-danger" })
                        </div>
                      
                        <div class="col-xs-8 no">
                            @Html.EditorFor(model => model.MonthlyLoanDue, new { htmlAttributes = new { @class = "form-control", @id = "loanDue", placeholder = "Due" } })
                            @Html.ValidationMessageFor(model => model.MonthlyLoanDue, "", new { @class = "text-danger" })
                        </div> 
                        <div class="col-xs-8 no">
                            @Html.EditorFor(model => model.MonthlyLoanReminder, new { htmlAttributes = new { @class = "form-control", @id = "loanReminder", placeholder = "Reminder" } })
                            @Html.ValidationMessageFor(model => model.MonthlyLoanReminder, "", new { @class = "text-danger" })
                        </div>
                        
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.LotInspectionId, htmlAttributes: new { })
                        </div>
                        <div class="col-xs-8 no">
                            @{
                                List<SelectListItem> listItems3 = new List<SelectListItem>();
                                listItems3.Add(new SelectListItem
                                {
                                    Text = "Yes",
                                    Value = "1"
                                });
                                listItems3.Add(new SelectListItem
                                {
                                    Text = "No",
                                    Value = "0",
                                    Selected = true
                                });
                            }
                            @Html.DropDownListFor(model => model.LotInspectionId, listItems3, new { @id = "dropDownLot", onChange = "changeDropDownValueLot();" })
                            @Html.ValidationMessageFor(model => model.LotInspectionId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                      
                        <div class="col-xs-8 no">
                            @Html.EditorFor(model => model.LotInspectionAmount, new { htmlAttributes = new { @class = "form-control", @id = "lotAmount", placeholder = "Amount" } })
                            @Html.ValidationMessageFor(model => model.LotInspectionAmount, "", new { @class = "text-danger" })
                        </div>
                       
                        <div class="col-xs-8 no">
                            @Html.EditorFor(model => model.LotInspectionDue, new { htmlAttributes = new { @class = "form-control", @id = "lotDue", placeholder = "Due" } })
                            @Html.ValidationMessageFor(model => model.LotInspectionDue, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-8 no">
                            @Html.EditorFor(model => model.LotInspectionReminder, new { htmlAttributes = new { @class = "form-control", @id = "lotReminder", placeholder = "Reminder" } })
                            @Html.ValidationMessageFor(model => model.LotInspectionReminder, "", new { @class = "text-danger" })
                        </div>
                                            
                    </div>

                    <div class="form-group">
                        <div>
                            <nav>
                                <ul class="pager">
                                    <li>
                                        <input type="submit" value="Next" class="btn btn-primary m-b" style="float: right; margin-left: 10px" />
                                    </li>
                                    <li>
                                        <input type="button" id="clear" value="Clear" class="btn btn-primary m-b" style="float: right; margin-left: 10px" />
                                    </li>

                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
        }
    </div>
</div>


<script type="text/javascript">
$(function () {
    $("#advanceDue").datepicker();
    $("#loanDue").datepicker();
    $("#lotDue").datepicker();
});
window.onload = function () {
    changeDropDownValueAdvance();
    changeDropDownValueLoan();
    changeDropDownValueLot();

};
function changeDropDownValueAdvance()
{
    var drop1 = document.getElementById("dropDownAdvance").value;
    if (drop1 == 0) {
        document.getElementById("advanceAmount").value = "";
        document.getElementById("advanceDue").value = "";
        document.getElementById("advanceReminder").value = "";
        document.getElementById("advanceAmount").readOnly = true;
        document.getElementById("advanceDue").readOnly = true;
        document.getElementById("advanceReminder").readOnly = true;
    }
    else {
        document.getElementById("advanceAmount").readOnly = false;
        document.getElementById("advanceDue").readOnly = false;
        document.getElementById("advanceReminder").readOnly = false;
    }
}
function changeDropDownValueLoan()
{
    var drop2 = document.getElementById("dropDownLoan").value;
    if (drop2 == 0) {
        document.getElementById("loanAmount").value = "";
        document.getElementById("loanDue").value = "";
        document.getElementById("loanReminder").value = "";
        document.getElementById("loanAmount").readOnly = true;
        document.getElementById("loanDue").readOnly = true;
        document.getElementById("loanReminder").readOnly = true;
    }
    else {
        document.getElementById("loanAmount").readOnly = false;
        document.getElementById("loanDue").readOnly = false;
        document.getElementById("loanReminder").readOnly = false;
    }
}
function changeDropDownValueLot()
{
    var drop3 = document.getElementById("dropDownLot").value;
    if (drop3 == 0) {
        document.getElementById("lotAmount").value = "";
        document.getElementById("lotDue").value = "";
        document.getElementById("lotReminder").value = "";
        document.getElementById("lotAmount").readOnly = true;
        document.getElementById("lotDue").readOnly = true;
        document.getElementById("lotReminder").readOnly = true;
    }
    else {
        document.getElementById("lotAmount").readOnly = false;
        document.getElementById("lotDue").readOnly = false;
        document.getElementById("lotReminder").readOnly = false;
    }
}
$('#clear').click(function () {
    document.getElementById("form").reset();
    changeDropDownValueAdvance();
    changeDropDownValueLoan();
    changeDropDownValueLot();
});
$("#advanceDue").datepicker({
    onSelect: function (dateText) {
        var drop1 = document.getElementById("dropDownAdvance").value;
        if (drop1 == 0) {
            document.getElementById("advanceDue").value = "";
        }
    }
});
$("#loanDue").datepicker({
    onSelect: function (dateText) {
        var drop2 = document.getElementById("dropDownLoan").value;
        if (drop2 == 0) {
            document.getElementById("loanDue").value = "";
        }
    }
});
$("#lotDue").datepicker({
    onSelect: function (dateText) {
        var drop3 = document.getElementById("dropDownLot").value;
        if (drop3 == 0) {
            document.getElementById("lotDue").value = "";
        }
    }
});

</script>