

@model BankLoanSystem.Models.Fees
@{
    ViewBag.Title = "Step8";
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/scripts/CommonFunctions.js"></script>
@*<script src="~/scripts/jquery-ui.js"></script>
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />*@


        <div class="form-group">

            <div>
                <h2>@Html.Label("Step 3 - Fees", htmlAttributes: new { })</h2>
            </div>
        </div>
        @using (Ajax.BeginForm("Step8", "SetupProcess", new AjaxOptions()
        {
            OnSuccess = "Progress(9)",
            OnFailure = "handleErrorMsg",
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "changeContainer",
            LoadingElementId = "loadingDiv"
        }, new { id = "form" }))
        {

            @Html.AntiForgeryToken()
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div>
                    <hr>
                    <div class="form-group">
                        <div class="control-label col-sm-2" style="margin-top:10px">
                            <h3>@Html.LabelFor(model => model.AdvanceId, htmlAttributes: new { })</h3>
                        </div>
                        <div class="col-xs-8">
                            @{
                                List<SelectListItem> listItems = new List<SelectListItem>();
                                listItems.Add(new SelectListItem
                                {
                                    Text = "-- select --",
                                    Value = "2",
                                    Selected = true
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Yes",
                                    Value = "1"
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "No",
                                    Value = "0"
                                });
                            }
                            @Html.HiddenFor(model => model.LoanId)
                            @Html.HiddenFor(model => model.isEdit)
                            @Html.DropDownListFor(model => model.AdvanceId, listItems, new { @id = "dropDownAdvance", @class = "form-control col-sm-2", onChange = "changeDropDownValueAdvance();" })
                            @Html.ValidationMessageFor(model => model.AdvanceId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="advance">
                        <div class="form-group">

                            <div class="control-label col-sm-2" style="margin-top:10px">
                                @Html.LabelFor(model => model.AdvanceAmount, htmlAttributes: new { })
                            </div>
                            <div class="col-xs-8">
                                @Html.EditorFor(model => model.AdvanceAmount, new { htmlAttributes = new { @class = "form-control", @id = "advanceAmount", placeholder = " Amount" } })
                                @Html.ValidationMessageFor(model => model.AdvanceAmount, "", new { @class = "text-danger" })
                            </div>
                            <span style="float:right;margin-top: 10px;font-size: 26px;">$</span>
                        </div>
                        <div class="form-group">
                            <div class="control-label col-sm-2" style="margin-top:10px">
                                @Html.LabelFor(model => model.AdvanceFeeCalculateType, htmlAttributes: new { })
                            </div>
                            <div class="col-xs-8">
                                @{
                                    List<SelectListItem> listItems8 = new List<SelectListItem>();
                                    listItems8.Add(new SelectListItem
                                    {
                                        Text = "Per Month",
                                        Value = "Month"
                                    });
                                    listItems8.Add(new SelectListItem
                                    {
                                        Text = "Per Pay Period",
                                        Value = "PayPeriod"
                                    });
                                }
                                @Html.DropDownListFor(model => model.AdvanceFeeCalculateType, listItems8, "-- select type --", new { @id = "advanceCalculateType", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AdvanceFeeCalculateType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (ViewBag.isLender == true)
                        {
                            <div class="form-group">
                                <div class="col-xs-8">
                                    @Html.CheckBoxFor(model => model.AdvanceNeedReceipt, new { htmlAttributes = new { @class = "form-control" }, @id = "advanceNeedReceipt" }) Need Reciept After Advance Paid
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-sm-2">
                                    @Html.Label("Fee Complete auto reminder?", htmlAttributes: new { })
                                </div>
                                <div class="control-label col-sm-2">
                                    @Html.CheckBoxFor(model => model.IsAdvanceFeeCompleteEmailReminder, new { @id = "needReminderAdvanceComplete", htmlAttributes = new { Value = false } })
                                </div>
                            </div>
                            <div id="remindEmailAdvanceComplete">
                                <div class="form-group">
                                    <div class="control-label col-sm-2" style="margin-top:10px">
                                        @Html.LabelFor(model => model.AdvanceFeeDealerEmail, htmlAttributes: new { })
                                    </div>
                                    <div class="col-xs-8">
                                        @Html.EditorFor(model => model.AdvanceFeeDealerEmail, new { htmlAttributes = new { @class = "form-control", @id = "advanceDealerEmail", placeholder = "Dealer Email" } })
                                        @Html.ValidationMessageFor(model => model.AdvanceFeeDealerEmail, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="control-label col-sm-2" style="margin-top:10px">
                                        @Html.LabelFor(model => model.AdvanceFeeDealerEmailRemindPeriod, htmlAttributes: new { })
                                    </div>
                                    <div class="col-xs-8">
                                        @Html.EditorFor(model => model.AdvanceFeeDealerEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control", @id = "advanceDealerEmailRemindPeriod", placeholder = "Number of Days" } })
                                        @Html.ValidationMessageFor(model => model.AdvanceFeeDealerEmailRemindPeriod, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                        }
                        <div class="form-group">
                            <div class="control-label col-sm-2" style="margin-top:10px">
                                @Html.LabelFor(model => model.AdvanceDue, htmlAttributes: new { })
                            </div>
                            <div class="col-xs-8">
                                @{
                                    List<SelectListItem> listItems2 = new List<SelectListItem>();
                                    listItems2.Add(new SelectListItem
                                    {
                                        Text = "Time of Advance",
                                        Value = "Time of Advance"
                                    });
                                    listItems2.Add(new SelectListItem
                                    {
                                        Text = "Once a Month",
                                        Value = "Once a Month"
                                    });
                                    listItems2.Add(new SelectListItem
                                    {
                                        Text = "Vehicle Payoff",
                                        Value = "Vehicle Payoff"
                                    });

                                }
                                @Html.DropDownListFor(model => model.AdvanceDue, listItems2, "-- select due type --", new { @id = "advanceDue", @class = "form-control", onChange = "changeDropDownValueDueAdvance();" })
                                @Html.ValidationMessageFor(model => model.AdvanceDue, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div id="monthAdvance">
                            <div class="form-group">
                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.AdvanceDueDate, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @{
                                        List<SelectListItem> listItems4 = new List<SelectListItem>();
                                        for (var i = 1; i < 29; i++)
                                        {
                                            listItems4.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                        }
                                        listItems4.Add(new SelectListItem { Text = "EoM", Value = "EoM" });
                                    }
                                    @Html.DropDownListFor(model => model.AdvanceDueDate, listItems4, "-- select a date --", new { @class = "form-control", @id = "advanceDueDate" })
                                    @Html.ValidationMessageFor(model => model.AdvanceDueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="control-label col-sm-2">
                                @Html.Label("Due Date auto reminder?", htmlAttributes: new { })
                            </div>
                            <div class="control-label col-sm-2">
                                @Html.CheckBoxFor(model => model.IsAdvanceFeeDueEmailReminder, new { @id = "needReminderAdvanceDue", htmlAttributes = new { Value = false } })
                            </div>
                        </div>
                        <div id="remindEmailAdvanceDue">
                            <div class="form-group">
                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.AdvanceDueEmail, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @Html.EditorFor(model => model.AdvanceDueEmail, new { htmlAttributes = new { @class = "form-control", @id = "advanceDueEmail", placeholder = "Remind Email" } })
                                    @Html.ValidationMessageFor(model => model.AdvanceDueEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.AdvanceDueEmailRemindPeriod, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @Html.EditorFor(model => model.AdvanceDueEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control", @id = "advanceDueEmailRemindPeriod", placeholder = "Number of Days" } })
                                    @Html.ValidationMessageFor(model => model.AdvanceDueEmailRemindPeriod, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="form-group">
                        <div class="control-label col-sm-2" style="margin-top:10px">
                            <h3>@Html.LabelFor(model => model.MonthlyLoanId, htmlAttributes: new { })</h3>
                        </div>
                        <div class="col-xs-8">
                            @Html.DropDownListFor(model => model.MonthlyLoanId, listItems, new { @id = "dropDownLoan", @class = "form-control col-sm-2", onChange = "changeDropDownValueLoan();" })
                            @Html.ValidationMessageFor(model => model.MonthlyLoanId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="loan">
                        <div class="form-group">
                            <div class="control-label col-sm-2" style="margin-top:10px">
                                @Html.LabelFor(model => model.MonthlyLoanAmount, htmlAttributes: new { })
                            </div>
                            <div class="col-xs-8">
                                @Html.EditorFor(model => model.MonthlyLoanAmount, new { htmlAttributes = new { @class = "form-control", @id = "loanAmount", placeholder = "Amount" } })
                                @Html.ValidationMessageFor(model => model.MonthlyLoanAmount, "", new { @class = "text-danger" })
                            </div>
                            <span style="float:right;margin-top: 10px;font-size: 26px;">$</span>
                        </div>
                        @if (ViewBag.isLender == true)
                        {
                            <div class="form-group">
                                <div class="col-xs-8">
                                    @Html.CheckBoxFor(model => model.MonthlyLoanNeedReceipt, new { htmlAttributes = new { @class = "form-control" }, @id = "monthlyLoanNeedReceipt" })  Need Reciept After Loan Paid
                                </div>
                            </div>
                                <div class="form-group">
                                    <div class="control-label col-sm-2">
                                        @Html.Label("Fee complete auto reminder?", htmlAttributes: new { })
                                    </div>
                                    <div class="control-label col-sm-2">
                                        @Html.CheckBoxFor(model => model.IsLoanFeeCompleteEmailReminder, new { @id = "needReminderLoanComplete", htmlAttributes = new { Value = false } })
                                    </div>
                                </div>
                                <div id="remindEmailLoanComplete">
                                    <div class="form-group">
                                        <div class="control-label col-sm-2" style="margin-top:10px">
                                            @Html.LabelFor(model => model.MonthlyLoanFeeDealerEmail, htmlAttributes: new { })
                                        </div>
                                        <div class="col-xs-8">
                                            @Html.EditorFor(model => model.MonthlyLoanFeeDealerEmail, new { htmlAttributes = new { @class = "form-control", @id = "loanDealerEmail", placeholder = "Dealer Email " } })
                                            @Html.ValidationMessageFor(model => model.MonthlyLoanFeeDealerEmail, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="control-label col-sm-2" style="margin-top:10px">
                                            @Html.LabelFor(model => model.MonthlyLoanFeeDealerEmailRemindPeriod, htmlAttributes: new { })
                                        </div>
                                        <div class="col-xs-8">
                                            @Html.EditorFor(model => model.MonthlyLoanFeeDealerEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control", @id = "loanDealerEmailRemindPeriod", placeholder = "Number of Days" } })
                                            @Html.ValidationMessageFor(model => model.MonthlyLoanFeeDealerEmailRemindPeriod, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                        }


                        <div class="form-group">
                            <div class="control-label col-sm-2" style="margin-top:10px">
                                @Html.LabelFor(model => model.MonthlyLoanDue, htmlAttributes: new { })
                            </div>
                            <div class="col-xs-8">
                                @{
                                    List<SelectListItem> listItems5 = new List<SelectListItem>();
                                    listItems5.Add(new SelectListItem
                                    {
                                        Text = "Time of Advance",
                                        Value = "Time of Advance"
                                    });
                                    listItems5.Add(new SelectListItem
                                    {
                                        Text = "Once a Month",
                                        Value = "Once a Month"
                                    });
                                    listItems5.Add(new SelectListItem
                                    {
                                        Text = "Vehicle Payoff",
                                        Value = "Vehicle Payoff"
                                    });

                                }
                                @Html.DropDownListFor(model => model.MonthlyLoanDue, listItems5, "-- select due type --", new { @id = "loanDue", @class = "form-control", onChange = "changeDropDownValueDueLoan();" })
                                @Html.ValidationMessageFor(model => model.MonthlyLoanDue, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div id="monthLoan">
                            <div class="form-group">

                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.MonthlyLoanDueDate, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @{
                                        List<SelectListItem> listItems6 = new List<SelectListItem>();
                                        for (var i = 1; i < 29; i++)
                                        {
                                            listItems6.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                        }
                                        listItems6.Add(new SelectListItem { Text = "EoM", Value = "EoM" });
                                    }
                                    @Html.DropDownListFor(model => model.MonthlyLoanDueDate, listItems6, "-- select a date --", new { @class = "form-control", @id = "loanDueDate" })
                                    @Html.ValidationMessageFor(model => model.MonthlyLoanDueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="control-label col-sm-2">
                                @Html.Label("Due Date auto reminder?", htmlAttributes: new { })
                            </div>
                            <div class="control-label col-sm-2">
                                @Html.CheckBoxFor(model => model.IsLoanFeeDueEmailReminder, new { @id = "needReminderLoanDue", htmlAttributes = new { Value = false } })
                            </div>
                        </div>
                        <div id="remindEmailLoanDue">
                            <div class="form-group">
                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.MonthlyLoanDueEmail, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @Html.EditorFor(model => model.MonthlyLoanDueEmail, new { htmlAttributes = new { @class = "form-control", @id = "loanDueEmail", placeholder = "Remind Email" } })
                                    @Html.ValidationMessageFor(model => model.MonthlyLoanDueEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.MonthlyLoanDueEmailRemindPeriod, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @Html.EditorFor(model => model.MonthlyLoanDueEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control", @id = "loanDueEmailRemindPeriod", placeholder = "Number of Days" } })
                                    @Html.ValidationMessageFor(model => model.MonthlyLoanDueEmailRemindPeriod, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="form-group">
                        <div class="control-label col-sm-2" style="margin-top:10px">
                            <h3>@Html.LabelFor(model => model.LotInspectionId, htmlAttributes: new { })</h3>
                        </div>
                        <div class="col-xs-8">

                            @Html.DropDownListFor(model => model.LotInspectionId, listItems, new { @id = "dropDownLot", @class = "form-control col-sm-2", onChange = "changeDropDownValueLot();" })
                            @Html.ValidationMessageFor(model => model.LotInspectionId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="lot">
                        <div class="form-group">
                            <div class="control-label col-sm-2" style="margin-top:10px">
                                @Html.LabelFor(model => model.LotInspectionAmount, htmlAttributes: new { })
                            </div>
                            <div class="col-xs-8">
                                @Html.EditorFor(model => model.LotInspectionAmount, new { htmlAttributes = new { @class = "form-control", @id = "lotAmount", placeholder = "Amount" } })
                                @Html.ValidationMessageFor(model => model.LotInspectionAmount, "", new { @class = "text-danger" })
                            </div>
                            <span style="float:right;margin-top: 10px;font-size: 26px;">$</span>
                        </div>
                        @if (ViewBag.isLender == true)
                        {
                            <div class="form-group">
                                <div class="col-xs-8">
                                    @Html.CheckBoxFor(model => model.LotInspectionNeedReceipt, new { htmlAttributes = new { @class = "form-control" }, @id = "lotInspectionNeedReceipt" })  Need Reciept After Lot Inspection Paid
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-sm-2">
                                    @Html.Label("Fee Complete auto reminder?", htmlAttributes: new { })
                                </div>
                                <div class="control-label col-sm-2">
                                    @Html.CheckBoxFor(model => model.IsLotFeeCompleteEmailReminder, new { @id = "needReminderLotComplete", htmlAttributes = new { Value = false } })
                                </div>
                            </div>
                            <div id="remindEmailLotComplete">
                                <div class="form-group">

                                    <div class="control-label col-sm-2" style="margin-top:10px">
                                        @Html.LabelFor(model => model.LotInspectionFeeDealerEmail, htmlAttributes: new { })
                                    </div>
                                    <div class="col-xs-8">
                                        @Html.EditorFor(model => model.LotInspectionFeeDealerEmail, new { htmlAttributes = new { @class = "form-control", @id = "lotDealerEmail", placeholder = "Dealer Email" } })
                                        @Html.ValidationMessageFor(model => model.LotInspectionFeeDealerEmail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">

                                    <div class="control-label col-sm-2" style="margin-top:10px">
                                        @Html.LabelFor(model => model.LotInspectionFeeDealerEmailRemindPeriod, htmlAttributes: new { })
                                    </div>
                                    <div class="col-xs-8">
                                        @Html.EditorFor(model => model.LotInspectionFeeDealerEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control", @id = "lotDealerEmailRemindPeriod", placeholder = "Number of Days" } })
                                        @Html.ValidationMessageFor(model => model.LotInspectionFeeDealerEmailRemindPeriod, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }


                        <div class="form-group">
                            <div class="control-label col-sm-2" style="margin-top:10px">
                                @Html.LabelFor(model => model.LotInspectionDue, htmlAttributes: new { })
                            </div>
                            <div class="col-xs-8">
                                @{
                                    List<SelectListItem> listItems3 = new List<SelectListItem>();
                                    listItems3.Add(new SelectListItem
                                    {
                                        Text = "Monthly",
                                        Value = "Monthly"
                                    });
                                    listItems3.Add(new SelectListItem
                                    {
                                        Text = "Quaterly",
                                        Value = "Quaterly"
                                    });
                                    listItems3.Add(new SelectListItem
                                    {
                                        Text = "Annually",
                                        Value = "Annually"
                                    });
                                    listItems3.Add(new SelectListItem
                                    {
                                        Text = "Random",
                                        Value = "Random"
                                    });

                                }
                                @Html.DropDownListFor(model => model.LotInspectionDue, listItems3, "-- select due type --", new { @id = "lotDue", onChange = "changeDropDownValueDueLot();", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LotInspectionDue, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div id="monthLot">
                            <div class="form-group">
                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.LotInspectionDueDate, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @{
                                        List<SelectListItem> listItems7 = new List<SelectListItem>();
                                        for (var i = 1; i < 29; i++)
                                        {
                                            listItems7.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                        }
                                        listItems7.Add(new SelectListItem { Text = "EoM", Value = "EoM" });
                                    }
                                    @Html.DropDownListFor(model => model.LotInspectionDueDate, listItems7, "-- select a date --", new { @class = "form-control", @id = "lotDueDate" })
                                    @Html.ValidationMessageFor(model => model.LotInspectionDueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="control-label col-sm-2">
                                @Html.Label("Due Date auto reminder?", htmlAttributes: new { })
                            </div>
                            <div class="control-label col-sm-2">
                                @Html.CheckBoxFor(model => model.IsLotFeeDueEmailReminder, new { @id = "needReminderLotDue", htmlAttributes = new { Value = false } })
                            </div>
                        </div>
                        <div id="remindEmailLotDue">
                            <div class="form-group">
                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.LotInspectionDueEmail, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @Html.EditorFor(model => model.LotInspectionDueEmail, new { htmlAttributes = new { @class = "form-control", @id = "lotDueEmail", placeholder = "Remind Email" } })
                                    @Html.ValidationMessageFor(model => model.LotInspectionDueEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-sm-2" style="margin-top:10px">
                                    @Html.LabelFor(model => model.LotInspectionDueEmailRemindPeriod, htmlAttributes: new { })
                                </div>
                                <div class="col-xs-8">
                                    @Html.EditorFor(model => model.LotInspectionDueEmailRemindPeriod, new { htmlAttributes = new { @class = "form-control", @id = "lotDueEmailRemindPeriod", placeholder = "Number of Days" } })
                                    @Html.ValidationMessageFor(model => model.LotInspectionDueEmailRemindPeriod, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                </div>

                <div class="form-group">

                    <div class="button-panel">
                        <input type="button" value="Back" name="subBack" id="btnPreStep8" class="btn btn-default left-button" />
                        @*<input type="button" value="Back" name="subBack" id="btnPreStep7" class="btn btn-default left-button" />*@
                        <input type="submit" value="Next" class="btn btn-primary btn-next" @*style="left:40%"*@ />

                        <input type="button" id="clear" value="Clear" class="btn btn-default right-button" />

                    </div>
                    
                </div>
            </div>
                                        }



<script type="text/javascript">

    function changeDropDownValueDueAdvance() {

        if (document.getElementById("advanceDue").value == "Once a Month") {
            $("#monthAdvance").show("slow");
        }
        else {
            document.getElementById("advanceDueDate").value = "";
            $("#monthAdvance").hide("slow");
        }
    }
    function changeDropDownValueDueLoan() {

        if (document.getElementById("loanDue").value == "Once a Month") {
            $("#monthLoan").show("slow");
        }
        else {
            document.getElementById("loanDueDate").value = "";
            $("#monthLoan").hide("slow");
        }
    }
    function changeDropDownValueDueLot() {

        if (document.getElementById("lotDue").value == "Monthly") {
            $("#monthLot").show("slow");
        }
        else {
            document.getElementById("lotDueDate").value = "";
            $("#monthLot").hide("slow");
        }
    }
    $('#needReminderAdvanceComplete').change(function () {
        if ((this.checked)) {
            $('#remindEmailAdvanceComplete').show("slow");
        }
        else {
            document.getElementById("advanceDealerEmail").value = "";
            document.getElementById("advanceDealerEmailRemindPeriod").value = "";
            $('#remindEmailAdvanceComplete').hide("slow");
        }
    });
    $('#needReminderLoanComplete').change(function () {
        if ((this.checked)) {
            $('#remindEmailLoanComplete').show("slow");
        }
        else {
            document.getElementById("loanDealerEmail").value = "";
            document.getElementById("loanDealerEmailRemindPeriod").value = "";
            $('#remindEmailLoanComplete').hide("slow");
        }
    });
    $('#needReminderLotComplete').change(function () {
        if ((this.checked)) {
            $('#remindEmailLotComplete').show("slow");
        }
        else {
            document.getElementById("lotDealerEmail").value = "";
            document.getElementById("lotDealerEmailRemindPeriod").value = "";
            $('#remindEmailLotComplete').hide("slow");
        }
    });
    $('#needReminderAdvanceDue').change(function () {
        if ((this.checked)) {
            $('#remindEmailAdvanceDue').show("slow");
        }
        else {
            document.getElementById("advanceDueEmail").value = "";
            document.getElementById("advanceDueEmailRemindPeriod").value = "";
            $('#remindEmailAdvanceDue').hide("slow");
        }
    });
    $('#needReminderLoanDue').change(function () {
        if ((this.checked)) {
            $('#remindEmailLoanDue').show("slow");
        }
        else {
            document.getElementById("loanDueEmail").value = "";
            document.getElementById("loanDueEmailRemindPeriod").value = "";
            $('#remindEmailLoanDue').hide("slow");
        }
    });
    $('#needReminderLotDue').change(function () {
        if ((this.checked)) {
            $('#remindEmailLotDue').show("slow");
        }
        else {
            document.getElementById("lotDueEmail").value = "";
            document.getElementById("lotDueEmailRemindPeriod").value = "";
            $('#remindEmailLotDue').hide("slow");
        }
    });
    function changeDropDownValueAdvance() {
        var drop1 = document.getElementById("dropDownAdvance").value;
        if (drop1 == "0"||drop1 == "2") {
            $('#advance').hide("slow");
            $('#remindEmailAdvanceComplete').hide();
            $('#remindEmailAdvanceDue').hide();
            $("#needReminderAdvanceDue").prop("checked", false);
            $("#needReminderAdvanceComplete").prop("checked", false);
            $("#advanceNeedReceipt").prop("checked", false);
            document.getElementById("advanceDueDate").value = "";
            document.getElementById("advanceDealerEmail").value = "";
            document.getElementById("advanceDealerEmailRemindPeriod").value = "";
            document.getElementById("advanceDueEmail").value = "";
            document.getElementById("advanceDueEmailRemindPeriod").value = "";
            document.getElementById("advanceAmount").value = "";
            document.getElementById("advanceCalculateType").value = "";
            document.getElementById("advanceDue").value = "";
        }
        else {
            $('input').next('span').children('span').text('');
            // for dropdown field
            $('select').next('span').children('span').text('');

            document.getElementById('advanceAmount').value = "";
            $('#advance').show("slow");
        }
    }
    function changeDropDownValueLoan() {
        var drop2 = document.getElementById("dropDownLoan").value;
        if (drop2 == "0"||drop2 == "2") {
            $('#loan').hide("slow");
            $('#remindEmailLoanComplete').hide();
            $('#remindEmailLoanDue').hide();
            $("#needReminderLoanDue").prop("checked", false);
            $("#needReminderLoanComplete").prop("checked", false);
            $("#monthlyLoanNeedReceipt").prop("checked", false);
            document.getElementById("loanDueDate").value = "";
            document.getElementById("loanDealerEmail").value = "";
            document.getElementById("loanDealerEmailRemindPeriod").value = "";
            document.getElementById("loanDueEmail").value = "";
            document.getElementById("loanDueEmailRemindPeriod").value = "";
            document.getElementById("loanAmount").value = "";
            document.getElementById("loanDue").value = "";
        }
        else {
            $('input').next('span').children('span').text('');

            // for dropdown field
            $('select').next('span').children('span').text('');
            document.getElementById('loanAmount').value = "";
            $('#loan').show("slow");
        }
    }
    function changeDropDownValueLot() {
        var drop3 = document.getElementById("dropDownLot").value;
        if (drop3 == "0"||drop3 == "2") {
            $('#lot').hide("slow");
            $('#remindEmailLotComplete').hide();
            $('#remindEmailLotDue').hide();
            $("#needReminderLotDue").prop("checked", false);
            $("#needReminderLotComplete").prop("checked", false);
            $("#lotInspectionNeedReceipt").prop("checked", false);
            document.getElementById("lotDueDate").value = "";
            document.getElementById("lotDealerEmail").value = "";
            document.getElementById("lotDealerEmailRemindPeriod").value = "";
            document.getElementById("lotDueEmail").value = "";
            document.getElementById("lotDueEmailRemindPeriod").value = "";
            document.getElementById("lotAmount").value = "";
            document.getElementById("lotDue").value = "";
        }
        else {
            $('input').next('span').children('span').text('');

            // for dropdown field
            $('select').next('span').children('span').text('');
            document.getElementById('lotAmount').value = "";
            $('#lot').show("slow");
        }
    }
    partialLoad();
    function partialLoad() {

        var isEdit = '@ViewBag.isEdit';
        var model = @Html.Raw(Json.Encode(Model));

        if(isEdit == "editable"){

            if (model.AdvanceAmount > 0) {
                document.getElementById("dropDownAdvance").value = "1";
                $('#advance').show("slow");
                if(model.AdvanceDue == "Once a Month"){
                    $("#monthAdvance").show();
                }
                else{
                    $("#monthAdvance").hide();
                    document.getElementById("advanceDueDate").value = "";
                }
                if(model.IsAdvanceFeeCompleteEmailReminder == true ){
                    $("#needReminderAdvanceComplete").attr("checked");
                    $("#remindEmailAdvanceComplete").show();
                }
                else{
                    $("#remindEmailAdvanceComplete").hide();
                    document.getElementById("advanceDealerEmail").value = "";
                    document.getElementById("advanceDealerEmailRemindPeriod").value = "";
                }
                if(model.IsAdvanceFeeDueEmailReminder == true ){
                    $("#needReminderAdvanceDue").attr("checked");
                    $("#remindEmailAdvanceDue").show();
                }
                else{
                    $("#remindEmailAdvanceDue").hide();
                    document.getElementById("advanceDueEmail").value = "";
                    document.getElementById("advanceDueEmailRemindPeriod").value = "";
                }
            }
            else{
                $('#advance').hide();
                $("#monthAdvance").hide();
                $('#remindEmailAdvanceComplete').hide();
                $('#remindEmailAdvanceDue').hide();
                $("#needReminderAdvanceDue").prop("checked", false);
                $("#needReminderAdvanceComplete").prop("checked", false);
                $("#advanceNeedReceipt").prop("checked", false);
                document.getElementById("advanceDueDate").value = "";
                document.getElementById("advanceDealerEmail").value = "";
                document.getElementById("advanceDealerEmailRemindPeriod").value = "";
                document.getElementById("advanceDueEmail").value = "";
                document.getElementById("advanceDueEmailRemindPeriod").value = "";
                document.getElementById("advanceAmount").value = "";
                document.getElementById("advanceCalculateType").value = "";
                document.getElementById("advanceDue").value = "";
            }
            if (model.MonthlyLoanAmount > 0) {
                document.getElementById("dropDownLoan").value = "1";
                $('#loan').show("slow");
                if(model.MonthlyLoanDue == "Once a Month"){
                    $("#monthLoan").show();
                }
                else{
                    $("#monthLoan").hide();
                    document.getElementById("loanDueDate").value = "";
                }
                if(model.IsLoanFeeCompleteEmailReminder == true ){
                    $("#needReminderLoanComplete").attr("checked");
                    $("#remindEmailLoanComplete").show();
                }
                else{
                    $("#remindEmailLoanComplete").hide();
                    document.getElementById("loanDealerEmail").value = "";
                    document.getElementById("loanDealerEmailRemindPeriod").value = "";
                }
                if(model.IsLoanFeeDueEmailReminder == true ){
                    $("#needReminderLoanDue").attr("checked");
                    $("#remindEmailLoanDue").show();
                }
                else{
                    $("#remindEmailLoanDue").hide();
                    document.getElementById("loanDueEmail").value = "";
                    document.getElementById("loanDueEmailRemindPeriod").value = "";
                }
            }
            else{
                $('#loan').hide();
                $("#monthLoan").hide();
                $('#remindEmailLoanComplete').hide();
                $('#remindEmailLoanDue').hide();
                $("#needReminderLoanDue").prop("checked", false);
                $("#needReminderLoanComplete").prop("checked", false);
                $("#monthlyLoanNeedReceipt").prop("checked", false);
                document.getElementById("loanDueDate").value = "";
                document.getElementById("loanDealerEmail").value = "";
                document.getElementById("loanDealerEmailRemindPeriod").value = "";
                document.getElementById("loanDueEmail").value = "";
                document.getElementById("loanDueEmailRemindPeriod").value = "";
                document.getElementById("loanAmount").value = "";
                document.getElementById("loanDue").value = "";
            }
            if (model.LotInspectionAmount > 0) {
                document.getElementById("dropDownLot").value = "1";
                $('#lot').show("slow");
                if(model.LotInspectionDue == "Monthly"){
                    $("#monthLot").show();
                }
                else{
                    $("#monthLot").hide();
                    document.getElementById("lotDueDate").value = "";
                }
                if(model.IsLotFeeCompleteEmailReminder == true ){
                    $("#needReminderLotComplete").attr("checked");
                    $("#remindEmailLotComplete").show();
                }
                else{
                    $("#remindEmailLotComplete").hide();
                    document.getElementById("lotDealerEmail").value = "";
                    document.getElementById("lotDealerEmailRemindPeriod").value = "";
                }
                if(model.IsLotFeeDueEmailReminder == true ){
                    $("#needReminderLotDue").attr("checked");
                    $("#remindEmailLotDue").show();
                }
                else{
                    $("#remindEmailLotDue").hide();
                    document.getElementById("lotDueEmail").value = "";
                    document.getElementById("lotDueEmailRemindPeriod").value = "";
                }
            }
            else{
                $('#lot').hide();
                $("#monthLot").hide();
                $('#remindEmailLotComplete').hide();
                $('#remindEmailLotDue').hide();
                $("#needReminderLotDue").prop("checked", false);
                $("#needReminderLotComplete").prop("checked", false);
                $("#lotInspectionNeedReceipt").prop("checked", false);
                document.getElementById("lotDueDate").value = "";
                document.getElementById("lotDealerEmail").value = "";
                document.getElementById("lotDealerEmailRemindPeriod").value = "";
                document.getElementById("lotDueEmail").value = "";
                document.getElementById("lotDueEmailRemindPeriod").value = "";
                document.getElementById("lotAmount").value = "";
                document.getElementById("lotDue").value = "";
            }
        }
        else{

            $('#advance').hide();
            $("#monthAdvance").hide();
            $('#remindEmailAdvanceComplete').hide();
            $('#remindEmailAdvanceDue').hide();
            $("#needReminderAdvanceDue").prop("checked", false);
            $("#needReminderAdvanceComplete").prop("checked", false);
            $("#advanceNeedReceipt").prop("checked", false);
            document.getElementById("advanceDueDate").value = "";
            document.getElementById("advanceDealerEmail").value = "";
            document.getElementById("advanceDealerEmailRemindPeriod").value = "";
            document.getElementById("advanceDueEmail").value = "";
            document.getElementById("advanceDueEmailRemindPeriod").value = "";
            document.getElementById("advanceAmount").value = "";
            document.getElementById("advanceCalculateType").value = "";
            document.getElementById("advanceDue").value = "";

            $('#loan').hide();
            $("#monthLoan").hide();
            $('#remindEmailLoanComplete').hide();
            $('#remindEmailLoanDue').hide();
            $("#needReminderLoanDue").prop("checked", false);
            $("#needReminderLoanComplete").prop("checked", false);
            $("#monthlyLoanNeedReceipt").prop("checked", false);
            document.getElementById("loanDueDate").value = "";
            document.getElementById("loanDealerEmail").value = "";
            document.getElementById("loanDealerEmailRemindPeriod").value = "";
            document.getElementById("loanDueEmail").value = "";
            document.getElementById("loanDueEmailRemindPeriod").value = "";
            document.getElementById("loanAmount").value = "";
            document.getElementById("loanDue").value = "";

            $('#lot').hide();
            $("#monthLot").hide();
            $('#remindEmailLotComplete').hide();
            $('#remindEmailLotDue').hide();
            $("#needReminderLotDue").prop("checked", false);
            $("#needReminderLotComplete").prop("checked", false);
            $("#lotInspectionNeedReceipt").prop("checked", false);
            document.getElementById("lotDueDate").value = "";
            document.getElementById("lotDealerEmail").value = "";
            document.getElementById("lotDealerEmailRemindPeriod").value = "";
            document.getElementById("lotDueEmail").value = "";
            document.getElementById("lotDueEmailRemindPeriod").value = "";
            document.getElementById("lotAmount").value = "";
            document.getElementById("lotDue").value = "";
        }
    }
    $('#clear').click(function () {
        document.getElementById("form").reset();
        $('#advance').hide();
        $("#monthAdvance").hide();
        $('#remindEmailAdvanceComplete').hide();
        $('#remindEmailAdvanceDue').hide();
        $("#needReminderAdvanceDue").prop("checked", false);
        $("#needReminderAdvanceComplete").prop("checked", false);
        $("#advanceNeedReceipt").prop("checked", false);
        document.getElementById("advanceDueDate").value = "";
        document.getElementById("advanceDealerEmail").value = "";
        document.getElementById("advanceDealerEmailRemindPeriod").value = "";
        document.getElementById("advanceDueEmail").value = "";
        document.getElementById("advanceDueEmailRemindPeriod").value = "";
        document.getElementById("advanceAmount").value = "";
        document.getElementById("advanceCalculateType").value = "";
        document.getElementById("advanceDue").value = "";

        $('#loan').hide();
        $("#monthLoan").hide();
        $('#remindEmailLoanComplete').hide();
        $('#remindEmailLoanDue').hide();
        $("#needReminderLoanDue").prop("checked", false);
        $("#needReminderLoanComplete").prop("checked", false);
        $("#monthlyLoanNeedReceipt").prop("checked", false);
        document.getElementById("loanDueDate").value = "";
        document.getElementById("loanDealerEmail").value = "";
        document.getElementById("loanDealerEmailRemindPeriod").value = "";
        document.getElementById("loanDueEmail").value = "";
        document.getElementById("loanDueEmailRemindPeriod").value = "";
        document.getElementById("loanAmount").value = "";
        document.getElementById("loanDue").value = "";

        $('#lot').hide();
        $("#monthLot").hide();
        $('#remindEmailLotComplete').hide();
        $('#remindEmailLotDue').hide();
        $("#needReminderLotDue").prop("checked", false);
        $("#needReminderLotComplete").prop("checked", false);
        $("#lotInspectionNeedReceipt").prop("checked", false);
        document.getElementById("lotDueDate").value = "";
        document.getElementById("lotDealerEmail").value = "";
        document.getElementById("lotDealerEmailRemindPeriod").value = "";
        document.getElementById("lotDueEmail").value = "";
        document.getElementById("lotDueEmailRemindPeriod").value = "";
        document.getElementById("lotAmount").value = "";
        document.getElementById("lotDue").value = "";
    });


    //Back Button
    $(function () {
        $('#btnPreStep8').click(function () {

            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("Step7", "SetupProcess")',
                type: 'GET',
                data: { edit: 1 },

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    handleErrorMsg(request.responseText);

                }
            });
        });
    });


    $(".tab.8").parent("li").addClass("active").siblings().removeClass('active');
    skipProgress(8);

</script>