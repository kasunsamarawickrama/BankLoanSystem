@model BankLoanSystem.Models.CurtailmentModel
@{
    ViewBag.Title = "Step5";
    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_SetupProcess.cshtml";
    }
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@if (ViewBag.Redirect == 1)
{
    <script>

        $(location).attr('href', '/UserManagement/UserDetails');
    </script>
}

<h2>Curtailment</h2>

@if (ViewBag.SuccessMsg == "Loan setup is completed")
{
    <span class="text-success">@ViewBag.SuccessMsg</span>
    <div class="form-group">
        <div class="button-panel">
            Click <a href="/UserManagement/UserDetails">here</a> to go dashboard.
            <input type="button" id="dashBoard" value="Dashboard" class="btn btn-primary  btn-next" style="left: 30%" />
        </div>
    </div>
}
else
{
    using (Ajax.BeginForm("Step10", "SetupProcess", new AjaxOptions()
    {

        OnFailure = "handleError",
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "changeContainer",
        LoadingElementId = "loadingDiv"
    }, new { id = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @if (ViewBag.SuccessMsg != null)
            {
                <span style="color: green">
                    @ViewBag.SuccessMsg
                </span>
            }
            else if (ViewBag.ErrorMsg != null)
            {
                <span style="color: red">
                    @ViewBag.ErrorMsg
                </span>
            }

            <input type="hidden" id="cal" name="cal"/>


            <div class="form-group">
                <table width="100%">
                    <tr>
                        <td width="25%">@Html.LabelFor(model => model.CalculationBase, htmlAttributes: new { })</td>
                        <td width="60%">
                            :@Html.RadioButtonFor(m => m.CalculationBase, "Full payment", new { @id = "rdFullPayment", @class = "payment" })
                            Full payment
                            @Html.RadioButtonFor(m => m.CalculationBase, "Advance", new { @id = "rdAdvance", @class = "payment" })
                            Advance
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td><div id="customErrorCalBase"><span class="text-danger"></span></div></td>
                    </tr>
                </table>

                <div>
                    @Html.ValidationMessageFor(model => model.CalculationBase, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">


            </div>

            
            <div class="form-group">
                @if (Model.RemainingPercentage >= 0)
                    {
                    <span style="background-color: yellow" id="spnremainPt">
                    </span>
                    <span style="background-color: greenyellow" id="spnremainPtComplete"></span>
                        <span style="background-color: red" id="spnremainPtError"></span>
                        <br />
                        <span style="background-color: yellow">
                            Advance Percentage: @Html.DisplayFor(m => m.RemainingPercentage, new { htmlAttributes = new { @id = "remainingPercentage" } })
                        </span>



                }
                <br />
                <span style="background-color: yellow">
                    Vehicle must be paid off within the @Html.DisplayFor(m => m.RemainingTime, new { htmlAttributes = new { @id = "remainingTime" } }) @Model.TimeBase
                </span>
            </div>
            <br />
            <div id="CurtailmentGrid">
                <div class="form-group">
                    <div style="text-align: center;">
                        <table id="tblGrid" cellpadding="3" cellspacing="0" border="1" style="border-color: Black; border-collapse: collapse; text-align: center; width: 60%;">
                            <tr style="font-weight: bold; background-color: darkgray; height: 15px;">
                                <th style="width: 10%; text-align: center" height="30px">
                                    <p id="cuId"> Curt#</p>
                                </th>
                                <th style="width: 35%; text-align: center" height="30px">
                                    <p id="time">@Model.TimeBase</p>
                                </th>
                                <th style="width: 35%; text-align: center" height="30px">
                                    <p id="pecentage">Percentage(%)</p>
                                </th>
                                <th style="width: 20%;" height="30px">
                                </th>
                            </tr>
                            @for (int a = 0; a < Model.InfoModel.Count; a++)
                            {
                                <tr>
                                    <td style="width: 10%;"><label id="lblCur">@*@Model.InfoModel[a].CurtailmentId*@1</label></td>
                                    <td style="width: 35%;">
                                        <input class="clstimePeriod" id="timePeriod" type="text" value="" disabled="disabled" style="text-align: right">
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true"></span>
                                    </td>
                                    <td style="width: 35%;">
                                        <input class="clsaddCuirtailment" id="percentage" type="text" value="" disabled="disabled" style="text-align: right">
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true"></span>
                                    </td>

                                    <td style="width: 20%;">
                                        @*@if (a != 0)
                                            {*@
                                        <input type="button" class="btnDeleteRow" name="" value="Delete" title="Delete Row" style="width: 60px; height: 25px"/>
                                        @*}*@
                                    </td>

                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div id="customErrorTable"><span class="text-danger"></span></div>
                <br />
                <div id="spnremainTimeError"><span class="text-danger"></span></div>
            </div>
            <br/>
            <div class="form-group">
                <table width="100%">
                    <tr>
                        <td width="25%">@Html.LabelFor(model => model.Activate, htmlAttributes: new { })</td>
                        <td width="60%">
                            : @Html.RadioButtonFor(m => m.Activate, "Yes", new { @id = "rdYes", @class = "Active" }) Yes
                            @Html.RadioButtonFor(m => m.Activate, "No", new { @id = "rdNo", @class = "Active" }) No
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td><div id="customErrorLoanStatus"><span class="text-danger"></span></div></td>
                    </tr>
                </table>

            </div>

            <div class="form-group">

                <div class="button-panel">
                    <input type="button" value="Back" name="subBack" id="btnPreStep10" class="btn btn-default left-button" />

                    <input type="button" value="Create" name="submit" id="btnCreate" class="btn btn-primary btn-next" style="left:40%" />

                </div>
            </div>
        </div>
    }


}
@*Grid view*@
<script type="text/javascript">

    $('#dashBoard').click(function () {
        window.location.replace('@Url.Action("UserDetails", "UserManagement")');
    });

    //Assign model details to global variable
    var model = @Html.Raw(Json.Encode(Model));

    //
    var remainingPt = parseInt(model.AdvancePt);
    var remainingTime = model.RemainingTime;
    var difPercentage = parseInt(100) - parseInt(model.AdvancePt);
    var id = 1;
    var payPercentage = 0;
    var isFirst = true;

    var list = { currentList: [] };

    function createTableRow(id) {
        return '<tr>' +
            '<td style="width: 10%;"><label id="lblCur">' +
            id +
            '</label></td>' +
            '<td style="width: 35%;">' +
            '<input class="clstimePeriod" id="timePeriod" type="text" value="" style="text-align: right">' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true"></span>' +
            '</td>' +
            '<td style="width: 35%;">' +
            '<input class="clsaddCuirtailment" id="percentage" type="text" value="" style="text-align: right">' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true"></span>' +
            '</td>' +
            '<td style="width: 20%;">' +
            '<input type="button" class="btnDeleteRow" name="" value="Delete" title="Delete Row" style="width: 60px; height: 25px"/>' +
            '</td>' +
            '</tr>';
    }

    $(document).on('click', '.clsaddCuirtailment', function (e) {
        $('#customErrorTable').children('span').text("");
    });

    $(document).on('click', '.clstimePeriod', function (e) {
        $('#spnremainTimeError').children('span').text("");
        $('#customErrorTable').children('span').text("");
    });

    // allow to enter only numbers
    $(document).on('keypress', '.clsaddCuirtailment, .clstimePeriod', function (e) {
        //alert(e.which);
        var res = AllowNumbers(this, e.which);
        if (res === 0) {
            e.preventDefault();
            return;
        }

        res = CheckMaxLenth(this, this.value, 4);
        if (res === 0) {
            e.preventDefault();
            return;
        }
    });

    $(document).on('keypress', '.clstimePeriod', function (e) {
        var tr = $(this).parents('tr:first');

        var curid = tr.find("#lblCur").html();

        //alert(String.fromCharCode(e.which));
    });

    $(document).on('blur', '.clstimePeriod', function (e) {

        var tr = $(this).parents('tr:first');

        var curid = tr.find("#lblCur").html();
        var timePeriod = tr.find("#timePeriod").val();
        var previousTime = 0;

        if(curid > 1)
            previousTime = list.currentList[curid - 2].TimePeriod;

        if (timePeriod > remainingTime) {
            //$('#spnremainTimeError').text('You entered time is greater than paid of period');
            $('#spnremainTimeError').children('span').text("You entered time should be less than paid off period");
        } else if (timePeriod <= previousTime && timePeriod > 0) {
            //$('#spnremainTimeError').text('You entered time should be greater than previous time');
            $('#spnremainTimeError').children('span').text("You entered time should be greater than previous time");
        }
        //else if(timePeriod < previousTime){
        //    $('#spnremainTimeError').text('You entered time should be greater than previous time');
        //}
        else {
            //$('#spnremainTimeError').text('');
            $('#spnremainTimeError').children('span').text("");
        }

        //if(timePeriod < list.currentList[j].TimePeriod)
        //alert(list.currentList[curid - 2].TimePeriod);
    });

    $(document).on('blur', '.clsaddCuirtailment', function (e) {
        //alert('Hi');
        //alert('blur ' + remainingPt);

        var tr = $(this).parents('tr:first');

        var curid = tr.find("#lblCur").html();
        var timePeriod = tr.find("#timePeriod").val();
        var percentage = tr.find("#percentage").val();

        var isNewRow = false;

        //alert('curid:' + curid + ' timePeriod:' + timePeriod + ' percentage:' + percentage);

        //alert(remainingTime);

        var currentListLenght = Object.keys(list.currentList).length;

        //for (var j = 0; j < currentListLenght; j++) {
        //    alert('curid:' + list.currentList[j].CurtailmentId + ' timePeriod:' + list.currentList[j].TimePeriod + ' percentage:' + list.currentList[j].Percentage);
        //}

        if (parseInt(currentListLenght) === (parseInt(curid) - parseInt(1)) && timePeriod !== '' && percentage !== '') {
            //alert('Hi');

            list.currentList.push({CurtailmentId: curid, TimePeriod: timePeriod, Percentage: percentage});
        }
        else if ((parseInt(currentListLenght) > (parseInt(curid) - parseInt(1))) && timePeriod !== '' && percentage !== '' ) {
            var index = (parseInt(curid) - parseInt(1));
            var prePercen = list.currentList[index].Percentage;
            list.currentList[index].Percentage = percentage;

            isNewRow = true;
            remainingPt = parseInt(remainingPt) + parseInt(prePercen) - parseInt(percentage);

            if(parseInt(remainingPt) > 0)
            {
                $('#spnremainPt').text('Remaining Percentage:' + remainingPt);
                $('#spnremainPtComplete').text('');
                $('#spnremainPtError').text('');
            }
            else if (parseInt(remainingPt) === 0) {
                $('#spnremainPt').text('');
                $('#spnremainPtComplete').text('Curtailment schedule Completed.');
                $('#spnremainPtError').text('');
                //$('#tblGrid').css('border-color', 'red');
                document.getElementById("tblGrid").style.borderColor = "green";
            } else {
                //alert(remainingPt);
                //$(this).css('background', 'red');
                //$(tr).css('background', 'red');
                $('#spnremainPt').text('');
                $('#spnremainPtComplete').text('');
                $('#spnremainPtError').text('Error percentage found');
            }

            //alert(prePercen);
        }



        //alert(list.currentList[0].CurtailmentId);
        //alert('Cur list: ' + currentListLenght + ' curid: ' + (parseInt(curid) - parseInt(1)));

        //alert('Curid: ' + curid + ' id: ' + id);

        if (parseInt(curid) === parseInt(id) && timePeriod !== '' && percentage !== '') {
            //alert('new row');

            if (isNewRow === false) {
                remainingPt = parseInt(remainingPt) - parseInt(percentage);
            }



            isFirst = false;
            if(parseInt(remainingPt) > 0)
            {
                var intId = parseInt(id);
                id = isNaN(intId) ? 0 : intId;
                id = id + 1;
                $('#spnremainPt').text('Remaining Percentage:' + remainingPt);

                var strTr = createTableRow(id);
                $('#tblGrid').append(strTr);
            }
            else if (parseInt(remainingPt) === 0) {
                $('#spnremainPt').text('');
                $('#spnremainPtComplete').text('Curtailment schedule Completed.');
                $('#spnremainPtError').text('');
            } else {
                //alert('blur ' + remainingPt);
                $('#spnremainPt').text('');
                $('#spnremainPtComplete').text('');
                $('#spnremainPtError').text('Error percentage found');
            }
        }
        //alert(remainingPt);
    });

    var isRowAdded = false;
    var isFullFirst = true;
    //update remaining percentage
    $('.payment').change(function() {
        $('#customErrorCalBase').children('span').text("");
        $('#customErrorTable').children('span').text("");
        //enable textboxes
        $('.clstimePeriod').prop("disabled", false);
        $('.clsaddCuirtailment').prop("disabled", false);

        var calcMode = $(this).filter(':checked').val();

        // track first time
        if (isFirst === true) {
            isFirst = false;
            alert('true');
            if(calcMode === 'Full payment') {
                payPercentage = parseInt(model.AdvancePt);
                remainingPt = parseInt(model.AdvancePt);

            }
            else if (calcMode === 'Advance') {
                payPercentage = parseInt(100);
                remainingPt = parseInt(100);
            }
        } else {
            //alert('false');
            if(calcMode === 'Full payment') {

                payPercentage = parseInt(model.AdvancePt);
                remainingPt = parseInt(remainingPt) - parseInt(difPercentage);
                //if (isFullFirst === true) {
                //    isFullFirst = false;
                //} else {
                //    alert('false');
                //    remainingPt = parseInt(remainingPt) - parseInt(difPercentage);
                //}
            }
            else if (calcMode === 'Advance') {
                payPercentage = parseInt(100);
                isFullFirst = false;
                remainingPt = parseInt(remainingPt) + parseInt(difPercentage);
            }
        }

        if(parseInt(remainingPt) > 0)
        {
            var val = document.getElementById('spnremainPtComplete').innerHTML;

            $('#spnremainPt').text('Remaining Percentage:' + remainingPt);
            $('#spnremainPtComplete').text('');
            $('#spnremainPtError').text('');

            if (val === 'Curtailment schedule Completed.' && isRowAdded === false) {
                var strTr = createTableRow(id);
                $('#tblGrid').append(strTr);
                isRowAdded = true;
            }
        }
        else if (parseInt(remainingPt) === 0) {
            $('#spnremainPt').text('');
            $('#spnremainPtComplete').text('Curtailment schedule Completed.');
            $('#spnremainPtError').text('');
        } else {
            $('#spnremainPt').text('');
            $('#spnremainPtComplete').text('');
            $('#spnremainPtError').text('Error percentage found');
        }

        //alert(remainingPt);
        //$('#spnremainPt').text('Remaining Percentage:' + remainingPt);
        //alert(calcMode);
    });

    //delete row
    $(document).on('click', '.btnDeleteRow', function () {
        var tblLength = $('table#tblGrid > tbody > tr').not(':first').length;
        $('#customErrorTable').children('span').text("");
        if(tblLength > 1)
        {
            var tr = $(this).parents('tr:first');

            var curid = tr.find("#lblCur").html();
            var timePeriod = tr.find("#timePeriod").val();
            var percentage = tr.find("#percentage").val();

            var gridTable = document.getElementById('tblGrid');
            gridTable.deleteRow(curid);
            id = id - 1;

            for (var k = curid; k < id + 1; k++) {
                gridTable.rows[k].cells[0].innerHTML = '<label id="lblCur">' + k + '</label>';
            }


            var removeIndex = (parseInt(curid) - parseInt(1));

            //alert(removeIndex);
            list.currentList.splice(removeIndex, 1);
            var currentListLenght = Object.keys(list.currentList).length;
            //alert(currentListLenght);
            for (var i = removeIndex; i < currentListLenght; i++) {
                list.currentList[i].CurtailmentId = removeIndex + 1;
            }

            //for (var j = 0; j < currentListLenght; j++) {
            //    alert('curid:' + list.currentList[j].CurtailmentId + ' timePeriod:' + list.currentList[j].TimePeriod + ' percentage:' + list.currentList[j].Percentage);
            //}

            //document.getElementById("tblGrid").deleteRow(curid);
            remainingPt = parseInt(remainingPt) + parseInt(percentage);

            if(parseInt(remainingPt) > 0)
            {
                var val = document.getElementById('spnremainPtComplete').innerHTML;

                $('#spnremainPt').text('Remaining Percentage:' + remainingPt);
                $('#spnremainPtComplete').text('');
                $('#spnremainPtError').text('');

                //if (val === 'Complete' && isRowAdded === false) {
                //    var strTr = createTableRow(id);
                //    $('#tblGrid').append(strTr);
                //    isRowAdded = true;
                //}
            }
            else if (parseInt(remainingPt) === 0) {
                $('#spnremainPt').text('');
                $('#spnremainPtComplete').text('Curtailment schedule Completed.');
                $('#spnremainPtError').text('');
            } else {
                $('#spnremainPt').text('');
                $('#spnremainPtComplete').text('');
                $('#spnremainPtError').text('Error percentage found');
            }

        }


        //alert('curid:' + curid + ' timePeriod:' + timePeriod + ' percentage:' + percentage);
    });

    $('#btnCreate').click(function() {
        $('#customErrorTable').children('span').text("");
        var calBase = $('.payment').filter(':checked').val();

        //alert(calBase);
        if (calBase === 'Full payment' || calBase === 'Advance') {
            //alert(calBase);
            $('#customErrorCalBase').children('span').text("");
        } else {
            $('#customErrorCalBase').children('span').text("Please select Base of calculation.");
        }


        var loanStatus = $('.Active').filter(':checked').val();
        //alert(loanStatus);
        if (loanStatus === 'Yes' || loanStatus === 'No') {
            $('#customErrorLoanStatus').children('span').text("");
        } else {
            $('#customErrorLoanStatus').children('span').text("Please select.");
        }

        if(remainingPt === 0 && (calBase === 'Full payment' || calBase === 'Advance') && (loanStatus === 'Yes' || loanStatus === 'No'))
        {
            var data = { curtailmentList: [] };
            $('table#tblGrid > tbody > tr').not(':first').each(function() {
                var curid = $(this).find("#lblCur").html();
                var timePeriod = $(this).find("#timePeriod").val();
                var percentage = $(this).find("#percentage").val();

                data.curtailmentList.push({CurtailmentId: curid, TimePeriod: timePeriod, Percentage: percentage, LoanStatus: loanStatus});
            });

            $.ajax({
                url: '/SetupProcess/AddCurtailment/',
                data: JSON.stringify(data),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (partialView) {
                    $('#changeContainer').html(partialView);

                    $('#changeContainer').show();
                }
            });
        }
        if (remainingPt > 0 && (calBase === 'Full payment' || calBase === 'Advance') && (loanStatus === 'Yes' || loanStatus === 'No')) {
            //$('#customErrorTable').children('span').text("Total curtailment % equals 2 but should be equal to 85. Please adjust the curtailment schedule.");
            var currentListLenght = Object.keys(list.currentList).length;
            var totatlPercentage = 0;
            for (var j = 0; j < currentListLenght; j++) {
                totatlPercentage = parseInt(totatlPercentage) + parseInt(list.currentList[j].Percentage);
            }

            $('#customErrorTable').children('span').text("Total curtailment % equals " + totatlPercentage + " but should be equal to " + payPercentage + ". Please adjust the curtailment schedule.");
        }
    });

    //set loan status
    $('.Active').change(function () {
        //$('#customErrorTable').children('span').text("");
        $('#customErrorLoanStatus').children('span').text("");

        //$.ajax({
        //    url: '/SetupProcess/SetLoanStatus/',
        //    data: { loanStatus: isaActive },
        //    type: 'POST',
        //    success: function (partialView) {
        //        $('#changeContainer').html(partialView);

        //        $('#changeContainer').show();
        //    }
        //});
    });

    function AllowNumbers(id, code) {
        if (48 <= code && code <= 58)
            return 1;
        return 0;
    }

    function CheckMaxLenth(id, val, maxLenght) {
        if (val.length < maxLenght) {
            return 1;
        }
        return 0;
    }

    $('#btnPreStep10').click(function () {
        $('#loadingDiv').show();
        $.ajax({
            url: '@Url.Action("Step9", "SetupProcess")',
            type: 'GET',

            success: function (partialView) {
                $('#loadingDiv').hide();
                $('#changeContainer').html(partialView);
                $('#changeContainer').show();

            },
            error: function (request, status, error) {
                handleErrorMsg(request.responseText);

            }
        });
    });

    @*$(function () {

        //get calculation base type
        var gCalBase = $('.payment').filter(':checked').val();
        var gLoanStatus = $('.Active').filter(':checked').val();

        //Check time period valid
        $('.timePeriod').bind('blur', function () {
            var tr = $(this).parents('tr:first');

            var id = tr.find("#lblCur").html();
            var timePeriod = tr.find("#timePeriod").val();

            var curtailmentTime = {
                "CurtailmentId": id,
                "TimePeriod": timePeriod
            };

            $.ajax({
                url: '/SetupProcess/CheckTimePeriod/',
                data: JSON.stringify(curtailmentTime),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (partialView) {
                    $('#changeContainer').html(partialView);
                    //if (gCalBase === "Advance") {
                    //    $('#rdAdvance').prop('checked', true);
                    //} else
                    //    $('#rdFullPayment').prop('checked', true);

                    if (gLoanStatus === "Yes")
                        $('#rdYes').prop('checked', true);
                    else
                        $('#rdNo').prop('checked', true);

                    $('#changeContainer').show();
                }
            });
        });

        //add curtailment
        $('.addCuirtailment').blur(function () {
            var tr = $(this).parents('tr:first');

            var id = tr.find("#lblCur").html();
            var timePeriod = tr.find("#timePeriod").val();
            var percentage = tr.find("#percentage").val();

            var curtailment = {
                "CurtailmentId": id,
                "TimePeriod": timePeriod,
                "Percentage": percentage,
                "CalculationBase2": gCalBase
            };

            $.ajax({
                url: '/SetupProcess/SetCurtailment/',
                data: JSON.stringify(curtailment),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (partialView) {
                    $('#changeContainer').html(partialView);
                    //if (gCalBase === "Advance") {
                    //    $('#rdAdvance').prop('checked', true);
                    //} else
                    //    $('#rdFullPayment').prop('checked', true);

                    if (gLoanStatus === "Yes")
                        $('#rdYes').prop('checked', true);
                    else
                        $('#rdNo').prop('checked', true);

                    $('#changeContainer').show();
                }
            });
        });

        //delete row
        $('.btnDeleteRow').click(function () {
            var tr = $(this).parents('tr:first');

            var id = tr.find("#lblCur").html();
            var timePeriod = tr.find("#timePeriod").val();
            var percentage = tr.find("#percentage").val();
            gCalBase = $('.payment').filter(':checked').val();
            //alert(id + ' ' + timePeriod + ' ' + percentage);

            var curtailment = {
                "CurtailmentId": id,
                "TimePeriod": timePeriod,
                "Percentage": percentage,
                "CalculationBase2": gCalBase
            };

            $.ajax({
                url: '/SetupProcess/DeleteCurtailmentRow/',
                data: JSON.stringify(curtailment),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (partialView) {
                    $('#changeContainer').html(partialView);
                    //if (gCalBase === "Advance") {
                    //    $('#rdAdvance').prop('checked', true);
                    //} else {
                    //    $('#rdFullPayment').prop('checked', true);
                    //}

                    if (gLoanStatus === "Yes")
                        $('#rdYes').prop('checked', true);
                    else
                        $('#rdNo').prop('checked', true);

                    $('#changeContainer').show();
                }
            });
        });

        //update remaining percentage
        $('.payment').change(function () {
            var calcMode = $(this).filter(':checked').val();

            gCalBase = calcMode;
            $.ajax({
                url: '/SetupProcess/SetPercentage/',
                data: { calcMode: calcMode },
                type: 'POST',
                success: function (partialView) {
                    $('#changeContainer').html(partialView);
                    //if (gCalBase === "Advance") {
                    //    $('#rdAdvance').prop('checked', true);
                    //} else
                    //    $('#rdFullPayment').prop('checked', true);

                    if (gLoanStatus === "Yes")
                        $('#rdYes').prop('checked', true);
                    else
                        $('#rdNo').prop('checked', true);

                    $('#changeContainer').show();
                }
            });
        });

        //set loan status
        $('.Active').change(function () {
            var isaActive = $(this).filter(':checked').val();

            gLoanStatus = isaActive;
            $.ajax({
                url: '/SetupProcess/SetLoanStatus/',
                data: { loanStatus: isaActive },
                type: 'POST',
                success: function (partialView) {
                    $('#changeContainer').html(partialView);
                    //if (gCalBase === "Advance") {
                    //    $('#rdAdvance').prop('checked', true);
                    //} else
                    //    $('#rdFullPayment').prop('checked', true);

                    if (gLoanStatus === "Yes")
                        $('#rdYes').prop('checked', true);
                    else
                        $('#rdNo').prop('checked', true);

                    $('#changeContainer').show();
                }
            });
        });

        $('#btnCreate').click(function () {
            $.ajax({
                url: '/SetupProcess/AddCurtailment/',
                type: 'POST',
                success: function (partialView) {
                    $('#changeContainer').html(partialView);
                    //if (gCalBase === "Advance") {
                    //    $('#rdAdvance').prop('checked', true);
                    //} else
                    //    $('#rdFullPayment').prop('checked', true);

                    if (gLoanStatus === "Yes")
                        $('#rdYes').prop('checked', true);
                    else
                        $('#rdNo').prop('checked', true);

                    $('#changeContainer').show();
                }
            });
        });

        $('#btnPreStep10').click(function () {
            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("Step9", "SetupProcess")',
                type: 'GET',

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    handleErrorMsg(request.responseText);

                }
            });
        });
    });*@

    Progress(10);
</script>