@model BankLoanSystem.Models.User
@{
    ViewBag.Title = "Step3";
    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_SetupProcess.cshtml";
    }
}



<div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper usersetup_border" style="min-height: 629px;">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <div class="container body-content">

                <div class="row">
                    <div class="container body-content new_container">
                        <div class="setupImage"><img src="~/Images/UserSetupImage.png" width="100" alt=""></div>
                        <div class="setupTitle">
                            <h2>Create User</h2>
                        </div>
                        <div style="clear:both;"></div>
                        <div class="form-horizontal new_form_horizontal">
                            <div class="topErrors">
                                <p class="err_msg">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>
                            </div>
                            <div class="form-horizontal">
                                @if (ViewBag.SuccessMsg == null)
                                {
                                    <div class="skipLink" style="font-size:18px"> <a id="skip" href="#">Skip >></a></div>
                                }
                                <div style="clear:both"></div>
                                @if (ViewBag.SuccessMsg != null && ViewBag.SuccessMsg.ToString().Equals("User Successfully Created"))
                                {
                                    using (Ajax.BeginForm("Step3", "SetupProcess", new AjaxOptions()
                                    {

                                        OnFailure = "handleErrorMsg",
                                        HttpMethod = "POST",
                                        InsertionMode = InsertionMode.Replace,
                                        UpdateTargetId = "changeContainer",
                                        LoadingElementId = "loadingDiv"
                                    }, new { id = "form", style = "clear: both;" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <span class="text-success">@ViewBag.SuccessMsg</span>
                                        <div class="form-group">
                                            <div class="button-panel">
                                                <input type="button" id="createNewUser" value="Create New User" class="btn btn-info left-button" />
                                                <span style="color: grey; margin-left: 5px; margin-right: 5px;">or</span>
                                                <input type="button" id="step4" value="Next" class="btn btn-primary btn-next" style="left:30%" />

                                            </div>

                                        </div>
                                    }

                                    <script>
                                        $(function () {
                                            // help functionality after success
                                            window.scrollTo(0, 0);
                                            $('.right_panel_box p').html('You can create additional users now or continue on to the next step of the setup process. You will be able to create additional users from your dashboard at any time.');
                                            $('.right_panel_box h4').html('Company users');


                                        $('#createNewUser').click(function () {

                                            $('#loadingDiv').show();
                                            $.ajax({
                                                url: '@Url.Action("Step3")',
                                                type: 'GET',


                                                success: function (partialView) {
                                                    $('#loadingDiv').hide();
                                                    $('#changeContainer').html(partialView);
                                                    $('#changeContainer').show();
                                                },

                                                error: function (request, status, error) {
                                                    //handleErrorMsg(request.responseText);

                                                }
                                            });


                                        });

                                        $(function () {
                                            $('#step4').click(function () {

                                                $('#loadingDiv').show();
                                                $.ajax({
                                                    url: '@Url.Action("Step4")',
                                                    type: 'GET',


                                                    success: function (partialView) {
                                                        $('#loadingDiv').hide();
                                                        $('#changeContainer').html(partialView);
                                                        $('#changeContainer').show();
                                                        Progress(4);
                                                    },
                                                    error: function (request, status, error) {
                                                        //handleErrorMsg(request.responseText);

                                                    }
                                                });
                                            });
                                        });
                                    });

                                    </script>


                                }

                                else
                                {

                                    using (Ajax.BeginForm("Step3", "SetupProcess", new AjaxOptions()
                                    {

                                        OnFailure = "handleErrorMsg",
                                        HttpMethod = "POST",
                                        InsertionMode = InsertionMode.Replace,
                                        UpdateTargetId = "changeContainer",
                                        LoadingElementId = "loadingDiv"
                                    }, new { id = "form" }))
                                    {
                                        @Html.AntiForgeryToken()



                                        <div class="form-horizontal">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>User Role</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.DropDownListFor(model => model.RoleId, null, "--Select Role--", htmlAttributes: new { @class = "form-control text_field_input", id = "RoleId" })

                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger", @id = "RoleIdValidate" })</p>
                                                </div>
                                            </div>
                                            <div id="branchDiv" hidden>
                                                @if (ViewBag.CurrUserRoleType != 2)
                    {
                                                    <div class="form-group new_form_group">
                                                        <div class="control-label col-sm-2 lable_style">
                                                            <label>Branch   @if (ViewBag.BranchId.Items.Count > 1)
                                                            {<span class="icon-help_outline"></span>}
                                                            
                                                            </label>
                                                           
                                                        </div>
                                                        @if (ViewBag.BranchId.Items.Count == 1)
                        {
                                                            <div class="col-xs-8 text_field short_text_field">
                                                                @Html.HiddenFor(model => model.BranchId, new { @Value = (int)ViewBag.BranchId.Items[0].BranchId })
                                                                @Html.LabelFor(model => model.BranchId, (string)ViewBag.BranchId.Items[0].BranchName, htmlAttributes: new { @class = "form-control text_field_input", id = "RegisteredBranchId", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;" }) 
                                                                
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="col-xs-8 text_field short_text_field">
                                                                @Html.DropDownListFor(model => model.BranchId, null, "--Select a company branch--", htmlAttributes: new { @class = "form-control", id = "BranchId" })
                                                            </div>
                                                        }
                                                        <div class="err_msg_box">
                                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })</p>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>First Name</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "txtFirstName" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Last Name</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "txtLastName" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>email</label>
                                                </div>
                                                <div class="col-xs-8 text_field">
                                                    @Html.EditorFor(model => model.NewEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtNewEmail" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.NewEmail, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>
                                                        Phone Number<br>
                                                        <span class="optional">(Optional)</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.PhoneNumber2, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtPhoneNumber" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.PhoneNumber2, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Username</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "txtUserName" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Password</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtPassword" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Confirm Password</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control text-box single-line password text_field_input", @id = "txtConfirmPassword" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            
                                            <div class="form-group new_form_group" id="divActiveUser">

                                                <div class="control-label col-sm-2" style="font-weight:normal;color:#545454;font-size:14px;margin-left:-16px;">
                                                    <label>Do you need to activate the user now?</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field" style="font-weight:normal;color:#545454;font-size:14px;margin-top:5px;">
                                                    @Html.RadioButtonFor(model => model.Status, "true", new { @id = "rbYes" }) Yes
                                                    @Html.RadioButtonFor(model => model.Status, "false", new { @id = "rbNo", @style = "margin-left:20px" }) No
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>

                                           

                                            <div class="form-group new_form_group clear_next clear_next_bordr">
                                                <div>
                                                    <nav>
                                                        <div class="pager new_pager">
                                                            <div class="button_box algn_left">
                                                                <input value="Back" name="subBack" id="btnPreStep3" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button">
                                                            </div>
                                                            <div class="button_box algn_center">
                                                                <input value="Create" class="btn btn-primary m-b next_clear_button next_back" style="margin-left:10px" type="submit">
                                                            </div>
                                                            <div class="button_box algn_right">
                                                                <input id="clear" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button">
                                                            </div>
                                                            <div style="clear:both"></div>
                                                        </div>
                                                    </nav>
                                                </div>
                                            </div>
                                        </div>

                                    }

                                    <div>
                                    </div>

                                }


                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="rightPanel">
    @{
        @Html.Partial("Step3help")
    }
</div>

<script language="javascript">

  $(document).ready(function(){


      window.scrollTo(0, 0);

      // for input mask

      new InputMask().Initialize(document.querySelectorAll("#txtPhoneNumber"),
      {
          mask: InputMaskDefaultMask.Phone,
          placeHolder: "(___) ___-____"
      });

      $("#txtPhoneNumber").focusout(function (e) {

         
              $(this).attr("placeholder", "(___) ___-____");
          
      });


  $('.nav li.active ul').removeClass('in');
  $('.nav li').removeClass('active');
  $('.nav li.user').addClass('active');
  $('.nav li.active ul').addClass('in');

    // helper Funtionality
  var HelpString = $('.right_panel_box p').html();
  var HelpTitle = $('.right_panel_box h4').html();

  $('#BranchId , .icon-help_outline').click(function () {
     
      $('.right_panel_box p').html('Select the branch this Admin will be assigned to. The Admin will be able to control all areas of this branch only.');
      $('.right_panel_box h4').html('Select a company branch');
   

  });

  $('select:not(#BranchId), span:not(.icon-help_outline), input ').click(function () {

      $('.right_panel_box p').html(HelpString);
      $('.right_panel_box h4').html(HelpTitle);


      });


  })
</script>



<script src="~/scripts/CommonFunctions.js"></script>

<script>

    $("#clear").click(function () {
        $('#branchDiv').hide();
        $('#txtUserName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtUserName').next("div").children("p").children("span").text("");
        $('#txtPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtPassword').next("div").children("p").children("span").text("");
        $('#txtConfirmPassword').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtConfirmPassword').next("div").children("p").children("span").text("");
        $('#txtFirstName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtFirstName').next("div").children("p").children("span").text("");
        $('#txtLastName').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtLastName').next("div").children("p").children("span").text("");
        $('#txtNewEmail').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtNewEmail').next("div").children("p").children("span").text("");
        $('#txtPhoneNumber').closest("div").siblings('div').children("p").children("span").text("");
        $('#txtPhoneNumber').next("div").children("p").children("span").text("");
        $('#RoleId').closest("div").siblings('div').children("p").children("span").text("");
        $('#RoleId').next("div").children("p").children("span").text("");

        $('input[type=radio]').each(function () {
            ($(this).removeClass('input-validation-error'));
        });
        
    });

    $(function () {
        $('#skip').click(function () {

            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("Step4")',
                type: 'GET',


                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();
                    Progress(4);
                },
                error: function (request, status, error) {
                    //handleErrorMsg(request.responseText);

                }
            });
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        $('#btnPreStep3').click(function () {

            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("step2", "SetupProcess")',
                type: 'GET',
                data: { edit: 1 },

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    //handleErrorMsg(request.responseText);

                }
            });
        });
    });

    $(".tab.3").parent("li").addClass("active").siblings().removeClass('active');

    Progress(3);
    $('#RoleId').change(function () {
        var val = document.getElementById("RoleId").value;
        if (val == '2' || val == '3') {
            $('#branchDiv').show();
        }
        else {
            $('#branchDiv').hide();
        }
    });

    //Validation

    // User name validate
    $('#txtUserName').keypress(function (e) {
        var code = e.which;
        if (this.value.length === 0 && (48 <= code && code <= 57)) {
            //$("#customError span[id^='spnUserName']").text("User name can't be start with numbers");
            this.focus();
            e.preventDefault();
            return;
        }

        var res = BlockText(e.which);
        if (res === 1) {
            //$("#customError span[id^='spnUserName']").text("Please use only letters (a-z) and numbers.");
            e.preventDefault();
            return;
        }
    });

    // change to title case

    $('#txtFirstName, #txtLastName').blur(function (e) {
        //ToTitleCase(this.id, this.value);
        if (e.which !== 37 && e.which !== 8 && e.which !== 32)
            ToTitleCase(this.id, this.value);
    });


    //Check maximum length
    $('#txtUserName, #txtFirstName, #txtLastName, #txtPassword, #txtConfirmPassword').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 30);
        if (res === 0) {
            e.preventDefault();
            return;
        }
    });

    $('#txtPassword, #txtConfirmPassword').keypress(function (e) {
        if (this.value.length === 0 && e.which === 32) {
            e.preventDefault();
            return;
        }
        var array = ['`', '*', '&', '=', '|', ';', '"', '<', '>'];
        var res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }
        else if (e.which === 92) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    //Check maximum length for email address and valid characters
    $('#txtNewEmail').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 100);
        if (res === 0) {
            e.preventDefault();
            return;
        }

        var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ','];
        res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }
        else if (e.which === 92 || e.which === 39) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    $('#txtFirstName, #txtLastName').keypress(function (e) {
        //var array = [' ', '/', '`', '~', '!'];
        var array = ['~', '`', '!', '#', '$', '%', '&', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', ''];
        var res = InvalidCharacters(this, array, e.which);

        if (res === 1) {
            e.preventDefault();
            return;
        }

        if (e.which === 92) {
            //$(this).siblings('div').children('span').text("Invalid character.");
            e.preventDefault();
            return;
        }
    });

    $('#txtPhoneNumber').keypress(function (e) {
        var res = PhoneNumber(this, e.which);
        if (res === 0) {
            e.preventDefault();
            return;
        }

        res = CheckMaxLenth(this, this.value, 14);
        if (res === 0) {
            e.preventDefault();
            return;
        }
    });

</script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>

