@model BankLoanSystem.Models.User
@{
    ViewBag.Title = "Step3";

}

@*<script>
        progress(3);


    </script>*@



<div class="form-group">
    <div class="control-label col-sm-5">
        <h2>Create User</h2>
        </div>
        @if (ViewBag.SuccessMsg == null)
        {
            <div class="col-xs-7">
                <span></span> <input type="button" id="skip" value="Skip" class="btn btn-info right-button" />
            </div>

        }
    </div>

    @if (ViewBag.SuccessMsg != null && ViewBag.SuccessMsg.ToString().Equals("User Successfully Created"))
    {
        using (Ajax.BeginForm("Step3", "SetupProcess", new AjaxOptions()
        {

            OnFailure = "handleErrorMsg",
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "changeContainer",
            LoadingElementId = "loadingDiv"
        }, new { id = "form" }))
        {
            @Html.AntiForgeryToken()
            @ViewBag.SuccessMsg
            <div class="form-group">

                <div class="button-panel">

                    <input type="button" id="createNewUser" value="Create a New User" class="btn btn-info left-button" />

                    <input type="button" id="step4" value="Next" class="btn btn-primary btn-next" style="left:30%" />


                </div>


            </div>
        }

        <script>
            $(function () {
                $('#createNewUser').click(function () {

                    $('#loadingDiv').show();
                    $.ajax({
                        url: '@Url.Action("Step3")',
                        type: 'GET',


                        success: function (partialView) {
                            $('#loadingDiv').hide();
                            $('#changeContainer').html(partialView);
                            $('#changeContainer').show();
                        },

                        error: function (request, status, error) {
                            handleErrorMsg(request.responseText);

                        }
                    });


                });

                $(function () {
                    $('#step4').click(function () {

                        $('#loadingDiv').show();
                        $.ajax({
                            url: '@Url.Action("Step4")',
                            type: 'GET',


                            success: function (partialView) {
                                $('#loadingDiv').hide();
                                $('#changeContainer').html(partialView);
                                $('#changeContainer').show();
                                Progress(4);
                            },
                            error: function (request, status, error) {
                                handleErrorMsg(request.responseText);

                            }
                        });
                    });
                });
            });

        </script>


    }

    else
    {

        using (Ajax.BeginForm("Step3", "SetupProcess", new AjaxOptions()
        {

            OnFailure = "handleErrorMsg",
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "changeContainer",
            LoadingElementId = "loadingDiv"
        }, new { id = "form" }))
        {
            @Html.AntiForgeryToken()



            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="control-label col-sm-2" style="clear:both">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { })<span style="color:red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { })<span style="color: red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { })<span style="color:red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { })<span style="color:red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { })<span style="color:red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.NewEmail, htmlAttributes: new { })<span style="color:red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.NewEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { })<span style="color:red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (ViewBag.CurrUserRoleType != 2)
                    {
                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.BranchId, htmlAttributes: new { })<span style="color:red">*</span>
                        </div>

                        <div class="col-xs-8">
                            @Html.DropDownListFor(model => model.BranchId, null, "Select branch", htmlAttributes: new { @class = "form-control", id = "BranchId" })
                            @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { })<span style="color:red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.DropDownListFor(model => model.RoleId, null, "Select role", htmlAttributes: new { @class = "form-control", id = "RoleId" })
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger", @id = "RoleIdValidate" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="button-panel">
                        <input type="button" value="Back" name="subBack" id="btnPreStep3" class="btn btn-default left-button" />


                        <input type="submit" value="Create" class="btn btn-primary btn-next" style="left:40%" />
                        <input type="button" id="clear" value="Clear" class="btn btn-default right-button" />

                    </div>
                 
                </div>
            </div>

        }

        <div>

        </div>

    }







    <script>

        $(function () {
            $('#skip').click(function () {

                $('#loadingDiv').show();
                $.ajax({
                    url: '@Url.Action("Step4")',
                    type: 'GET',


                    success: function (partialView) {
                        $('#loadingDiv').hide();
                        $('#changeContainer').html(partialView);
                        $('#changeContainer').show();
                        Progress(4);
                    },
                    error: function (request, status, error) {
                        handleErrorMsg(request.responseText);

                    }
                });
            });
        });

        $('#clear').click(function () {
            document.getElementsByTagName("form")[0].reset();
        });
    </script>

    <script type="text/javascript">
        $(function () {
            $('#btnPreStep3').click(function () {

                $('#loadingDiv').show();
                $.ajax({
                    url: '@Url.Action("step2", "SetupProcess")',
                    type: 'GET',
                    data: { edit: 1 },

                    success: function (partialView) {
                        $('#loadingDiv').hide();
                        $('#changeContainer').html(partialView);
                        $('#changeContainer').show();

                    },
                    error: function (request, status, error) {
                        handleErrorMsg(request.responseText);

                    }
                });
            });
        });

        $(".tab.3").parent("li").addClass("active").siblings().removeClass('active');
    </script>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    @*<script type="text/javascript">
            function editUser(index) {

                var model = @Html.Raw(Json.Encode(Model));
                console.log(model);
                console.log(index);

                document.getElementById("EditableUserName").value = model.Users[index].UserName;
                //document.getElementById("password").value = model.Users[index].Password;
                //document.getElementById("confirmPassword").value = model.Users[index].ConfirmPassword;
                document.getElementById("firstName").value = model.Users[index].FirstName;
                document.getElementById("lastName").value = model.Users[index].LastName;
                document.getElementById("EditableEmail").value = model.Users[index].NewEmail;
                document.getElementById("phone").value = model.Users[index].PhoneNumber;
                document.getElementById("BranchId").value = model.Users[index].BranchId;
                document.getElementById("RoleId").value = model.Users[index].RoleId;
                document.getElementById("editUserId").value = model.Users[index].UserId;
            };

            function CreateNewUser(){
                document.getElementById("EditableUserName").value = "";
                document.getElementById("password").value = "";
                document.getElementById("confirmPassword").value = "";
                document.getElementById("firstName").value = "";
                document.getElementById("lastName").value = "";
                document.getElementById("EditableEmail").value = "";
                document.getElementById("phone").value = "";
                document.getElementById("BranchId").value = "";
                document.getElementById("RoleId").value = "";
                document.getElementById("editUserId").value = "";
            }

        </script>*@
