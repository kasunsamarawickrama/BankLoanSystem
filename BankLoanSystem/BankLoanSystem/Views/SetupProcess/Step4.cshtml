@model BankLoanSystem.Models.Company

@{
    ViewBag.Title = "Step4";
    
}



@*<script>
    progress(4);


</script>*@
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    

    <div class="row">
        <div class="container body-content">
            <h2>Create @ViewBag.ThisCompanyType Company</h2>

            @if (ViewBag.SuccessMsg != null)
            {
                @ViewBag.SuccessMsg
            }
            else if (@ViewBag.ErrorMsg != null)
            {
                @ViewBag.ErrorMsg
            }

            @using (Ajax.BeginForm("Step4", "SetupProcess", new AjaxOptions()
            {
                OnSuccess = "Progress(5)",
                OnFailure = "handleError",
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "changeContainer",
                LoadingElementId = "loadingDiv"
            }, new { id = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @*@if (ViewBag.SuccessMsg == null)
                {*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { })<span style="color: red">*</span>
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.CompanyAddress1, htmlAttributes: new { })<span style="color: red">*</span>
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.CompanyAddress1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyAddress1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.CompanyAddress2, htmlAttributes: new { })
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.CompanyAddress2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyAddress2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { })<span style="color: red">*</span>
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.StateId, htmlAttributes: new { })<span style="color: red">*</span>
                        </div>
                        <div class="col-xs-8">
                            @Html.DropDownListFor(model => model.StateId, null, "Select state", htmlAttributes: new { @class = "form-control", id = "StateId" })
                            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.ZipPre, htmlAttributes: new { })<span style="color: red">*</span>
                        </div>

                        <div class="col-xs-4" style="width:32.2%">
                            @Html.EditorFor(model => model.Extension, new {htmlAttributes = new {@class = "form-control", placeholder = "Extension" } })
                            @Html.ValidationMessageFor(model => model.Extension, "", new {@class = "text-danger"})
                        </div>
                        <span class="glyphicons glyphicon-minus" style="float:right;margin-top:20px"></span>
                        <div class="col-xs-4">
                            @Html.EditorFor(model => model.ZipPre, new { htmlAttributes = new { @class = "form-control", placeholder = "Zip Code" } })
                            @Html.ValidationMessageFor(model => model.ZipPre, "", new { @class = "text-danger" })
                            
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.PhoneNum1, htmlAttributes: new { })<span style="color: red">*</span>
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.PhoneNum1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNum1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.PhoneNum2, htmlAttributes: new { })
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.PhoneNum2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNum2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.PhoneNum3, htmlAttributes: new { })
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.PhoneNum3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNum3, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.Fax, htmlAttributes: new { })
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { })
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.WebsiteUrl, htmlAttributes: new { })
                        </div>
                        <div class="col-xs-8">
                            @Html.EditorFor(model => model.WebsiteUrl, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WebsiteUrl, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            <nav>
                                <ul class="pager">

                                    <li>
                                        <input type="submit" value="Next" class="btn btn-primary m-b" style="float: right; margin-left: 10px" />
                                    </li>
                                    <li>
                                        <input type="button" id="clear" value="Clear" class="btn btn-primary m-b" style="float: right; margin-left: 10px"  />
                                    </li>
                                    
                                </ul>
                            </nav>
                        </div>
                    </div>


                </div>
            }

        </div>
    </div>


<script>
    $('#clear').click(function () {
        document.getElementsByTagName("form")[0].reset();
    });
</script>