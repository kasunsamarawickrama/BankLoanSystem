@model BankLoanSystem.Models.NonRegCompanyBranchModel
@{
    ViewBag.Title = "Step5";

    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_SetupProcess.cshtml";
    }

}


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>

<div class="form-horizontal">

    <div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper partnersetup_border" style="min-height: 629px;">
        <div class="ibox float-e-margins">
            <div class="ibox-title">

                <div class="container body-content">
                    <div class="row">
                        <div class="container body-content new_container">
                            <div class="setupImage"><img src="~/Images/partnerSetupImage.png" width="100" alt=""></div>
                            <div class="setupTitle">
                                <h2>Create @ViewBag.ThisCompanyType Branch</h2>
                            </div>
                            <div style="clear:both;"></div>
                            @if (ViewBag.SuccessMsg != null && (ViewBag.SuccessMsg.ToString().Equals("Dealer branch is successfully created") || ViewBag.SuccessMsg.ToString().Equals("Lender branch is successfully created")))
                            {
                       
                                using (Html.BeginForm("Step5", "SetupProcess", FormMethod.Post,
            new { id = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <span class="text-success">@ViewBag.SuccessMsg</span>
                                    <div class="form-group">
                                        <div class="button-panel">
                                            <input type="button" id="step6" value="Loan Setup" class="btn btn-primary btn-next" style="left: 30%" />
                                            <input type="button" id="dashBoard" value="Dashboard" class="btn btn-primary right-button" style="left:30%" />
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                              
                                using (Html.BeginForm("Step5", "SetupProcess", FormMethod.Post,
                new { id = "form" }))
                                {

                                    @Html.AntiForgeryToken()


                                    <div class="form-horizontal new_form_horizontal">
                                        <div class="topErrors">
                                            @if (ViewBag.ErrorMsg != null)
                                            {
                                                <p class="err_msg">@ViewBag.ErrorMsg</p>
                                            }
                                            <p class="err_msg">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>
                                        </div>
                                        <div class="form-horizontal">

                                           
                                            @if (Model.NonRegBranches != null)
                                            {
                                                <div class="form-group new_form_group" id="lnkCreateNewBranch" hidden>
                                                    <div class="col-xs-8 text_field">
                                                        @*<a onclick="CreateNewBranch()">create new partner branch</a>*@
                                                        <a onclick="CreateNewBranch()">create new partner branch</a>
                                                    </div>
                                                </div>
                                            }

                                            <input id="branchCode" name="branchCode" type="hidden" value="" />
                                            @if (ViewBag.CurrUserRoleType != 2)
                                            {
                                                <div class="form-group new_form_group">
                                                    @if (@ViewBag.ThisCompanyType == "Dealer")
                                                    {
                                                        <div class="control-label col-sm-2 lable_style">
                                                            <label>
                                                                Lender Branch @if (Enumerable.Count(ViewBag.RegBranchId) > 1)
                                                                {<span class="icon-help_outline 1"></span>}
                                                            </label>
                                                        </div>
                                                    }
                                                  else if (@ViewBag.ThisCompanyType == "Lender")
                                                   {
                                                    <div class="control-label col-sm-2 lable_style">
                                                        <label>
                                                            Dealer Branch @if (Enumerable.Count(ViewBag.RegBranchId) > 1)
                                                            {<span class="icon-help_outline 1"></span>}
                                                        </label>
                                                    </div>
                                                   }
                                                    
                                                        @if (Enumerable.Count(ViewBag.RegBranchId) == 1)
                                                        {
                                                            <div class="col-xs-8 text_field short_text_field" style="width:66.67%">
                                                                @Html.HiddenFor(model => model.RegBranchId, new { @Value = (int)ViewBag.RegBranchId.Items[0].BranchId })
                                                                @Html.LabelFor(model => model.RegBranchId, (string)ViewBag.RegBranchId.Items[0].BranchName, htmlAttributes: new { @class = "form-control text_field_input", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block;" })
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="col-xs-8 text_field short_text_field">
                                                                @Html.DropDownListFor(model => model.RegBranchId, null, "--Select Branch--", htmlAttributes: new { @class = "form-control text_field_input", id = "RegBranchId" })

                                                            </div>
                                                        }

                                                    
                                                    <div class="err_msg_box">
                                                        <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.RegBranchId, "", new { @class = "text-danger" })</p>
                                                    </div>
                                                </div>
                                            }
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Partner</label><br/><label> Company Name</label>
                                                </div>
                                               
                                                <div class="col-xs-8 text_field short_text_field" style="width:44%">
                                                    @if (Enumerable.Count(ViewBag.NonRegCompanyId) == 1)
                                                    {
                                                        
                                                        @Html.HiddenFor(model => model.NonRegCompanyId, new { @Value = (int)ViewBag.NonRegCompanyId.Items[0].CompanyId })
                                                        @Html.LabelFor(model => model.NonRegCompanyId, (string)ViewBag.NonRegCompanyId.Items[0].CompanyName, htmlAttributes: new { @class = "form-control text_field_input", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top:24px !important;display: block;" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => model.NonRegCompanyId, null, "--Select Partner Comapny--", htmlAttributes: new { @class = "form-control text_field_input", @id = "NonRegCompanyId" })
                                                    }
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.NonRegCompanyId, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                           
                                            @if (Enumerable.Count(ViewBag.NonRegCompanyId) == 1 && Model.NonRegBranches == null)
                                            {
                                                <div class="form-group new_form_group">
                                                    @if (@ViewBag.ThisCompanyType == "Dealer")
                                                    {
                                                        <div class="control-label col-sm-5" style="text-align: left;width: 42%;margin-left: -3%;float: left;font-size: 14px;">
                                                            <label style="font-weight:normal;color:#545454;font-size:14px">Same details as dealer company created    <span class='icon-help_outline 2'></span></label>
                                                        </div>
                                                    }
                                                    else if (@ViewBag.ThisCompanyType == "Lender")
                                                    {
                                                        <div class="control-label col-sm-5" style="text-align: left;width: 42%;margin-left: -3%;float: left;font-size: 14px;">
                                                            <label style="font-weight:normal;color:#545454;font-size:14px">Same details as lender company created    <span class='icon-help_outline 2'></span></label>
                                                        </div>
                                                    }
                                                    <div class="control-label col-sm-1" style="text-align: left;text-align: left;margin-left:-3%;margin-top: 5px;">
                                                        @Html.CheckBox("Previous", new { @id = "Previous" })
                                                    </div>
                                                </div>
                                            }

                                            
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Partner Branch Name</label>
                                                </div>
                                                <div class="col-xs-8 text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchName, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "branchName", @maxlength = 50 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchName, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Street Address 1</label>
                                                </div>
                                                <div class="col-xs-8 text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchAddress1, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "branchAddress1", @maxlength = 50 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchAddress1, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>
                                                        Street Address 2<br>
                                                        <span class="optional">(Optional)</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-8 text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchAddress2, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "branchAddress2", @maxlength = 50 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchAddress2, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>City</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchCity, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input first_letter_capital", @id = "branchCity", @maxlength = 50 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchCity, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>State</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.DropDownListFor(model => model.StateId, null, "--Select State--", htmlAttributes: new { @class = "form-control text_field_input", id = "StateId" })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Zip Code</label>
                                                </div>
                                                <div class="col-xs-4 text_field new_zip">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.ZipPre, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "branchZipPre", placeholder = "Zip Code", maxlength = 5 , style = "width: 80px;"} })
                                                </div>
                                                <span class="glyphicons glyphicon-minus" style="float:left;margin-top:6px;margin-left:-5px;margin-right:5px;"></span>
                                                <div class="col-xs-4 text_field new_zip">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.Extention, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "branchZipExten", placeholder = "Extension", maxlength = 4, style = "width: 83px;" } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.ZipPre, "", new { @class = "text-danger" })</p>
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.Extention, "", new { @class = "text-danger" })</p>
                                                </div>
                                                @*<div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.Extention, "", new { @class = "text-danger" })</p>
                                                </div>*@
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>
                                                        Email  @if (ViewBag.ThisCompanyType == "Dealer")
                                                        { <span class='icon-help_outline 3'></span>
                                                            }<br>
                                                            <span class="optional">(Optional)</span>
</label>
                                                </div>
                                                <div class="col-xs-8 text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchEmail, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "branchEmail", @maxlength = 100 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchEmail, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>Phone Number 1</label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchPhoneNum1, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "branchPhoneNum1", @maxlength = 15 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchPhoneNum1, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>
                                                        Phone Number 2<br>
                                                        <span class="optional">(Optional)</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchPhoneNum2, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "branchPhoneNum2", @maxlength = 15 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchPhoneNum2, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>
                                                        Phone Number 3<br>
                                                        <span class="optional">(Optional)</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchPhoneNum3, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "branchPhoneNum3", @maxlength = 15 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchPhoneNum3, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group">
                                                <div class="control-label col-sm-2 lable_style">
                                                    <label>
                                                        Fax Number<br>
                                                        <span class="optional">(Optional)</span>
                                                    </label>
                                                </div>
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.CompanyBranch.MainBranch.BranchFax, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input", @id = "branchFax", @maxlength = 15 } })
                                                </div>
                                                <div class="err_msg_box">
                                                    <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.CompanyBranch.MainBranch.BranchFax, "", new { @class = "text-danger" })</p>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group clear_next">
                                                <div>
                                                    <nav>
                                                        <div class="pager new_pager">
                                                            <div class="button_box algn_left">
                                                                <input value="Back" name="subBack" id="btnPreStep5" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button">
                                                            </div>
                                                            <div class="button_box algn_center">
                                                                <input value="Next" class="btn btn-primary m-b next_clear_button next_back" style="margin-left:10px" type="submit" id="btnNext">
                                                            </div>
                                                            <div class="button_box algn_right">
                                                                <input id="clear" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button">
                                                            </div>
                                                            <div style="clear:both"></div>
                                                        </div>
                                                    </nav>
                                                </div>
                                            </div>
                                            <div class="form-group new_form_group gridArea">
                                                @if (Model.NonRegBranches != null && Model.NonRegBranches.Count != 0)
                                                {
                                                    <table style="width:100%;" class="table_style">
                                                        <tr class="bordr_btm_sp">
                                                            <th style="width:31px;" class="branch_no">#</th>
                                                            <th style="width:144px;" class="branch_name">Branch Name</th>
                                                            <th style="width:210px;" class="branch_address">Branch Address</th>
                                                            <th style="width:107px;" class="branch_edit">&nbsp;</th>
                                                        </tr>
                                                        @for (var i = 0; i < Model.NonRegBranches.Count; i++)
                                                        {
                                                            <tr class="bordr_btm" style="height:30px;">
                                                                <td style="width:31px;" class="back_colr">@(i+1)</td>
                                                                <td style="width:144px;" class="back_colr">@Html.DisplayFor(x => x.NonRegBranches[i].BranchName)</td>
                                                                <td style="width:210px;" class="back_colr">@Html.DisplayFor(x => x.NonRegBranches[i].BranchAddress1)</td>
                                                                <td style="width:107px;" class="back_colr"><a onclick="EditBranch(@i)" id="CompanyIndex">Edit</a></td>
                                                            </tr>
                                                        }
                                                    </table>
                                                }
                                            </div>
                                        </div>
                                    </div>


                                }
                            }

                        </div>
                    </div>



                </div>
            </div>
        </div>

    </div>
</div>

<div class="rightPanel">
    @{
        @Html.Partial("Step5help")
    }
</div>

<script language="javascript">

    $(document).ready(function(){
        window.scrollTo(0, 0);

        // for input mask

        new InputMask().Initialize(document.querySelectorAll("#branchPhoneNum1,#branchPhoneNum2, #branchPhoneNum3"),
        {
            mask: InputMaskDefaultMask.Phone,
            placeHolder: "(___) ___-____"
        });

        $("#branchPhoneNum1,#branchPhoneNum2, #branchPhoneNum3").focusout(function (e) {

          
            $(this).attr("placeholder", "(___) ___-____");
          
        });


        $('.nav li.active ul').removeClass('in');
        $('.nav li').removeClass('active');
        $('.nav li.partner').addClass('active');
        $('.nav li.active ul').addClass('in');
    });
</script>


<script src="~/scripts/CommonFunctions.js"></script>

<script>
    $(function () {

        // helper Funtionality
        var HelpString = $('.right_panel_box p').html();
        var HelpTitle = $('.right_panel_box h4').html();

        $(' .icon-help_outline.1').click(function () {

            $('.right_panel_box p').html('Select the @(ViewBag.ThisCompanyType == "Dealer" ? "Lender branch this Dealer is financed through." : "Dealer branch which is being financed by this Lender.")');
            $('.right_panel_box h4').html('Assign a partner branch');


        });

        $(' .icon-help_outline.2').click(function () {

            $('.right_panel_box p').html("Selecting this will auto fill the branch details with the same information as the company details. A branch is required to setup a loan; if you are working with the company location for the loan select 'Same details as @(ViewBag.ThisCompanyType == "Dealer" ?  "Dealer" : "Lender") company created'.");
            $('.right_panel_box h4').html('Branch details the same as company details');


        });

        $(' .icon-help_outline.3').click(function () {

            $('.right_panel_box p').html("If an email address is specified on this page then all invoices and receipts (when chosen to email throughout the program) will be emailed to the dealar via this account.");
            $('.right_panel_box h4').html('Dealer Branch eMail');


        });

        $('span:not(.icon-help_outline.1 , .icon-help_outline.2, .icon-help_outline.3) ').click(function () {

            $('.right_panel_box p').html(HelpString);
            $('.right_panel_box h4').html(HelpTitle);


        });

        //

        @if (ViewBag.ThisCompanyType == "Dealer") { <text>

        $('#branchEmail').focus(function () {

            $('.right_panel_box p').html('If an email address is specified on this page then all invoices and receipts (when chosen to email throughout the program) will be emailed to the dealer via this account.');
            $('.right_panel_box h4').html('Dealer Branch eMail');


        });
    
        
        </text>}
        


        $('#RegBranchId').focus(function () {

            $('.right_panel_box p').html('Select the @(ViewBag.ThisCompanyType == "Dealer" ? "Lender branch this Dealer is financed through." : "Dealer branch which is being financed by this Lender.")');
            $('.right_panel_box h4').html('Assign a partner branch');


        });

        $('#Previous').focus(function () {

            $('.right_panel_box p').html("Selecting this will auto fill the branch details with the same information as the company details. A branch is required to setup a loan; if you are working with the company location for the loan select 'Same details as @(ViewBag.ThisCompanyType == "Dealer" ?  "Dealer" : "Lender") company created'.");
            $('.right_panel_box h4').html('Branch details the same as company details');


        });

        


         @if (ViewBag.ThisCompanyType == "Dealer") { <text>

        $('select:not(#RegBranchId), input:not(#Previous, #branchEmail) ').focus(function () {

            $('.right_panel_box p').html(HelpString);
            $('.right_panel_box h4').html(HelpTitle);


        });
    
        
            </text>}
         else
         {
             <text>
    
        $('select:not(#RegBranchId), input:not(#Previous) ').focus(function () {

            $('.right_panel_box p').html(HelpString);
            $('.right_panel_box h4').html(HelpTitle);


        });
        </text>

         }




        $('#createNewNonRegBranch').click(function () {

            $('#loadingDiv').show();
            $.ajax({
             url: '@Url.Action("Step5")',
                type: 'GET',


                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();
                 },

                error: function (request, status, error) {
                     //handleErrorMsg(request.responseText);

                 }
             });


         });
    @*dashboard button click event*@
        $('#dashBoard').click(function () {
            window.location.replace('@Url.Action("UserDetails", "UserManagement")');
        });
        @*next button click event*@
        $(function () {
            $('#step6').click(function () {

                $('#loadingDiv').show();
                window.location.href = "Step6";
              
            });
        });
        @*return to dashboard*@
        $('#btnNo').click(function () {

            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("UserDashBoard","DashBoard")',
                type: 'GET',


                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();
                },

                error: function (request, status, error) {
                    //handleErrorMsg(request.responseText);

                }
            });


        });
        @**@
        $(function () {
            $('#btnYes').click(function () {

                $('#loadingDiv').show();
                $.ajax({
                    url: '@Url.Action("Step6")',
                    type: 'GET',


                    success: function (partialView) {
                        $('#loadingDiv').hide();
                        $('#changeContainer').html(partialView);
                        $('#changeContainer').show();
                        Progress(6);
                    },
                    error: function (request, status, error) {
                        //handleErrorMsg(request.responseText);

                    }
                });
            });
        });
    });

</script>
<script type="text/javascript">


    $('#branchName, #branchAddress1, #branchAddress2, #branchCity').blur(function (e) {

            ToTitleCase(this.id, this.value);
    });



    $('#branchAddress1, #branchAddress2').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var res = CheckMaxLenth(this, this.value, 50);
            if (res === 0) {
                e.preventDefault();
                return;
            }

            var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>'];
            res = InvalidCharacters(this, array, e.which);

            if (res === 1) {
                e.preventDefault();
                return;
            }
            else if (e.which === 92) {
                //$(this).siblings('div').children('span').text("Invalid character.");
                e.preventDefault();
                return;
            }
        }
        

       
    });
    //Check maximum length
    $('#branchName, #branchCity').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var res = CheckMaxLenth(this, this.value, 50);
            if (res === 0) {
                e.preventDefault();
                return;
            }

            var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>'];
            res = InvalidCharacters(this, array, e.which);

            if (res === 1) {
                e.preventDefault();
                return;
            }
            else if (e.which === 92) {
                //$(this).siblings('div').children('span').text("Invalid character.");
                e.preventDefault();
                return;
            }
        }
        
    });
    //Check maximum Email
    $('#branchEmail').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var res = CheckMaxLenth(this, this.value, 100);
            if (res === 0) {
                e.preventDefault();
                return;
            }

            var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ','];
            res = InvalidCharacters(this, array, e.which);

            if (res === 1) {
                e.preventDefault();
                return;
            }
            else if (e.which === 92 || e.which === 39) {
                //$(this).siblings('div').children('span').text("Invalid character.");
                e.preventDefault();
                return;
            }
        }
        
    });
    //Check maximum PhoneNumbers
    $('#branchPhoneNum1,#branchPhoneNum2,#branchPhoneNum3,#branchFax').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var res = CheckMaxLenth(this, this.value, 14);
            if (res === 0) {
                e.preventDefault();
                return;
            }
            res = PhoneNumber(this, e.which);
            if (res === 0) {
                e.preventDefault();
                return;
            }
        }
        
    });

    //Check maximum ZipExtension
    $('#branchZipExten').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var res = CheckMaxLenth(this, this.value, 4);
            if (res === 0) {
                e.preventDefault();
                return;
            }

            res = AllowNumbers(this, e.which);
            if (res === 0) {
                e.preventDefault();
                return;
            }
        }
        
    });
    //Check maximum ZipCode
    $('#branchZipPre').keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            //var res = CheckMaxLenth(this, this.value, 4);
            //if (res === 0) {
            //    $("#branchZipExten").focus();
            //}
            var res = AllowNumbers(this, e.which);
            if (res === 0) {
                e.preventDefault();
                return;
            }
        }
        
    });
    $(function () {

        $(document).ready(function () {
            var c = $('#nonRegBranchTable').children('tbody').children('tr').length;
            if(c>0){
                $('#nonRegBranchDiv').hide();
            }
            else{
                $('#nonRegBranchDiv').show();
            }
            // $('#branchDiv').hide();
        });
        @*back button click event*@
        $('#btnPreStep5').click(function () {

            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("step4", "SetupProcess")',
                type: 'GET',
                data: { edit: 1},

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    handleErrorMsg(request.responseText);

                }
            });
        });
    });
    @*add placeholders for zipcode focus out event*@
    $('#branchZipPre').focusout(function () {
        $(this).attr('placeholder', 'Zip Code');
    });
    $('#branchZipExten').focusout(function () {
        $(this).attr('placeholder', 'Extension');
    });
</script>
<script type="text/javascript">
    @*check box checked event*@
    $(function() {
        $('#Previous').on('change', function() {
            if ($(this).is(':checked')) {

                $('input').parent('div').siblings('div').children('p').children("span").text("");
                $('select').parent('div').siblings('div').children('p').children("span").text("");
                $('.input-validation-error').removeClass('input-validation-error');

                var model = @Html.Raw(Json.Encode(Model));
                document.getElementById("branchName").value = model.CompanyBranch.Company.CompanyName;
                document.getElementById("branchAddress1").value = model.CompanyBranch.Company.CompanyAddress1;
                document.getElementById("branchAddress2").value = model.CompanyBranch.Company.CompanyAddress2;
                document.getElementById("StateId").value = model.CompanyBranch.Company.StateId;
                document.getElementById("branchCity").value = model.CompanyBranch.Company.City;
                document.getElementById("branchZipPre").value = model.CompanyBranch.Company.ZipPre;
                document.getElementById("branchZipExten").value = model.CompanyBranch.Company.Extension;
                document.getElementById("branchEmail").value = model.CompanyBranch.Company.Email;
                document.getElementById("branchPhoneNum1").value = model.CompanyBranch.Company.PhoneNum1;
                document.getElementById("branchPhoneNum2").value = model.CompanyBranch.Company.PhoneNum2;
                document.getElementById("branchPhoneNum3").value = model.CompanyBranch.Company.PhoneNum3;
                document.getElementById("branchFax").value = model.CompanyBranch.Company.Fax;
            } else {
                document.getElementById("branchName").value = "";
                document.getElementById("branchAddress1").value = "";
                document.getElementById("branchAddress2").value = "";
                document.getElementById("StateId").value = "";
                document.getElementById("branchCity").value = "";
                document.getElementById("branchZipPre").value = "";
                document.getElementById("branchZipExten").value = "";
                document.getElementById("branchEmail").value = "";
                document.getElementById("branchPhoneNum1").value = "";
                document.getElementById("branchPhoneNum2").value = "";
                document.getElementById("branchPhoneNum3").value = "";
                document.getElementById("branchFax").value = "";

            }
        });
    });

    @*clear button click event*@
    $('#clear').click(function() {
        if ($('#btnNext').val() === "Update") {
            $('#btnNext').val('Next');
        }
        document.getElementsByTagName("form")[0].reset();
        $(".text-danger").html("");
        $('#lnkCreateNewBranch').hide();
    });
    Progress(5);
</script>

<script type="text/javascript">
    @*edit branch click event*@
    function EditBranch(index) {

        $('input').parent('div').siblings('div').children('p').children("span").text("");
        $('select').parent('div').siblings('div').children('p').children("span").text("");
        $('.input-validation-error').removeClass('input-validation-error');

        $('#nonRegBranchDiv').show();
        $('#btnNext').val('Update');
        var model = @Html.Raw(Json.Encode(Model));
        //alert(document.getElementById("StateId").value);
        console.log(model);
        document.getElementById("branchName").value = model.NonRegBranches[index].BranchName;
        document.getElementById("branchAddress1").value = model.NonRegBranches[index].BranchAddress1;
        document.getElementById("branchAddress2").value = model.NonRegBranches[index].BranchAddress2;

        document.getElementById("StateId").value = model.NonRegBranches[index].StateId;
        document.getElementById("branchCity").value = model.NonRegBranches[index].BranchCity;
        document.getElementById("branchZipPre").value = model.NonRegBranches[index].ZipPre;
        document.getElementById("branchZipExten").value = model.NonRegBranches[index].Extention;
        document.getElementById("branchEmail").value = model.NonRegBranches[index].BranchEmail;
        document.getElementById("branchPhoneNum1").value = model.NonRegBranches[index].BranchPhoneNum1;
        document.getElementById("branchPhoneNum2").value = model.NonRegBranches[index].BranchPhoneNum2;
        document.getElementById("branchPhoneNum3").value = model.NonRegBranches[index].BranchPhoneNum3;
        document.getElementById("branchFax").value = model.NonRegBranches[index].BranchFax;
        document.getElementById("branchCode").value = model.NonRegBranches[index].BranchCode;
        document.getElementById("RegBranchId").value = model.NonRegBranches[index].BranchId;
        document.getElementById("NonRegCompanyId").value = model.NonRegBranches[index].BranchCompany;

        $('#lnkCreateNewBranch').show();
    };
    @*create new branch clcik event*@
    function CreateNewBranch() {
        $('#btnNext').val('Next');
        $('#nonRegBranchDiv').show();
        document.getElementById("branchName").value = "";
        document.getElementById("branchAddress1").value = "";
        document.getElementById("branchAddress2").value = "";
        document.getElementById("StateId").value = "";
        document.getElementById("branchCity").value = "";
        document.getElementById("branchZipPre").value = "";
        document.getElementById("branchZipExten").value = "";
        document.getElementById("branchEmail").value = "";
        document.getElementById("branchPhoneNum1").value = "";
        document.getElementById("branchPhoneNum2").value = "";
        document.getElementById("branchPhoneNum3").value = "";
        document.getElementById("branchFax").value = "";
        document.getElementById("branchCode").value = "";

        var input = $("#NonRegCompanyId");
        if(input.attr('type') !== 'hidden')
            document.getElementById("NonRegCompanyId").value = "";

        input = $("#RegBranchId");
        if(input.attr('type') !== 'hidden')
            document.getElementById("RegBranchId").value = "";
    }


</script>
