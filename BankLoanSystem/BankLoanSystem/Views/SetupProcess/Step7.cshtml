@model BankLoanSystem.Models.Interest
@{
    ViewBag.Title = "Step7";
    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_SetupProcess.cshtml";
    }

}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<style>
    .form-control {
        display: inline;
    }

    .form-group {
        margin: auto;
        margin-bottom: 10px;
    }
</style>

<div class="form-horizontal">

    <div id="page-wrapper" class="gray-bg sidebar-content companySetupWrapper lonesetup_border">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <div class="container body-content">

                    <div class="row">
                        <div class="container body-content new_container">
                            <div class="setupImage"><img src="~/Images/loanSetupImage.png" width="100" alt=""></div>
                            <div class="setupTitle">
                                <h2>Interest</h2>
                            </div>
                            <div style="clear:both;"></div>

                            @using (Ajax.BeginForm("Step7", "SetupProcess", new AjaxOptions()
                            {



                                OnFailure = "handleErrorMsg",
                                HttpMethod = "POST",
                                InsertionMode = InsertionMode.Replace,
                                UpdateTargetId = "changeContainer",
                                LoadingElementId = "loadingDiv"
                            }, new { id = "form" }))
                            {

                                @Html.AntiForgeryToken()

                                <div class="form-horizontal new_form_horizontal">
                                    <div class="topErrors">
                                        <p class="err_msg">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</p>
                                    </div>

                                    <div class="form-group new_form_group">
                                        <div class="control-label col-sm-2 lable_style">
                                            <label>Interest Rate</label>
                                        </div>
                                        <div class="col-xs-8 text_field">
                                            @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control text-box single-line text_field_input new_zip", @placeholder = "0.000", @id = "interest", @maxlength = 7, @onfocusout = "return focusFunction()" } })
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })</p>
                                            </div>
                                            <div style="clear:both"></div>
                                        </div>
                                        <div style="clear:both"></div>
                                    </div>
                                    <div class="form-group new_form_group">
                                        <div class="control-label col-sm-2 lable_style">
                                            <label>Payment Method</label>
                                        </div>
                                        <div class="col-xs-8 text_field">
                                            @Html.RadioButtonFor(model => model.option, "once a month", new { id = "onceMonth" }) Once a month
                                        </div>
                                        <div class="col-xs-8 text_field flotright">
                                            @Html.RadioButtonFor(model => model.option, "payoff", new { id = "payOff" }) Pay off date
                                        </div>
                                        <div class="err_msg_box">
                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.option, "", new { @class = "text-danger" })</p>
                                        </div>
                                    </div>
                                    <div style="display: block;" id="paidDateDiv">
                                        <hr>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>Paid Date</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field">
                                                @Html.DropDownListFor(model => model.PaidDate, null, "-- Select Date --", htmlAttributes: new { @class = "form-control text_field_input", id = "PaidDate" })
                                            </div>
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.PaidDate, "", new { @class = "text-danger" })</p>
                                            </div>
                                        </div>
                                        <hr>
                                    </div>
                                    <div class="form-group new_form_group">
                                        <div class="control-label col-sm-2 lable_style">
                                            <label>Payment Period</label>
                                        </div>
                                        <div class="col-xs-8 text_field">
                                            @Html.RadioButtonFor(model => model.PaymentPeriod, "accumulated in prior month", new { @id = "priorMonth" }) Interest accumulated in prior month
                                        </div>
                                        <div class="col-xs-8 text_field flotright">
                                            @Html.RadioButtonFor(model => model.PaymentPeriod, "payment date to payment date", new { @id = "dateToDate" }) Interest from payment date to payment date
                                        </div>
                                        <div class="err_msg_box">
                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.PaymentPeriod, "", new { @class = "text-danger" })</p>
                                        </div>
                                    </div>
                                    <div class="form-group new_form_group">
                                        <div class="control-label col-sm-2 lable_style">
                                            <label>Accrual Method</label>
                                        </div>
                                        <div class="col-xs-8 text_field short_text_field">
                                            @Html.DropDownListFor(model => model.AccrualMethodId, null, "--Select Method--", htmlAttributes: new { @class = "form-control text_field_input", id = "MethodId" })
                                        </div>
                                        <div class="err_msg_box">
                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.AccrualMethodId, "", new { @class = "text-danger" })</p>
                                        </div>
                                    </div>
                                    <div class="form-group new_form_group">
                                        <div class="control-label col-sm-2 lable_style">
                                            <label>
                                                Do you need an auto reminder?
                                            </label>
                                        </div>
                                        <div class="col-xs-8 text_field">
                                            @Html.RadioButtonFor(model => model.NeedReminder, "true", new { id = "radioYes" }) Yes
                                        </div>
                                        <div class="col-xs-8 text_field new_zip">
                                            @Html.RadioButtonFor(model => model.NeedReminder, "false", new { id = "radioNo" }) No
                                        </div>
                                        <div class="err_msg_box">
                                            <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.NeedReminder, "", new { @class = "text-danger" })</p>
                                        </div>
                                    </div>
                                    <div style="display: block;" id="autoRemind">
                                        <hr>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2 lable_style">
                                                <label>Email Address</label>
                                            </div>
                                            @if (ViewBag.Edit == 1)
                                            {
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.AutoRemindEmail, new { htmlAttributes = new { @class = "form-control text_field_input", @id = "autoRemindEmail", @maxlength = 100 } })
                                                    @*@Html.ValidationMessageFor(model => model.AutoRemindEmail, "", new { @class = "text-danger"})*@
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-xs-8 text_field short_text_field">
                                                    @Html.EditorFor(model => model.AutoRemindEmail, new { htmlAttributes = new { @class = "form-control", @id = "autoRemindEmail", @Value = ViewBag.Email, @maxlength = 100 } })

                                                </div>
                                            }
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.AutoRemindEmail, "", new { @class = "text-danger" })</p>
                                            </div>
                                        </div>
                                        <div class="form-group new_form_group">
                                            <div class="control-label col-sm-2" style=" padding:0; float:left;">
                                                <label>How many days prior to the due date do you need to remind?</label>
                                            </div>
                                            <div class="col-xs-8 text_field short_text_field lable_style" style="float:right; width:75px;">
                                                @Html.EditorFor(model => model.RemindPeriod, new { htmlAttributes = new { @class = "form-control text_field_input valid", @id = "autoRemindPeriod", @maxlength = 5 } })
                                            </div>
                                            <div class="err_msg_box">
                                                <p class="err_msg new_err_msg">@Html.ValidationMessageFor(model => model.RemindPeriod, "", new { @class = "text-danger" })</p>
                                            </div>
                                        </div>
                                        <hr />
                                    </div>




                                    <div class="form-group new_form_group clear_next clear_next_bordr">
                                        <div>
                                            <nav>
                                                <div class="pager new_pager">
                                                    <div class="button_box algn_left">
                                                        <input value="Back" name="subBack" id="btnPreStep7" class="btn btn-primary m-b cancel next_clear_button back_back" style="margin-left: 10px" type="button">&nbsp;
                                                    </div>
                                                    <div class="button_box algn_center">
                                                        <input value="Next" class="btn btn-primary m-b next_clear_button next_back" style="margin-left:10px" type="submit">
                                                    </div>
                                                    <div class="button_box algn_right">
                                                        <input id="clear" value="Clear" class="btn btn-primary m-b next_clear_button clear_back" style="margin-left: 10px" type="button">
                                                    </div>
                                                    <div style="clear:both"></div>
                                                </div>
                                            </nav>
                                        </div>
                                    </div>


                                </div>

                            }

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

<div class="rightPanel">
    @{
        @Html.Partial("Step7help")
    }
</div>


<script src="~/scripts/CommonFunctions.js"></script>

<script language="javascript">

  $(document).ready(function(){

  $('.nav li.active ul').removeClass('in');
  $('.nav li').removeClass('active');
  $('.nav li.loan').addClass('active');
  $('.nav li.active ul').addClass('in');
  })
</script>

<script>
    $('#clear').click(function () {
        document.getElementsByTagName("form")[0].reset();
        $(".text-danger").html("");
    });

</script>

<script>
    function clearValues(){
        //alert( $('#interest').val());
        $('#interest').val('');
        $('#onceMonth').prop('checked',false);
        $('#payOff').prop('checked',false);
        $('#PaidDate option:selected').attr('selected',null);
        $('#paidDateDiv').hide();
        $('#priorMonth').prop('checked',false);
        $('#dateToDate').prop('checked',false);
        $('#MethodId option:selected').attr('selected',null);
        $('#radioYes').prop('checked',false);
        $('#radioNo').prop('checked',false);
        $('#autoRemindEmail').val('');
        $('#autoRemindPeriod').val('');
        $('#autoRemind').hide();
    };
    $("#interest").keypress(function(e){
        var interest = $('#interest').val();
        if($('#interest').val().length >= 7){
            e.preventDefault();
        }
        else if(numericAllowDecimal(e,interest)){

        }else{
            e.preventDefault();
        }
    });

    $("#autoRemindEmail").keypress(function(e){

        var ch = e.which;
        if ((ch >= 47 && ch <= 57) ||(ch >= 65 && ch <= 90) ||(ch >= 97 && ch <= 122)|| (ch == 46) ||(ch == 64)) {
            return 1;
        }

        else{
            e.preventDefault();
        }
        //alert(ch);
    });

    $("#autoRemindPeriod").keypress(function(e){

        var ch = e.which;
        if (ch >= 48 && ch <= 57) {
            return 1;
        }

        else{
            e.preventDefault();
        }
        //alert(ch);
    });
    //Check maximum Email
    $('#autoRemindEmail').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 100);
        if (res === 0) {
            e.preventDefault();
        }
    });
    $('#autoRemindPeriod').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 5);
        if (res === 0) {
            e.preventDefault();
        }
    });
    $('#interest').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 7);
        if (res === 0) {
            e.preventDefault();
        }
    });
    function passvalue(e){
        //alert(e);
        if(e == "Yes"){
            $('#autoRemind').show();

        }

        else{
            $('#autoRemind').hide();
        }
    }
    $('#autoRemindPeriod').click(function(){
        var va = $('#autoRemindPeriod').val();
        if(va==0)
        {
            $('#autoRemindPeriod').val('');
        }
    });
</script>

<script language="javascript" type="text/javascript">
    // Except only numbers and dot (.) for interest rate textbox
    function onlyDotsAndNumbers(event) {
        var charCode = (event.which) ? event.which : event.keyCode
        if (charCode == 46) {
            return true;
        }
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function focusFunction(x) {

        //interest rate

        var arr = x.toString();
        arr = arr.split('.');
        if (arr.length==1) {


            var y = x + ".000";
            //alert(y);
            document.getElementById("interest").value = y;
            return y;
        }

        else if (arr.length == 2) {
            // alert(arr[1].length);
            if (arr[1].length == 1)
            {

                var z = arr[1] + "00";

                var z1 = arr[0] + "." + z;

                document.getElementById("interest").value = z1;
                //return x;
            }
            else if (arr[1].length == 2) {

                var z = arr[1] + "0";

                var z1 = arr[0] + "." + z;

                document.getElementById("interest").value = z1;
                return z1;
            }

        }
    }


    //Back Button
    $(function () {
        $('#btnPreStep7').click(function () {

            $('#loadingDiv').show();
            window.location.href = "Step6";
            @*$.ajax({
                url: '@Url.Action("Step6", "SetupProcess")',
                type: 'GET',
                data: { edit: 1 },

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    handleErrorMsg(request.responseText);

                }
            });*@
        });
    });


</script>

<script type="text/javascript">
    $(document).ready(function(){


        $.fn.editFunc = function(){
            //alert('You have successfully defined the function!');
            var e = $('#needReminder option:selected').text();
            passvalue(e);
            $('#needReminder').change(function(){
                var e = $('#needReminder option:selected').text();
                //alert(e);
                passvalue(e);
            });

            $('#onceMonth').click(function () {
                $('#paidDateDiv').show();
            });

            $('#payOff').click(function () {
                $('#paidDateDiv').hide();
            });
            $('#radioYes').click(function () {
                $('#autoRemind').show();
            });
            $('#radioNo').click(function () {
                $('#autoRemind').hide();
            });
            if($('#radioYes').is(':checked')){

                $('#autoRemind').show();
            }
            else {

                $('#autoRemind').hide();

            }
            //alert('You have successfully defined the function!');
            $('#NeedReminder').change(function () {

                if ((this.checked)) {
                    //alert('You have successfully defined the function!');
                    $('#autoRemind').show();

                }

                else {

                    $('#autoRemind').hide();

                }

            });
            $('#interest').focusout(function(){
                $(this).attr('placeholder', '0.000');
                if(($('#interest').val()!=null) ||($('#interest').val()!=""))
                {
                    var a = $('#interest').val().toString();
                    if(a!=""){
                        focusFunction( a);

                    }
                }
                else
                {
                    $(this).attr('placeholder', '0.000');
                }


            });
            $('#clear').click(function(){
                clearValues();
            });
            //$('#interest').click(function(){
            //    if(($('#interest').val()===null) ||($('#interest').val()===""))
            //    {
            //        $('#interest').val('');

            //    }
            //});

        }
        $.fn.loadFunc = function(){
            //alert('You have successfully ');

            //focusFunction();

            $('#autoRemind').hide();
            $('#paidDateDiv').hide();

            //$('#needReminder').change(function(){
            //    var e = $('#needReminder option:selected').text();
            //    //alert(e);
            //    passvalue(e);
            //});
            $('#clear').click(function(){
                clearValues();
            });
            $('#onceMonth').click(function () {
                $('#paidDateDiv').show();
            });

            $('#payOff').click(function () {
                $('#paidDateDiv').hide();
            });
            $('#radioYes').click(function () {
                $('#autoRemind').show();
            });
            $('#radioNo').click(function () {
                $('#autoRemind').hide();
            });
            //if(($('#interest').val()===null) ||($('#interest').val()===""))
            //{
            //    $('#interest').val('0.000');

            //}
            //$('#interest').focusout(function(){

            //    if(($('#interest').val()===null) ||($('#interest').val()===""))
            //    {
            //        $('#interest').val('0.000');
            //        //$('#interest').val() = "0.000";

            //    }
            //    else
            //    {
            //        var a = $('#interest').val();
            //        if(a!=""){
            //            focusFunction( a);

            //        }
            //    }


            //});
            $('#interest').focusout(function(){

                $(this).attr('placeholder', '0.000');
                var a = $('#interest').val();
                if(a!=""){
                    focusFunction( a);

                }


            });
            $('#interest').click(function(){
                if($('#interest').val()==="0.000")
                {
                    $('#interest').val('');

                }
            });

        }
        if(@ViewBag.Edit ==1){

            $.fn.editFunc();
        }

        else if(@ViewBag.Edit !=1){

            $.fn.loadFunc();
        }

    });

    $(".tab.7").parent("li").addClass("active").siblings().removeClass('active');
    Progress(7);
</script>
