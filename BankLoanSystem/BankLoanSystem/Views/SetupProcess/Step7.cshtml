@model BankLoanSystem.Models.Interest
@using BankLoanSystem.Models
@{
    ViewBag.Title = "Step7";
    if (ViewBag.AjaxRequest == null)
    {
        Layout = "~/Views/Shared/_SetupProcess.cshtml";
    }

}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<style>

    
            .form-control{
        display:inline;
    }
    .form-group{
        margin:auto;
        margin-bottom: 10px;
    }
</style>




        <h2>Interest</h2>
        @using (Ajax.BeginForm("Step7", "SetupProcess", new AjaxOptions()
        {

            
            
            OnFailure = "handleErrorMsg",
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "changeContainer",
            LoadingElementId = "loadingDiv"
        }, new { id = "form" }))
        {

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    <div class="control-label col-sm-2" style="margin-top:10px">
                        @Html.LabelFor(model => model.InterestRate, htmlAttributes: new { })<span style="color: red">*</span>
                    </div>

                    <div class="col-xs-2" style="float:left;margin-left: 145px;">
                        
                        @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.000", @id = "interest", @maxlength = 7, @onfocusout = "return focusFunction()" } })
                        @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger", style = "width: 200%;" })
                    </div>
                    <span style="float:left;margin-top: 10px;font-size: 26px;">%</span>
                </div>


                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.option, htmlAttributes: new { })<span style="color: red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.RadioButtonFor(model => model.option, "once a month", new { id = "onceMonth" }) Once a month
                       
                    </div>
                    <div class="col-xs-8">
                        @Html.RadioButtonFor(model => model.option, "payoff", new { id = "payOff" }) Pay off date
                        @Html.ValidationMessageFor(model => model.option, "", new { @class = "text-danger" , style= "left: 23%;top: 28 %;" })
                    </div>
                   
                    
                   
                    
                    

                </div>
               
                <div id="paidDateDiv">
                    <hr />
                    <div class="form-group">
                       
                        <div class="control-label col-sm-2" >
                            @Html.LabelFor(model => model.PaidDate, htmlAttributes: new { })<span style="color: red">*</span>
                        </div>
                        <div class="col-xs-4" style="width:30%">
                            @Html.DropDownListFor(model => model.PaidDate, null, "-- Select Date --", htmlAttributes: new { @class = "form-control", id = "PaidDate", @style = "margin-left:-293px" })
                            @Html.ValidationMessageFor(model => model.PaidDate, "", new { @class = "text-danger" , style = "left: -94%;top: 100%;" })
                        </div>
                       
                    </div>
                    <hr />
                    </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.LabelFor(model => model.PaymentPeriod, htmlAttributes: new { })<span style="color: red">*</span>
                    </div>

                    <div class="col-xs-8">
                        @Html.RadioButtonFor(model => model.PaymentPeriod, "accumulated in prior month", new {@id ="priorMonth" }) Interest accumulated in prior month
                    </div>
                    <div class="col-xs-8">
                        @Html.RadioButtonFor(model => model.PaymentPeriod, "payment date to payment date", new { @id = "dateToDate" }) Interest from payment date to payment date

                        @Html.ValidationMessageFor(model => model.PaymentPeriod, "", new { @class = "text-danger" , style = "left: 3%;top: 100%;" })
                    </div>
                   
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2" style="margin-top:10px">
                        @Html.LabelFor(model => model.AccrualMethodId, htmlAttributes: new { })<span style="color: red">*</span>
                    </div>
                    <div class="col-xs-4">
                        @Html.DropDownListFor(model => model.AccrualMethodId, null, "--Select Method--", htmlAttributes: new { @class = "form-control", id = "MethodId", @style = "margin-left:-270px" })
                        @Html.ValidationMessageFor(model => model.AccrualMethodId, "", new { @class = "text-danger", style = "left: -94%;top: 100%;" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-sm-2">
                        @Html.Label("Do you need an auto reminder?", htmlAttributes: new { })

                    </div>

                    <div class="col-xs-8">
                        @Html.RadioButtonFor(model => model.NeedReminder, "true", new { id = "radioYes" }) Yes
                    </div>
                    <div class="col-xs-8">
                        @Html.RadioButtonFor(model => model.NeedReminder, "false", new { id = "radioNo" }) No
                        @Html.ValidationMessageFor(model => model.NeedReminder, "", new { @class = "text-danger" , style = "left: 3%;top: 100%;" })
                    </div>
                    
                    
                </div>
                <div id="autoRemind">
                    <hr />
                    <div class="form-group">
                        <div class="control-label col-sm-2">
                            @Html.LabelFor(model => model.AutoRemindEmail, htmlAttributes: new { })<span style="color: red">*</span>

                        </div>

                        @if (ViewBag.Edit == 1)
                        {
                            <div class="col-xs-5" style="margin-left:135px;width:34%">
                                @Html.EditorFor(model => model.AutoRemindEmail, new { htmlAttributes = new { @class = "form-control", @id = "autoRemindEmail" ,@maxlength =100} })
                                @Html.ValidationMessageFor(model => model.AutoRemindEmail, "", new { @class = "text-danger" , style = "left: 3%;top: 100%;" })
                            </div>
                        }
                        else
                        {
                            <div class="col-xs-5" style="margin-left:135px;width:34%">
                                @Html.EditorFor(model => model.AutoRemindEmail, new { htmlAttributes = new { @class = "form-control", @id = "autoRemindEmail",@Value = ViewBag.Email, @maxlength = 100 } })
                                @Html.ValidationMessageFor(model => model.AutoRemindEmail, "", new { @class = "text-danger" })
                            </div>
                        }


                        <div class="form-group">
                            <div class="control-label col-sm-2" style="margin-left:15px;margin-top:10px">
                                @Html.Label("How many days prior to the due date do you need to remind?", htmlAttributes: new { })<span style="color: red">*</span>

                            </div>
                            <div class="col-xs-5" style="margin-left:285px;width:20%">
                                @Html.EditorFor(model => model.RemindPeriod, new { htmlAttributes = new { @class = "form-control", @id = "autoRemindPeriod", @maxlength=5 } })
                                @Html.ValidationMessageFor(model => model.RemindPeriod, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <hr />
                </div>








                <div class="form-group">

                    <div class="button-panel">

                        <input type="button" value="Back" name="subBack" id="btnPreStep7" class="btn btn-default left-button" />
                        <input type="submit" value="Next" class="btn btn-primary btn-next" style="left:40%" />

                        <input type="button" id="clear" value="Clear" class="btn btn-default right-button" />

                    </div>
                    
                </div>

            </div>

        }
<script src="~/scripts/CommonFunctions.js"></script>
<script>
    function clearValues(){
        //alert( $('#interest').val());
        $('#interest').val('');
        $('#onceMonth').prop('checked',false);
        $('#payOff').prop('checked',false);
        $('#PaidDate option:selected').attr('selected',null);
        $('#paidDateDiv').hide();
        $('#priorMonth').prop('checked',false);
        $('#dateToDate').prop('checked',false);
        $('#MethodId option:selected').attr('selected',null);
        $('#radioYes').prop('checked',false);
        $('#radioNo').prop('checked',false);
        $('#autoRemindEmail').val('');
        $('#autoRemindPeriod').val('');
        $('#autoRemind').hide();
        $('#interest').next("span").children("span").text("");
        $('#interest').removeClass('input-validation-error');
        $('#onceMonth').next("span").children("span").text("");
        $('#onceMonth').removeClass('input-validation-error');
        $('#payOff').next("span").children("span").text("");
        $('#payOff').removeClass('input-validation-error');
        $('#PaidDate').next("span").children("span").text("");
        $('#PaidDate').removeClass('input-validation-error');
        $('#priorMonth').next("span").children("span").text("");
        $('#priorMonth').removeClass('input-validation-error');
        $('#dateToDate').next("span").children("span").text("");
        $('#dateToDate').removeClass('input-validation-error');
        $('#MethodId').next("span").children("span").text("");
        $('#MethodId').removeClass('input-validation-error');
        $('#radioYes').next("span").children("span").text("");
        $('#radioYes').removeClass('input-validation-error');
        $('#radioNo').next("span").children("span").text("");
        $('#radioNo').removeClass('input-validation-error');
        $('#autoRemindEmail').next("span").children("span").text("");
        $('#autoRemindEmail').removeClass('input-validation-error');
        $('#autoRemindPeriod').next("span").children("span").text("");
        $('#autoReminderiod').removeClass('input-validation-error');
    };
    $("#interest").keypress(function(e){   
        var interest = $('#interest').val();
        if($('#interest').val().length >= 7){
            e.preventDefault();
        }    
        else if(numericAllowDecimal(e,interest)){
            
        }else{
            e.preventDefault();
        }
    });

    $("#autoRemindEmail").keypress(function(e){   
      
        var ch = e.which;
        if ((ch >= 47 && ch <= 57) ||(ch >= 65 && ch <= 90) ||(ch >= 97 && ch <= 122)|| (ch == 46) ||(ch == 64)) {
            return 1;
        }
        
        else{
            e.preventDefault();
        }
        //alert(ch);
    });

    $("#autoRemindPeriod").keypress(function(e){   
      
        var ch = e.which;
        if (ch >= 48 && ch <= 57) {
            return 1;
        }
        
        else{
            e.preventDefault();
        }
        //alert(ch);
    });
    //Check maximum Email
    $('#autoRemindEmail').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 100);
        if (res === 0) {
            e.preventDefault();
        }
    });
    $('#autoRemindPeriod').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 5);
        if (res === 0) {
            e.preventDefault();
        }
    });
    $('#interest').keypress(function (e) {
        var res = CheckMaxLenth(this, this.value, 7);
        if (res === 0) {
            e.preventDefault();
        }
    });
    function passvalue(e){
        //alert(e);
        if(e == "Yes"){
            $('#autoRemind').show();

        }
       
        else{
            $('#autoRemind').hide();
        }
    }
    $('#autoRemindPeriod').click(function(){
        var va = $('#autoRemindPeriod').val();
        if(va==0)
        {
            $('#autoRemindPeriod').val('');
        }
    });
</script>
<script language="javascript" type="text/javascript">
    // Except only numbers and dot (.) for interest rate textbox
    function onlyDotsAndNumbers(event) {
        var charCode = (event.which) ? event.which : event.keyCode
        if (charCode == 46) {
            return true;
        }
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function focusFunction(x) {

        //interest rate
       
        var arr = x.toString();
        arr = arr.split('.');
        if (arr.length==1) {


            var y = x + ".000";
            //alert(y);
            document.getElementById("interest").value = y;
           return y;
        }

        else if (arr.length == 2) {
           // alert(arr[1].length);
            if (arr[1].length == 1) 
            {

                var z = arr[1] + "00";

                var z1 = arr[0] + "." + z;

                document.getElementById("interest").value = z1;
                //return x;
            }
            else if (arr[1].length == 2) {

                var z = arr[1] + "0";

                var z1 = arr[0] + "." + z;

                document.getElementById("interest").value = z1;
                return z1;
            }

        }
    }


    //Back Button
    $(function () {
        $('#btnPreStep7').click(function () {

            $('#loadingDiv').show();
            $.ajax({
                url: '@Url.Action("Step6", "SetupProcess")',
                type: 'GET',
                data: { edit: 1 },

                success: function (partialView) {
                    $('#loadingDiv').hide();
                    $('#changeContainer').html(partialView);
                    $('#changeContainer').show();

                },
                error: function (request, status, error) {
                    handleErrorMsg(request.responseText);

                }
            });
        });
    });

   
</script>

<script type="text/javascript">
    $(document).ready(function(){

       
        $.fn.editFunc = function(){
            //alert('You have successfully defined the function!');
            var e = $('#needReminder option:selected').text();
            passvalue(e);
            $('#needReminder').change(function(){
                var e = $('#needReminder option:selected').text();
                //alert(e);
                passvalue(e);
            });
            
            $('#onceMonth').click(function () {
                $('#PaidDate option:selected').attr('selected',null);
                $('#PaidDate').next("span").children("span").text("");
                $('#PaidDate').removeClass('input-validation-error');
                $('#paidDateDiv').show();
            });

            $('#payOff').click(function () {
                $('#PaidDate option:selected').attr('selected',null);
                $('#PaidDate').next("span").children("span").text("");
                $('#PaidDate').removeClass('input-validation-error');
                $('#paidDateDiv').hide();
            });
            $('#radioYes').click(function () {
                $('#autoRemindEmail').next("span").children("span").text("");
                $('#autoRemindEmail').removeClass('input-validation-error');
                $('#autoRemindEmail').val('');
                $('#autoRemindPeriod').next("span").children("span").text("");
                $('#autoRemindPeriod').removeClass('input-validation-error');
                $('#autoRemindPeriod').val('');
                $('#autoRemind').show();
            });
            $('#radioNo').click(function () {
                $('#autoRemindEmail').next("span").children("span").text("");
                $('#autoRemindEmail').removeClass('input-validation-error');
                $('#autoRemindEmail').val('');
                $('#autoRemindPeriod').next("span").children("span").text("");
                $('#autoRemindPeriod').removeClass('input-validation-error');
                $('#autoRemindPeriod').val('');
                $('#autoRemind').hide();
            });
            if($('#radioYes').is(':checked')){

                $('#autoRemind').show();
            }
            else {

                $('#autoRemind').hide();

            }
            //alert('You have successfully defined the function!');
            $('#MethodId').change(function () {

                $('#autoRemindEmail').next("span").children("span").text("");
                $('#autoRemindEmail').removeClass('input-validation-error');
                $('#autoRemindEmail').val('');
                $('#autoRemindPeriod').next("span").children("span").text("");
                $('#autoRemindPeriod').removeClass('input-validation-error');
                $('#autoRemindPeriod').val('');

            });
            $('#interest').focusout(function(){
                $(this).attr('placeholder', '0.000');
                if(($('#interest').val()!=null) ||($('#interest').val()!=""))
                {
                    var a = $('#interest').val().toString();
                    if(a!=""){
                        focusFunction( a);
                    
                    }
                }
                else
                {
                    $(this).attr('placeholder', '0.000');
                }
                
            
            });
            $('#clear').click(function(){
                clearValues();
            });
          

        }
        $.fn.loadFunc = function(){
            //alert('You have successfully ');
           
            //focusFunction();
            
            $('#autoRemind').hide();
            $('#paidDateDiv').hide();
            
            //$('#needReminder').change(function(){
            //    var e = $('#needReminder option:selected').text();
            //    //alert(e);
            //    passvalue(e);
            //});
            $('#clear').click(function(){
                clearValues();
            });
            $('#onceMonth').click(function () {
                $('#PaidDate option:selected').attr('selected',null);
                $('#PaidDate').next("span").children("span").text("");
                $('#PaidDate').removeClass('input-validation-error');
                $('#paidDateDiv').show();
            });

            $('#payOff').click(function () {
                $('#PaidDate option:selected').attr('selected',null);
                $('#PaidDate').next("span").children("span").text("");
                $('#PaidDate').removeClass('input-validation-error');
                $('#paidDateDiv').hide();
            });
            $('#radioYes').click(function () {
                $('#autoRemindEmail').next("span").children("span").text("");
                $('#autoRemindEmail').removeClass('input-validation-error');
                $('#autoRemindEmail').val('');
                $('#autoRemindPeriod').next("span").children("span").text("");
                $('#autoRemindPeriod').removeClass('input-validation-error');
                $('#autoRemindPeriod').val('');
                $('#autoRemind').show();
            });
            $('#radioNo').click(function () {
                $('#autoRemindEmail').next("span").children("span").text("");
                $('#autoRemindEmail').removeClass('input-validation-error');
                $('#autoRemindEmail').val('');
                $('#autoRemindPeriod').next("span").children("span").text("");
                $('#autoRemindPeriod').removeClass('input-validation-error');
                $('#autoRemindPeriod').val('');
                $('#autoRemind').hide();
            });
            //alert('You have successfully defined the function!');
            $('#MethodId').change(function () {

                $('#autoRemindEmail').next("span").children("span").text("");
                $('#autoRemindEmail').removeClass('input-validation-error');
                $('#autoRemindEmail').val('');
                $('#autoRemindPeriod').next("span").children("span").text("");
                $('#autoRemindPeriod').removeClass('input-validation-error');
                $('#autoRemindPeriod').val('');

            });
            //if(($('#interest').val()===null) ||($('#interest').val()===""))
            //{
            //    $('#interest').val('0.000');
                    
            //}
            //$('#interest').focusout(function(){
                
            //    if(($('#interest').val()===null) ||($('#interest').val()===""))
            //    {
            //        $('#interest').val('0.000');
            //        //$('#interest').val() = "0.000";
                  
            //    }
            //    else
            //    {
            //        var a = $('#interest').val();
            //        if(a!=""){
            //            focusFunction( a);
                    
            //        }
            //    }
                
            
            //});
            $('#interest').focusout(function(){
               
                    $(this).attr('placeholder', '0.000');
                    var a = $('#interest').val();
                        if(a!=""){
                            focusFunction( a);
                    
                        }
                
            
            });
            $('#interest').click(function(){
                if($('#interest').val()==="0.000")
                {
                    $('#interest').val('');
                    
                }
                
            });
            
        }
        if(@ViewBag.Edit ==1){

            $.fn.editFunc();
        }

        else if(@ViewBag.Edit !=1){

            $.fn.loadFunc();
        }

    });

    $(".tab.7").parent("li").addClass("active").siblings().removeClass('active');
    Progress(7);

    $(".tab.7").children("span").remove();
    $(".tab.7").css("pointer-events", "auto").css("cursor", "pointer");
    $(".tab.7").append("<span style='float:right;color:green'>&#10004;  </span>");

    @*@if((Session["isInterest"] != null) && Convert.ToBoolean(Session["isInterest"]) == true && Session["loanStep"] != null && ((LoanSetupStep)Session["loanStep"]).loanId == 3)
    {
        <text>
        

        $(".tab.8").children("span").remove();
        $(".tab.8").append("<span style='float:right'>&#128274;  </span>");
        $(".tab.8").css("pointer-events", "none").css("cursor", "default");

        </text>
    }*@
</script>