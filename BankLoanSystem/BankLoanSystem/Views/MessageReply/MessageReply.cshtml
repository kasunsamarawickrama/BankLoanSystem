@model BankLoanSystem.Models.UserRequest

@{
    ViewBag.Title = "MessageReply";
    Layout = "~/Views/Shared/_ForgotPasswordLayout.cshtml";
    WebGrid grid1 = new WebGrid(Model.RequestList, defaultSort: "user_name", canPage: false, ajaxUpdateContainerId: "searchGrid", ajaxUpdateCallback: "GridUpdate");
}

<link href="~/Content/steps.css" rel="stylesheet" />
@if (ViewBag.ErrorMsg != "")
{
    @ViewBag.ErrorMsg
}
<style>
.login-container{
    width:800px;
}
    .input-validation-error {
        border: 1px solid #ff0000;
    }

    .valid {
        border: 1px solid green;
    }

    .field-validation-error {
        z-index: 10001;
        font-weight: bold;
        position: absolute;
        font-size: 12px;
        left: 4%;
    }

    .left-button {
        float: left;
        margin-left: 15px;
    }

    .right-button {
        float: right;
        margin-right: 15px;
    }

    .btn-next {
        margin: 0px -50px;
        width: 100px;
        top: 50%;
        left: 50%;
    }
.gridtable
{
width:800px;
}
</style>



<h2><u>Reply Message</u></h2><br />
@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @if ((Model.RequestList.Count() != 0)&&(Model.RequestList!=null))
    {
    <div id="searchGrid" class="info-bar" style="margin-top:15px;padding:unset;">
        @grid1.GetHtml(
        tableStyle: "gridtable",
        headerStyle: "webgrid-header",

        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "select",
        rowStyle: "webgrid-row-style",
        htmlAttributes: new { id = "searchResultGrid" },
        columns: grid1.Columns(
        grid1.Column("User Name", "User Name", canSort: false, format:@<text>@{<label id="user_name" class="user_name">@item.user_name</label>}</text>),
        grid1.Column("Possition", "Possition", canSort: false, format:@<text>@{<label id="role" class="role">@item.role</label><input type="hidden" value="@item.request_id" name="request_id" class="request_id" id="request_id" />}</text>),
        grid1.Column("Company", "Company", canSort: false, format:@<text>@{<label id="company_name" class="company_name">@item.company_name</label>}</text>),
        grid1.Column("Branch", "Branch", canSort: false, format:@<text>@{<label id="branchname" class="branchname">@item.branch_name</label>}</text>),
        grid1.Column("Loan", "Loan", canSort: false, format:@<text>@{<label id="loan_code" class="loan_code">@item.loan_code</label>}</text>),
        grid1.Column("Topic", "Topic", canSort: false, format:@<text>@{<label id="topic" class="topic">@item.topic</label><input type="hidden" value="@item.message" name="message" class="message" id="message" /><input type="hidden" value="@item.email" name="email" class="email" id="email" />}</text>)

        
        )
        )
    </div>
    }
    else {
    <div id="noDataLabelDiv" style="padding-bottom: 15px;width:870px;float: unset;margin-top:10px; font:medium;color:red;text-align:center">
        @Html.Label("No search data found", htmlAttributes: new { @class = "control-label col-sm-3", @style = "float:unset" })
    </div>
    }
    
<br />
<br />
    <div id="">
        <div class="form-group">
            <div class="control-label col-sm-3">
                <label>User Name</label>
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.user_name, new {htmlAttributes = new {@class = "form-control", @id = "txtusername", @disabled = "disabled"}})
                @Html.Hidden("req_id")
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-3">
                <label>Company Name</label>
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.company_name, new { htmlAttributes = new { @class = "form-control", @id = "txtcompany", @disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-4">
                <label>Branch Name</label>
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.branch_name, new { htmlAttributes = new { @class = "form-control", @id = "txtbranch", @disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-3">
                <label>Loan Code</label>
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.loan_code, new { htmlAttributes = new { @class = "form-control", @id = "txtloan", @disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-3">
                <label>Subject</label>
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.topic, new { htmlAttributes = new { @class = "form-control", @id = "txttopic", @disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-3">
                <label>Message</label>
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.message, new { htmlAttributes = new { @class = "form-control", @id = "txtmessage", @disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-sm-4">
                <label>Answer</label>
            </div>
            <div class="col-xs-8">
                @Html.TextAreaFor(model => model.answer, 5, 85, new { htmlAttributes = new { @class = "form-control", @id = "txtanswer" } })
            </div>
        </div>
        <div class="form-group">



            <input type="submit" value="Submit" class="btn btn-primary btn-next" />
            <input type="button" id="clear" value="Clear" class="btn btn-default right-button" />


        </div>
    </div>
</div>
}



<script>
    $(function () {
        $('#searchResultGrid').children('tbody').children('tr').click(function () {
            var tr = $(this);
            $('.centered span').text('');
            $(this).css('background', 'lightblue');
            $(this).siblings().css('background', 'aliceblue');
            SetTextBoxValues(tr);

        });
    });
</script>
<script>


    // Change the selector if needed
    var table = $('table'),
        bodyCells = table.find('tbody tr:first').children(),
        colWidth;

    // Adjust the width of thead cells when window resizes
    $(window).resize(function() {
        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this).width();
        }).get();

        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).width(colWidth[i]);
        });
    }).resize(); // Trigger resize handler

    $(window).bind("load",function(){

        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this).width();
        }).get();

        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).width(colWidth[i]);
        });
    });
</script>

<script src="~/scripts/CommonFunctions.js"></script>
<script>

        $(document).ready(function () {
            $('#searchGrid1').hide();
        });
        function ClearValues() {

           $('#searchGrid1').show();
           $('#txtusername').val('');
           $('#txtcompany').val('');
           $('#txtbranch').val('');
           $('#txtloan').val('');
           $('#txttopic').val('');
           $('#txtmessage').val('');
           document.getElementById("txtanswer").value = "";
        };
        //cancel button click event
        $('#btnCancel').click(function () {
            $('#searchGrid1').show();
            $('#txtusername').val('');
            $('#txtcompany').val('');
            $('#txtbranch').val('');
            $('#txtloan').val('');
            $('#txttopic').val('');
            $('#txtmessage').val('');
            document.getElementById("txtanswer").value = "";
        });
        

        //show search grid
        function ShowDivs() {
            $('#searchGrid1').show();
        }
       
        
        //set text box values when row is selected in grid
        function SetTextBoxValues(tr) {
            $('#updateTitleDiv span').text('');
            $('#request_id').val(tr.find('#request_id').val());
            $('#txtusername').val(tr.find('#user_name').text());
            $('#txtcompany').val(tr.find('#company_name').text());
            $('#txtbranch').val(tr.find('#branchname').text());
            $('#txtloan').val(tr.find('#loan_code').text());
            $('#txttopic').val(tr.find('#topic').text());
            $('#txtmessage').val(tr.find('#message').val());
            document.getElementById("req_id").innerHTML = tr.find("#request_id").val();
            //$('#txtanswer').val('');
            document.getElementById("txtanswer").value = '';
            
            //document.getElementById("unitid").innerHTML = tr.find("#uId").val();

        };
</script>


