@model BankLoanSystem.Models.User

@{
    ViewBag.Title = "Create User";
}

<h2>Create User</h2>



@using (Ajax.BeginForm("Create","CreateUser", new AjaxOptions()
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "changeContainer"
}, new {id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <label id="successLabel">@ViewBag.SuccessMsg</label>
        <div class="form-group">
            <div class = "control-label col-sm-2">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { })<span style="color:red">*</span>
            </div>
            
            <div class="col-xs-8"> 
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-sm-2">
                @Html.LabelFor(model => model.Password, htmlAttributes: new {})<span style="color: red">*</span>
            </div>

            <div class="col-xs-8">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-sm-2">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { })<span style="color:red">*</span>
            </div>

            <div class="col-xs-8">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class = "control-label col-sm-2">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { })<span style="color:red">*</span>
            </div>
           
            <div class="col-xs-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class = "control-label col-sm-2">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { })<span style="color:red">*</span>
            </div>
            
            <div class="col-xs-8">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class = "control-label col-sm-2">
                @Html.LabelFor(model => model.NewEmail, htmlAttributes: new { })<span style="color:red">*</span>
            </div>
           
            <div class="col-xs-8">
                @Html.EditorFor(model => model.NewEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class = "control-label col-sm-2" >
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { })<span style="color:red">*</span>
            </div>
            
            <div class="col-xs-8">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.CurrUserRoleType != 2)
        {
            <div class="form-group">
                <div class = "control-label col-sm-2">
                    @Html.LabelFor(model => model.BranchId, htmlAttributes: new { })<span style="color:red">*</span>
                </div>
               
                <div class="col-xs-8">
                    @Html.DropDownListFor(model => model.BranchId, null, "Select branch", htmlAttributes: new { @class = "form-control", id = "BranchId" })
                    @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class = "control-label col-sm-2" >
                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { })<span style="color:red">*</span>
            </div>
            
            <div class="col-xs-8">
                @Html.DropDownListFor(model => model.RoleId, null, "Select role", htmlAttributes: new { @class = "form-control", id = "RoleId" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger", @id = "RoleIdValidate" })
            </div>
        </div>

        <div class="form-group">
            <div>

                <nav>
                    <ul class="pager">
                        <li>
                            <input type="submit" value="Create" class="btn btn-primary m-b" style="float:left" />
                        </li>

                        <li>
                            <input id="clear" type="button" value="Clear" class="btn btn-primary m-b" style="float:left;margin-left:10px"  />
                            
                        </li>
                        </ul>
</nav>
            </div>
        </div>
    </div>
    
}

<div>
   
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>


    $('#clear').click(function () {
        document.getElementById("form").reset();
    });
</script>