@model BankLoanSystem.Models.FeesModel

@{
    Layout = null;
    WebGrid grid = new WebGrid(Model.FeeModelList, defaultSort: "CreatedDate", canPage: false, ajaxUpdateContainerId: "checkableGridDiv", ajaxUpdateCallback: "GridUpdate");


}
@using System.Threading;
@using System.Globalization;


@if (Model.FeeModelList.Count == 0) {
<div id="noCurtLabelDiv" class="info-bar" style="margin-top:10px;padding:unset; color:red;">
    <label style="float:unset;margin-top:2%;margin-bottom:2%">No Fees matching the due date could be found.</label>
</div>

}
else {

<div class="info-bar" id="checkableGridDiv" style="margin-top:10px;padding:1px 0px 30px 0px">
    
        
        @if (Model.Type == "advanceFee")
        {
            <div>
                <span class="icon-help_outline help-adv-grid" style="float:left"></span>
            <h4 id="gridHeader" style="font-weight: bold;">
                Advance Fee
            </h4>

                 @grid.GetHtml(  tableStyle: "gridtable", headerStyle: "webgrid-header", alternatingRowStyle: "webgrid-alternating-row", rowStyle: "webgrid-row-style", htmlAttributes: new { id = "checkableGrid" },   columns: grid.Columns( grid.Column(style: "gridColumnSelect", format: @<text><input type="checkbox" value="@item.FeeId" name="ids" class="checkboxAll" id="all" /></text>
                                                              , header: "{checkall}"
                                                      ),

                                                       grid.Column("AdvanceDate", "Date Advanced", canSort: false, style: "gridColumnOthers", format:@<text>@{<label id="dateAdvance" class="AdvanceDate">@item.AdvanceDate.ToShortDateString()</label>}</text>),
                                                      grid.Column("VIN/HIN/serial #", "VIN/HIN/serial #", style: "gridColumnVIN", canSort: false, format:@<text>@{<label id="vin" class="vin">@item.IdentificationNumber</label>}</text>),
                                                      grid.Column("Year", "Year", style: "gridColumnSmall", canSort: false, format:@<text>@{<label id="year" class="year">@item.Year</label>}</text>),
                                                      grid.Column("Make", "Make", style: "gridColumnOthers", canSort: false, format:@<text>@{<label id="make" class="make">@item.Make</label>}</text>),
                                                      grid.Column("Model", "Model", style: "gridColumnOthers", canSort: false, format:@<text>@{<label id="model" class="model">@item.Model</label>}</text>),
                                                  grid.Column("BillDueDate", "Due Date", canSort: false, style: "gridColumnOthers", format:@<text>@{<label id="BillDueDate" class="AdvanceDate">@item.FeeDueDate.ToShortDateString()</label>}</text>),
                                                      //grid.Column(
                                                      //     "BillDueDate",
                                                      //     "Due Date", style: "gridColumnOthers",
                                                      //     format: (item) => string.Format("{0:MM/dd/yyyy}", item.BillDueDate)
                                                      //),
                                                      grid.Column("Amount", "Fee-Amount ($)", canSort: false, style: "gridColumn", format:@<text>@{<label id="am" class="curtAmount">@Convert.ToDecimal(item.Amount).ToString("#,##0.00")</label>}</text>)
                                           )

                                       )


           </div>
        }
        else
        {
            <div style="padding-left: 18%;padding-right: 18%;">

            @if (Model.Type == "monthlyLoanFee")
            {
                <span class="icon-help_outline help-mnt-grid" style="float:left"></span>
                <h4 id="gridHeader" style="font-weight: bold;">
                    Monthly Loan Fee
                </h4>
            }
            else {
                <span class="icon-help_outline help-lot-grid" style="float:left"></span>
                <h4 id="gridHeader" style="font-weight: bold;">
                    Lot Inspection Fee
                </h4>
            }

            <div id="monthlyLotFeeHeader" class="" hidden></div>
            @grid.GetHtml(

                                                 tableStyle: "gridtable",
                                                 headerStyle: "webgrid-header",
                                                 alternatingRowStyle: "webgrid-alternating-row",
                                                 rowStyle: "webgrid-row-style",
                                                 htmlAttributes: new { id = "checkableGrid" },


                                                 columns: grid.Columns(
                                                         grid.Column(style: "gridColumnSelect",
                                                              format:@<text><input type="checkbox" value="@item.FeeId" name="ids" class="checkboxAll" id="all" /></text>
                                                                 , header: "{checkall}"
                                                         ),
                                                              @*grid.Column("Type", "Fee Type", canSort: false, style: "gridColumnlarge", format:@<text>@{<label id="Type" class="AdvanceDate">@item.Type</label>}</text>),*@
                                                        grid.Column("BillDueDate", "Due Date", canSort: false, style: "gridColumnlarge", format:@<text>@{<label id="DueDate" class="AdvanceDate">@item.FeeDueDate.ToShortDateString()</label>}</text>),
            //grid.Column(
            //                                                  "BillDueDate",
            //                                                  "Due Date", style: "gridColumnlarge",
            //                                                  format: (item) => string.Format("{0:MM/dd/yyyy}", item.BillDueDate)
                                                         //), 
                                                        grid.Column("Amount", "Fee-Amount ($)", canSort: false, style: "gridColumnlargeWithAlign", format:@<text>@{<label id="am" class="curtAmount">@Convert.ToDecimal(item.Amount).ToString("#,##0.00")</label>}</text>)
                                                 )

                                          )


           
            </div>
        }
   

    <div>
        <span id="subtotal" style="margin-right:25px;float:right;text-align:right;font-weight: bold;"> Current Fee Total : $ 0.00  </span>
    </div>

    <div id="FeeId" class="hidden"></div>
</div>



<form method="post">
    <div class="info-bar" style="margin-top:15px" id="payDateDiv">
        <div class="form-inline">
            <div class="form-group">

                <label for="" style="margin-left: -160px;">Pay Date <span class="icon-help_outline help-pay-date1"></span> </label>
                @Html.EditorFor(model => model.FeePayDate, new { htmlAttributes = new { @class = "form-control dateKeyPressValidate", @placeholder = "MM/DD/YYYY", @id = "payDate", autocomplete = "off", style = "margin-left:15px;width:165px", @disabled = "disabled", maxlength = 10 } })
                 <span class="text-danger field-validation-error" id="errorPayDate" style="left: 36%;margin-top: 35px;"></span>
                <input type="button" id="payAll" class="btn btn-primary m-b next_clear_button next_back" style="width: 245px;" value="Pay fees on all selected units" disabled />
            </div>
           
        </div>
    </div>
</form>

if (Model.Type == "advanceFee") {
<div class="info-bar search-panel" style="margin-top:15px;" id="searchDiv">
    <span class="icon-help_outline help-adv-search" style="float:left;margin-left: -7px;"></span>

    <div class="row">
        <div class="col-xs-12" style="padding:unset;">
            <form>
                <fieldset>
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label for="">VIN/HIN/Serial</label>

                            @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control", @id = "identificationNumberSearch", @placeholder = "Last 6 of VIN/HIN/SN", @maxlength = "6", @Style = "width:165px" } })
                            @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })

                            <span class="text-danger field-validation-error" id="searchIdentificationNumber" style="width:205px"></span>

                        </div>
                        <div class="col-md-2" id="div-combobox1-1" style="margin-left:26px">
                            <label for="">Year</label>
                            @{
                                List<SelectListItem> yearList = new List<SelectListItem>();
                                foreach (var CurtailmentSchedule in Model.FeeModelList)
                                {
                                    if (!yearList.Exists(a => a.Value == CurtailmentSchedule.Year.ToString()) && CurtailmentSchedule.Year.ToString() != "")
                                    {
                                        yearList.Add(new SelectListItem { Text = CurtailmentSchedule.Year.ToString(), Value = CurtailmentSchedule.Year.ToString() });
                                    }
                                }
                                yearList = yearList.OrderBy(s => s.Value).ToList();
                            }<SelectListItem>
                                <SelectListItem>
                                    @Html.DropDownList("year", yearList, "-- select year --", new { @class = "form-control", @id = "cmbYear", style = "width:143px" })
                                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-2" id="div-combobox1-2">
                            <label for="">Make</label> @{List<SelectListItem> makeList = new List<SelectListItem>();
                                foreach (var CurtailmentSchedule in Model.FeeModelList)
                                {
                                    if (CurtailmentSchedule.Make != null && CurtailmentSchedule.Make.ToString() != "")
                                    {
                                        if (!makeList.Exists(a => a.Value == CurtailmentSchedule.Make.ToString()))
                                        {
                                            makeList.Add(new SelectListItem { Text = CurtailmentSchedule.Make.ToString(), Value = CurtailmentSchedule.Make.ToString() });
                                        }
                                    }
                                }
                                makeList = makeList.OrderBy(s => s.Value).ToList();
                            }

                                    @Html.DropDownList("make2", makeList, "--select make--", new { @class = "form-control", @id = "cmbMake", style = "width:143px" })
                                    @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-2" id="div-combobox1-3">
                            <label for="">Model</label>
                            @{List<SelectListItem> modelList = new List<SelectListItem>();
                                foreach (var CurtailmentSchedule in Model.FeeModelList)
                                {
                                    if (CurtailmentSchedule.Model != null && CurtailmentSchedule.Model.ToString() != "" )
                                    {
                                        if (!modelList.Exists(a => a.Value == CurtailmentSchedule.Model.ToString()))
                                        {
                                            modelList.Add(new SelectListItem { Text = CurtailmentSchedule.Model.ToString(), Value = CurtailmentSchedule.Model.ToString() });
                                        }
                                    }
                                }
                                modelList = modelList.OrderBy(s => s.Value).ToList();
                            }

                                            @Html.DropDownList("model2", modelList, "--select model--", new { @class = "form-control", @id = "cmbModel" })
                                            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })



                        </div>
                        <button type="button" class="btn btn-primary m-b cancel next_clear_button back_back" id="btnSearch" style="margin-left:29px; margin-top: 28px;margin-bottom: 0px;margin-right: 0px;">Search</button>
                        <button type="button" class="btn btn-primary m-b next_clear_button clear_back" id="btnClear" tabindex="-1" style="margin-top: 28px;margin-bottom: 0px;margin-right: 0px;">Clear</button>
                    </div>
                </fieldset>
            </form>
        </div>
    </div>

</div>
}

<div id="searchGrid1" hidden>


</div>


if (Model.Type == "advanceFee")
{
<div class="info-bar reset" style="margin-top:15px" id="singleUnitDiv" hidden>


    <div class="row">
        <div class="col-xs-12">

            <fieldset>
                <div class="form-group row">
                    <div class="col-md-2" style="width:15%;">
                        <label for="">Date Advanced </label>
                        @Html.Editor("iDateAdvance", new { @id = "iDateAdvance", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>
                    <div class="col-md-2" style="width:27%;padding-left:29px;">
                        <label for="">Vin/HIN/Serial </label>
                        @Html.Editor("iVin", new { @id = "iVin", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>
                    <div class="col-md-2" style="width:10%;">
                        <label for="firstName">Year </label>
                        @Html.Editor("iYear", new { @id = "iYear", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>

                    <div class="col-md-2" style="width:15%;">
                        <label for="">Make </label>
                        @Html.Editor("iMake", new { @id = "iMake", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>

                    <div class="col-md-2" style="width:15%;">
                        <label for="firstName">Model </label>
                        @Html.Editor("iModel", new { @id = "iModel", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>


                </div>

                <div class="form-group row" style="margin-top:15px !important">
                    <div class="col-md-2">
                        <label for="">Fee Amount </label>
                        @Html.Hidden("aCurtAmount", new { @id = "aCurtAmount" })
                        @Html.Editor("iCurtAmount", new { @id = "iCurtAmount", htmlAttributes = new { @class = "form-control", @disabled = "disabled", style = "text-align:right;" } })
                        <span class="text-danger field-validation-error" id="errorCurtAmount" style="left:8%;width:274%"></span>
                    </div>

                    <div class="col-md-2" style="width:15%;">
                        <label for="">Fee Due Date </label>
                        @Html.Editor("iDateDue", new { @id = "iDateDue", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>

                    <div class="col-md-2" style="width:17%;">
                        <label for="">Fee Pay Date <span class="icon-help_outline help-pay-date2"></span></label>
                        @Html.EditorFor(model => model.FeePayDate, new { htmlAttributes = new { @class = "form-control dateKeyPressValidate", @placeholder = "MM/DD/YYYY", @id = "payCurtDate", autocomplete = "off", maxlength = 10 } })
                        <span class="text-danger field-validation-error" id="errorFeesPayDate" style="margin-left:95%;top:50%;width:125%"></span>
                        @Html.Hidden("iCurtNumber", "", new { @id = "iCurtNumber" })
                        @Html.Hidden("iFeeId", "", new { @id = "iFeeId" })
                    </div>


                </div>




                <input type="button" value="Cancel" id="btnCancel" tabindex="-1" class="btn btn-primary m-b next_clear_button clear_back" style="float:right;width:130px;margin-right: 40px;" />

                <input type="button" name="Pay" value="Pay" id="btnPay" class="btn btn-primary m-b next_clear_button next_back" style="width:130px; margin-left: 174px;" disabled />


            </fieldset>

        </div>
    </div>



</div>
                                    }
                                  
                                }
<script src="~/scripts/CommonFunctions.js"></script>
<script>

    //$(document).ready(function(){
    //    if ($('#checkableGrid').children('tbody').children('tr').length == 0)
    //    {  
    //        $('#noCurtLabelDiv').show();
    //        $('#checkableGridDiv').hide();
    //        $('#searchDiv').hide();
    //        $('#payDateDiv').hide();

    //    }
    //    else{
    //        $('#noCurtLabelDiv').hide();
    //        $('#checkableGridDiv').show();
    //        $('#searchDiv').show();
    //        $('#payDateDiv').show();
    //    }
    //});

    //capitalize letters when typing
    $('#identificationNumberSearch').keyup(function () {
        $('#identificationNumberSearch').val(($('#identificationNumberSearch').val()).toUpperCase());
    });
    $('#identificationNumberSearch').focusout(function () {
        $(this).attr('placeholder', 'Last 6 of VIN/HIN/SN');
    });
    //block invalid characters
    $("#identificationNumberSearch").keypress(function (e) {
        if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
            var ch = e.which;
            if ((ch >= 47 && ch <= 57) || (ch >= 65 && ch <= 90) || (ch >= 97 && ch <= 122)) {
                return 1;
            }

            else {
                e.preventDefault();
            }
        }
        
       
        //alert(ch);
    });

    $('#checkableGrid thead tr th a').each(function() {
        var _href = $(this).attr("href");
        $(this).attr("href", _href + '&dueDate='+$('#dueDate').val());
    });

    //clear all fields
    $('#btnCancel').click(function(){
         @{
             Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");

             var timezone = TimeZoneInfo.FindSystemTimeZoneById("Central America Standard Time");
             var dateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timezone);

         }
        var dueDate = '@dateTime';
        //GetCurrentCurtailment(dueDate);
        $('#dueDate').val(dueDate);
        FilterFees();
        $("#dueDate").val('@dateTime.ToString("d")');
        //ClearTextBoxValues();
        $('#payDate').removeClass('input-validation-error');
        $('#payDate').val('');
        $('#payCurtDate').val('');
        //$('#dueDate').val('');
        $('#dueDate').removeClass('input-validation-error');
        $('#errorDueDate').text('');
        $("#dueDate").val('@dateTime.ToString("d")');
        $('#searchIdentificationNumber').text('');
        $('#identificationNumberSearch').removeClass('input-validation-error');
        $('#identificationNumberSearch').val('');

    });
   

   
</script>
<script>

            var total = 0;
            var checkCount = 0;
            var totalRecCount = 0;

            $(function () {

                GridUpdate();
            });

            function GridUpdate() {
                total = 0;
                checkCount = 0;
                totalRecCount = 0;
                var ctrl =
                        $('<input />', {
                            type: 'checkbox',
                            id: "cbSelectAll",
                            click: function () {
                                var checkboxes = $(this).closest('table').find('tbody tr td input[type="checkbox"]');
                                checkboxes.prop('checked', $(this).is(':checked'));
                                var chk = checkboxes.prop('checked');
                               
                                if (chk) {
                                    var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
                                    $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));


                                } else {
                                    var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
                                    $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));
                                    $("#payAll").attr("disabled", "disabled");
                                    $("#payDate").attr("disabled", "disabled");
                                    // clear top error
                                    $('.centered span').text('');
                                    $('#errorPayDate').text('');

                                    $('#payDate').removeClass('input-validation-error');
                                    $('#payDate').next('span').children().text('');
                                    totalRecCount = 0;

                                }
                                total = 0;
                                totalRecCount = 0;total = 0;
                                $('#checkableGrid').find('.curtAmount') .each(function () {
                                    var tr = $(this).parents('tr:first');
                                    totalRecCount++;
                                    if (document.getElementById('all').checked) {
                                        total = total + parseFloat(tr.find("#am").text().replace(/,/g, ""));
                                        checkCount++;
                                        if (tr.find("#curtailmentStatus").val() === '2') {
                                            $(this).parents('tr').css('background', '#fff5cc');  $('#partialPaymentColor').show();
                                        }else{
                                        $(this).parents('tr').css('background', 'lightblue');
                                        }

                                    } else {
                                        checkCount = 0;
                                        if (tr.find("#curtailmentStatus").val() === '2') {
                                            $(this).parents('tr').css('background', '#fffae6'); $('#partialPaymentColor').show();
                                        }else{
                                        $(this).parents('tr').css('background', 'transparent');
                                        }

                                    }
                                    var tot = roundNumber(total, 2);
                                    document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + tot.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                                    if (checkCount > 0) {
                                        $("#payAll").removeAttr("disabled");
                                        $("#payDate").removeAttr("disabled");
                                        if (totalRecCount == 1 &&  $("#hdnSelectedButton").val() == "advanceFee") {
                                            SetTextBoxValues(tr);
                                        }
                                    }

                                });
                                if (checkCount > 1 &&  $("#hdnSelectedButton").val() == "advanceFee") {
                                    ClearTextBoxValues();ClearSearchGrid();
                                }
                                else if (checkCount == 0 || totalRecCount == 0) {
                                    $("#payAll").attr("disabled", "disabled");
                                    $("#payDate").attr("disabled", "disabled");
                                    // clear top error

                                    $('#errorPayDate').text('');
                                    $('.centered span').text('');
                                    $('#payDate').removeClass('input-validation-error');
                                    $('#payDate').next('span').children().text('');
                                    if($("#hdnSelectedButton").val() == "advanceFee"){
                                        ClearTextBoxValues();
                                    }
                                }
                                //changePartialPaymentRowColor();

                                SetMinDate();
                            }
                        })


                var gg = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
                $('.gridtable thead tr th:first').html(gg.prepend(ctrl));

                //changePartialPaymentRowColor();

                $('.checkboxAll').change(function () {
                    SetMinDate();
                    var tr = $(this).parents('tr:first');
                    var checked = tr.find("#all").is(':checked');

                    if (checked) {
                        total = total + parseFloat(tr.find("#am").text().replace(/,/g, ""));

                        checkCount++;
                        if (tr.find("#curtailmentStatus").val() === '2') {
                            $(this).parents('tr').css('background', '#fff5cc'); //checked color of partial payment
                            $('#partialPaymentColor').show();
                        }else{
                        $(this).parents('tr').css('background', 'lightblue');
                        }


                    } else {
                        total = total - parseFloat(tr.find("#am").text().replace(/,/g, ""));
                        checkCount--;
                        if (tr.find("#curtailmentStatus").val() === '2') {
                            $(this).parents('tr').css('background', '#fffae6'); //not checked color of partial payment
                            $('#partialPaymentColor').show();
                        }else{
                        $(this).parents('tr').css('background', 'transparent');
                    }

                    }

                    if (checkCount == 1 ) {
                        if (checked) {
                            if($("#hdnSelectedButton").val() == "advanceFee"){
                                SetTextBoxValues(tr);
                            }else{
                                $("#payAll").removeAttr("disabled");
                                $("#payDate").removeAttr("disabled");
                            }

                        } else {
                            $('.curtAmount').each(function () {

                                var tr = $(this).parents('tr:first');
                                var checked = tr.find("#all").is(':checked');

                                if (checked) {
                                    if($("#hdnSelectedButton").val() == "advanceFee"){
                                        SetTextBoxValues(tr);
                                    }

                                    else{
                                        $("#payAll").removeAttr("disabled");
                                        $("#payDate").removeAttr("disabled");
                                    }
                                }

                            });
                        }
                        var tot1 = roundNumber(total, 2);
                        document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + tot1.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        //document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + roundNumber(total,2);
                        $("#payAll").removeAttr("disabled");
                        $("#payDate").removeAttr("disabled");
                    }
                    else if (checkCount == 0) {
                        document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ 0.00";
                        if( $("#hdnSelectedButton").val() == "advanceFee"){
                            ClearTextBoxValues();
                        }
                        $("#payAll").attr("disabled", "disabled");
                        $("#payDate").attr("disabled", "disabled");
                        // clear top error
                        $('.centered span').text('');
                        $('#errorPayDate').text('');
                        $('#payDate').removeClass('input-validation-error');
                        $('#payDate').next('span').children().text('');
                        $("#someID span").html('Select')

                    }
                    else {
                        if($("#hdnSelectedButton").val() == "advanceFee"){
                            ClearTextBoxValues();
                        }
                        var tot2 = roundNumber(total, 2);
                        document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + tot2.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        //document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + roundNumber(total,2);

                    }

                    if (checkCount > 0) {
                        if($("#hdnSelectedButton").val() == "advanceFee"){
                            ClearSearchGrid() ;
                        }
                        var chkText = $('<div />').attr({ id: 'someID' }).html(' <span> Select </span>');
                        $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));

                        var totalRows = $("#checkableGrid td :checkbox").length;
                        var checked = $("#checkableGrid td :checkbox:checked").length;

                        if (checked == totalRows) {
                            var chkText = $('<div />').attr({ id: 'someID' }).html('<span>  Deselect </span>');
                            $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                        }
                    }
                    $('.curtAmount').each(function () {
                        var tr = $(this).parents('tr:first');
                        if (tr.find("#curtailmentStatus").val() === '2' && tr.find("#all").is(':checked')) {
                            $(this).parents('tr').css('background', '#fff5cc');//checked color of partial payment
                        }
                    });
                });

                //
                // Change the selector if needed
                var table = $('table'),
                    bodyCells = table.find('tbody tr:first').children(),
                    colWidth;

                // Adjust the width of thead cells when window resizes
                $(window).resize(function() {
                    // Get the tbody columns width array
                    colWidth = bodyCells.map(function() {
                        return $(this)[0].getBoundingClientRect().width;
                    }).get();

                    // Set the width of thead columns
                    table.find('thead tr').children().each(function(i, v) {
                        $(v).outerWidth(colWidth[i]);
                    });
                }).resize(); // Trigger resize handler

                $(window).bind("load",function(){

                    // Get the tbody columns width array
                    colWidth = bodyCells.map(function() {
                        return $(this)[0].getBoundingClientRect().width;
                    }).get();

                    // Set the width of thead columns
                    table.find('thead tr').children().each(function(i, v) {
                        $(v).outerWidth(colWidth[i]);
                    });
                });
            }

            $(document).on('click', 'tbody', (function (e) {
                var target = $(e.target);
                if (target.parents('#checkableGrid').length) {

                    var $td = $(e.target).closest("td");
                    var rowIndex = $td.parent().index();
                    rowIndex += 1;
                    var ColIndex = $td.parent().children().index($td);
                    var table = document.getElementById("checkableGrid");
                    var row = $("tr:eq(" + rowIndex + ")", '#checkableGrid');
                    ClearLabelMessages();
                  
                    

                    if (ColIndex != 0) {

                        var checked = row.find("#all").prop('checked');
                        if (!checked) {
                            row.find("#all").prop('checked', true);
                            if (row.find("#curtailmentStatus").val() === '2' && row.find("#all").is(':checked')) {
                                row.css('background', '#fff5cc');//checked color of partial payment
                            }else{
                            row.css('background', 'lightblue');
                            }

                            checkCount++;
                            total = total + parseFloat(row.find("#am").text().replace(/,/g, ""));

                            if (checkCount == 1 &&  $("#hdnSelectedButton").val() == "advanceFee") {ClearSearchGrid() ;
                                SetTextBoxValues(row);
                            }
                            else if($("#hdnSelectedButton").val() == "advanceFee"){
                                //SetRadioBtnHeaderChecked();
                                ClearTextBoxValues();
                            }
                            SetRadioBtnHeaderChecked();
                            var tot3 = roundNumber(total, 2);
                            document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + tot3.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                            //document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + roundNumber(total,2);

                            $("#payAll").removeAttr("disabled");
                            $("#payDate").removeAttr("disabled");
                        }
                    } else {
                        SetRadioBtnHeaderChecked();
                    }

                    SetMinDate();
                    //changePartialPaymentRowColor();
                }
            }));

            function SetRadioBtnHeaderChecked() {
                var totalRows = $("#checkableGrid td :checkbox").length;
                var checked = $("#checkableGrid td :checkbox:checked").length;

                if (checked == totalRows) {
                    var chkText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
                    $("#checkableGrid").find("input:checkbox").each(function () {
                        this.checked = true;
                    });
                    $("#someID span").html('Deselect');
                }
                else {

                    $("#cbSelectAll").removeAttr("checked");
                }

            }


            function ChangeCheckBoxText(value) {
                var ctrl =
                        $('<input />', {
                            type: 'checkbox',
                            id: "cbSelectAll"
                        });
                var chkText = $('<div />').attr({ id: 'someID' }).html(value);
                $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
            }


            $("#btnSearch").click(function () {

                ClearTextBoxValues();

                total = 0;
                checkCount = 0;
                $("#btnPay").attr("disabled", "disabled");
                $("#payAll").attr("disabled", "disabled");
                $("#advanceDate").attr("disabled", "disabled");
                $("#payDate").attr("disabled", "disabled");
                // clear top error
                $('#payDate').removeClass('input-validation-error');
                $('#payDate').next('span').children().text('');
                $('.centered span').text('');
                $('#errorPayDate').text('');

                ClearMainGrid();
                //var count = 0;
                //$("#checkableGrid").find("input:checkbox").each(function () {
                //    this.checked = false;
                //    if (count > 0) {
                //        $(this).parents('tr').css('background', 'transparent');
                //    }
                //    count++;
                //});
                document.getElementById('all').checked = false;
                var tot4 = roundNumber(total, 2);
                document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + tot4.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                //document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + roundNumber(total,2);

                $("#someID span").html('Select');
                $("#tagscloud span").html('');
                //$('#iCurtAmount').removeClass('input-validation-error');
                var para1 = $("#identificationNumberSearch").val();
                var para2 = $('#cmbYear').val();
                var para3 = $("#cmbMake").val();
                var para4 = $("#cmbModel").val();
                if (para1 == null) { para1 = ''; }
                if (((para1 != "") &&(para1 != null)) && (para1.length < 6)) {
                    //alert('ff');
                    $("#searchIdentificationNumber").text('Please confirm the last 6 characters of the VIN/HIN/Serial No.');
                   // $('#identificationNumberSearch').val("");

                    $('.centered span').text('Error');
                    $('#identificationNumberSearch').addClass('input-validation-error');
                    $('#searchGrid1').hide()
                    e.preventDefault();

                }
                else if (($("#identificationNumberSearch").val() != '') || ($('#cmbYear').val() != '') || ($('#cmbMake').val() != '') || ($("#cmbModel").val() != '')) {
                    Search(para1, para2, para3, para4);
                }else{
                    $('#searchGrid1').hide();
                }


            });

            $('#identificationNumberSearch').click(function () {
                $("#searchIdentificationNumber").text('');
                //$('#identificationNumberSearch').val("");

                $('.centered span').text('');
                $('#identificationNumberSearch').removeClass('input-validation-error')
            });

            //clear text box values and disable feild
            function ClearTextBoxValues() {
                $('#ivin').val('');
                $('#identificationNumber').val('');
                $('#iYear').val('');
                $('#iMake').val('');
                $('#iModel').val('');
                $('#iCost').val('');
                $('#iCurtAmount').val('');
                $("#btnPay").attr("disabled", "disabled");
                //$("#payAll").removeAttr("disabled");
                $("#advanceDate").attr("disabled", "disabled");
                //$("#startDate").removeAttr("disabled");
                $("#singleUnitDiv").hide();
                $('.centered span').text('');
                $('#errorCurtAmount').text('');
                //$('#iCurtAmount').removeClass('input-validation-error');
                $('#errorPayDate').text('');
                $('#payDate').removeClass('input-validation-error');
                $('#payDate').next('span').children().text('');
                $('#payDate').val('');
                $('#payCurtDate').val('');

            }

            $('#identificationNumberSearch').focusout(function () {
                $(this).attr('placeholder', 'VIN/HIN/Serial No');
            });

            function ClearTextBoxValues() {
                $('#iDateAdvance').val('');
                $('#ivin').val('');
                $('#iYear').val('');
                $('#iMake').val('');
                $('#iModel').val('');
                $('#iCurtAmount').val('');
                $('#iCurtNumber').val('');
                $("#btnPay").attr("disabled", "disabled");
                $("#advanceDate").attr("disabled", "disabled");
                $("#singleUnitDiv").hide();
                $('#errorCurtAmount').text('');
                //$('#iCurtAmount').removeClass('input-validation-error');
                $('.centered span').text('');
                $('#errorPayDate').text('');
                $('#payDate').removeClass('input-validation-error');
                $('#payDate').next('span').children().text('');
                $('#payDate').val('');
                $('#payCurtDate').val('');
                $('#iDateDue').val('');


            }

            function SetTextBoxValues(tr) {
                $('#iVin').val(tr.find("#vin").text());
                $('#iYear').val(tr.find("#year").text());
                $('#iMake').val(tr.find("#make").text());
                $('#iModel').val(tr.find("#model").text());
                $('#iFeeId').val(tr.find("#all").val());
                $('#iCurtNumber').val(tr.find("#CurtNumber").text());
                $('#iDateAdvance').val(tr.find("#dateAdvance").text());
                $('#iCurtAmount').val(tr.find("#am").text().replace(/,/g, ""));
                $('#aCurtAmount').val(tr.find("#am").text().replace(/,/g, ""));
                $('#errorCurtAmount').text('');
                //$('#iCurtAmount').removeClass('input-validation-error');
                $('#errorFeesPayDate').text('');
                $('#payCurtDate').removeClass('input-validation-error');
                //document.getElementById("unitid").innerHTML = tr.find("#all").val();
                $("#btnPay").removeAttr("disabled");
                $("#advanceDate").removeAttr("disabled");
                $("#singleUnitDiv").show();
                $('#iDateDue').val(tr.find("#BillDueDate").text());


            }

            function ClearLabelMessages() {
                $('#noDataLabelDiv').text("");
                $('.label-success').text("");
            }

            @*var advDatePicker = new Pikaday({
                field: document.getElementById('advanceDate'),
                format: 'l'


            });

            advDatePicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
            advDatePicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));*@


            function Search(para1, para2, para3, para4) {

                var curtList = @Html.Raw(Json.Encode(Model));
                showSearching();
                //alert(curtList);
                $.ajax({
                    url: '/Fee/SearchFee',
                    type: 'POST',
                    contentType: 'application/json;',
                    data: JSON.stringify({ identificationNumber: para1, year: para2, make: para3, vehicleModel: para4, CurtailmentList: curtList }),
                    success: function (View) {
                        $('#searchGrid1').html(View);
                        $('#searchGrid1').removeAttr('hidden');
                        $('#searchGrid1').show();
                        //changePartialPaymentRowColor();
                        // Change the selector if needed
                        var table = $('table'),
                             bodyCells = table.find('tbody tr:first').children(),
                             colWidth;

                        colWidth = bodyCells.map(function () {
                            return $(this)[0].getBoundingClientRect().width;
                        }).get();

                        // Set the width of thead columns
                        table.find('thead tr').children().each(function (i, v) {
                            $(v).outerWidth(colWidth[i]);
                        });

                        hideLoading();

                    },
                    error: function (jqXHR, textStatus, errorThrown){
                        // Your handler here...
                        
                        $('#searchGrid1').hide();
                        hideLoading();
                        // if session expires
                        if(jqXHR.status == "404"){
                            window.location.href='/Login/UserLogin?lbl=Due to inactivity your session has timed out, please log in again.';
                        }
                    }
                });
            }

    $("#btnClear").click(function () {

        ClearSearchRelatedData();
        var mainGridSelectedCount = 0;
        $('table#checkableGrid > tbody > tr').each(function () {
            var isChecked = $(this).find("#all").is(':checked');
            if (isChecked === true)
                mainGridSelectedCount = mainGridSelectedCount + 1;
        });

        if (mainGridSelectedCount === 0)
            ClearTextBoxValues();
    });

    function ClearSearchRelatedData() {
        //document.getElementById("form").reset();
        $("#identificationNumberSearch").val('');
        $("#vehicleModelSearch").val('');
        $('#cmbYear').val('');
        $("#cmbMake").val('');
        $("#cmbModel").val('');
        $("#noDataLabelDiv").hide();
        $("#searchGrid").hide();
        //$("#singleUnitDiv").hide();
        $("#searchIdentificationNumber").text('');
        $('.centered span').text('');
        $('#identificationNumberSearch').removeClass('input-validation-error');

    }

    function ClearMainGrid() {
        var count = 0;
        $("#checkableGrid").find("input:checkbox").each(function () {
            this.checked = false;
            if (count > 0) {
                $(this).parents('tr').css('background', 'transparent');

            }
            count++;
        });
        total = 0;
        checkCount = 0;
        var tot5 = roundNumber(total, 2);
        document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + tot5.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
        //document.getElementById("subtotal").innerHTML = "Current Fee Total  : $ " + roundNumber(total,2);
        $("#payAll").attr("disabled", "disabled");
        $("#payDate").attr("disabled", "disabled");
        // clear top error
        $('.centered span').text('');
        $('#errorPayDate').text('');
        $('#payDate').removeClass('input-validation-error');
        $('#payDate').next('span').children().text('');
        //changePartialPaymentRowColor();
    }

    function ClearSearchGrid() {
        $("#searchResultGrid").find('.curtAmount').each(function () {
            var tr = $(this).parents('tr:first');
            tr.css('background', 'transparent');
        });

    }

    payPicker = new Pikaday({
        field: document.getElementById('payDate'),
        format: 'l',

        bound: true,
        onSelect: function () {
            var thisDate = this.getDate();
            $('#errorPayDate').text('');
            $('#errorFeesPayDate').text('');
            $('#payDate').removeClass('input-validation-error');
            $("#payCurtDate").val(formatDate(thisDate));
        }
    });

    payPicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
   // payPicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));
    $("#payDate").val("");
    payPicker.gotoDate(new Date('@DateTime.Today.ToString("d")'));


    payCurtPicker = new Pikaday({
        field: document.getElementById('payCurtDate'),
        format: 'l',

        bound: true,
        onSelect: function () {
            var thisDate = this.getDate();
            $('#errorPayDate').text('');
            $('#payDate').removeClass('input-validation-error');
            $('#errorFeesPayDate').text('');
            $('#payCurtDate').removeClass('input-validation-error');
            $('#payDate').next('span').children('span').text('');
            $("#payDate").val(formatDate(thisDate));
        }
    });

    payCurtPicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
    //payCurtPicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));
    $("#payCurtDate").val("");
    payCurtPicker.gotoDate(new Date('@DateTime.Today.ToString("d")'));


    function formatDate(value)
    {

        return value.getMonth()+1 + "/" + value.getDate() + "/" + value.getFullYear();
    }

    var data = { Fees: [] };

    $('#payAll').click(function () {

        data = { Fees: [] };
        if($("#payDate").val() == ""){
            if($('#payDate').next('span').children().length == 0 ){

                $('#errorPayDate').text('Please select the Fees payment date');
                $('#payDate').addClass('input-validation-error');

            }
            $('.centered span').text('Error');
            return;
        }

        if($("#errorPayDate").text() != ""){
            return;
        }

        if (checkCount >= 1) {
            $('.curtAmount').each(function () {
                var tr = $(this).parents('tr:first');
                var checked = tr.find("#all").is(':checked');

                if (checked) {
                    if('@Model.Type' == 'advanceFee'){
                        data.Fees.push({ FeeId: tr.find("#all").val(), Type: $('#hdnSelectedButton').val(), PaidDate:$('#payDate').val(),IdentificationNumber:tr.find("#vin").text()});
                    }else{
                        data.Fees.push({ FeeId: tr.find("#all").val(), Type: $('#hdnSelectedButton').val(), PaidDate:$('#payDate').val(),DueDate:tr.find('#DueDate').text()});
                    }
                }
            });
            PayFees(data.Fees);
        }

    });

    $('#btnPay').click(function (e) {
        //alert('came');
        //alert($('#iFeeId').val());
        //alert($('#hdnSelectedButton').val());
        data = { Fees: [] };

            var a = 1;
            if($("#payCurtDate").val() == ""){
                // show error errorFeesPayDate
                $('#errorFeesPayDate').text('Please select the Fees payment date');
                $('#payCurtDate').addClass('input-validation-error');
                a=0;
            }
            if($('#errorFeesPayDate').text() != ""){
                a=0;
            }
            if(a== 0 ){
                $('.centered span').text('Error');
                return;
            }

        //data.Fees.push({ FeeId: $('#iFeeId').val(), PaidDate: $('#payDate').val()});
            if('@Model.Type' == 'advanceFee'){
                data.Fees.push({ FeeId: $('#iFeeId').val(), Type: $('#hdnSelectedButton').val(), PaidDate:$('#payDate').val(),IdentificationNumber:$('#iVin').val() });
            }else{
                data.Fees.push({ FeeId: $('#iFeeId').val(), Type: $('#hdnSelectedButton').val(), PaidDate:$('#payDate').val(),DueDate:$('#dateAdvance').val()});
            }
            PayFees(data.Fees);

    });

    function PayFees(lst,date){
        $('#btnPay').attr("disabled","disabled");
        $('#payAll').attr("disabled","disabled");

        showPleaseWait();
        $.ajax({
            url: '/Fee/PayFees/',
            //data: JSON.stringify(lst),date,
            data: JSON.stringify({ lstFee: lst, type: '@Model.Type' }),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',

            success: function (View) {
                $('.overlay-bg, .overlay-content').hide();

                
                    if(View == 1){
                        $('.centered1 span').text('Successfully Updated');

                        window.scrollTo(0, 0);
                        FilterFees();
                        
                    }else if(View == 0){
                        $('.centered span').text('Error');


                    }
                
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // Your handler here...

                // if session expires
                if (jqXHR.status == "404") {
                    window.location.href = '/Login/UserLogin?lbl=Due to inactivity your session has timed out, please log in again.';
                }
                $('.overlay-bg, .overlay-content').hide();
            }
        });
    }

    $('#payDate').click(function(e){

        $('#errorPayDate').text('');
        $(this).next('span').children('span').remove();
    });

    $('#payDate').blur(function () {

        if ($(this).val() == "") {


            $(this).attr('placeholder', 'MM/DD/YYYY');
            return;
        }
        var valid = isValidDate($(this).val());
        if (valid) {
            var selectedDate = new Date($(this).val());
            var minDate = new Date("@ViewBag.loanDetails.startDate.Date");
            //var maxDate = new Date("@ViewBag.loanDetails.maturityDate.Date");
            if (selectedDate < minDate) {
                // out off range error
                $('#errorPayDate').text('Out of Range');
                $(this).addClass('input-validation-error');
                $('.centered span').text('Error');
            } else {
                // delete error mssage
                $('#errorPayDate').text('');
                $(this).removeClass('input-validation-error');
            }



        } else {

            // not valid data error
            $('#errorPayDate').text('The field must be a date');
            $(this).addClass('input-validation-error');
            $('.centered span').text('Error');
        }
    });
    $('#payCurtDate').click(function(e){

        $('#errorFeesPayDate').text('');
        $('#payCurtDate').removeClass('input-validation-error');
        $(this).next('span').children('span').remove();
    });

    $('#payCurtDate').blur(function () {

        if ($(this).val() == "") {


            $(this).attr('placeholder', 'MM/DD/YYYY');
            return;
        }
        var valid = isValidDate($(this).val());
        if (valid) {
            var selectedDate = new Date($(this).val());
            var minDate = new Date("@ViewBag.loanDetails.startDate.Date");
           // var maxDate = new Date("@ViewBag.loanDetails.maturityDate.Date");
            if (selectedDate < minDate) {
                // out off range error
                $('#errorFeesPayDate').text('Out of Range');
                $(this).addClass('input-validation-error');
                $('.centered span').text('Error');
            } else {
                // delete error mssage
                $('#errorFeesPayDate').text('');
                $(this).removeClass('input-validation-error');
            }



        } else {

            // not valid data error
            $('#errorFeesPayDate').text('The field must be a date');
            $(this).addClass('input-validation-error');
            $('.centered span').text('Error');
        }
    });

    ////////////////////////////////////////
    //set advance date as min date on datepicker
    function SetMinDate(){

        var mindate = $('.gridtable tbody tr .gridColumnSelect').find('input[type=checkbox]:checked').filter(':first').closest('tr').find("#dateAdvance").text();
        if(mindate != ""){
            mindate = new Date(mindate);





        $('.gridtable tbody tr .gridColumnSelect #all').each(function () {
            if($(this).is(':checked')){



                var dateAdvance = new Date($(this).closest('tr').find("#dateAdvance").text());

                if(mindate.getTime()  < dateAdvance.getTime()){

                    mindate = dateAdvance;
                }

            }

        });


        payPicker.setMinDate(mindate);
        }


    }

    $('#payCurtDate').focus(function(){
        payCurtPicker.setMinDate(new Date($('#iDateAdvance').val()));
    });
    /////////////////////////////////
</script>


@*<div class="overlay-bg">
</div>
<div class="overlay-content popup5" style="width:auto;text-align:center;margin-left: 173px;top:280px">


    <h3>Message</h3>

    <div id="payOffAlert" class="alert alert-info" role="alert">
        These <strong>VIN NUMBERS</strong>  Units are Successfully paid off. Do you Like to Update the Title Status?
    </div><br />
    <span> Press OK to continue, or Cancel to stay on the current page.</span><br />
    <br />
    @Html.ActionLink("OK", "TitleStatusUpdate", "UnitTitle", null, new { @class = "btn btn-info", style = "width: 70px;margin-right: 20px;" })
    <button class="btn btn-info" onclick="$('.overlay-bg, .overlay-content').hide();GetCurrentCurtailment($('#dueDate').val());">Cancel</button>






</div>*@


<script>


    // Change the selector if needed
    var table = $('table'),
        bodyCells = table.find('tbody tr:first').children(),
        colWidth;

   
    // Get the tbody columns width array
    colWidth = bodyCells.map(function() {
        return $(this)[0].getBoundingClientRect().width;
    }).get();
    
    // Set the width of thead columns
    table.find('thead tr').children().each(function(i, v) {
        $(v).outerWidth(colWidth[i]);
    });  
    // Adjust the width of thead cells when window resizes
    $(window).resize(function() {
        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this)[0].getBoundingClientRect().width;
        }).get();
    
        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).outerWidth(colWidth[i]);
        });    
    }).resize(); // Trigger resize handler  

    $(window).bind("load",function(){
    
        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this)[0].getBoundingClientRect().width;
        }).get();
    
        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).outerWidth(colWidth[i]);
        });    
    });

    $('.help-pay-date1').click(function () {

        $('.help-text h4').html("Payment date for fees");
        $('.help-text p').html(" &nbsp;&nbsp; Select the date which you want the fee(s) payment to be recorded on.");

    });

    $('.help-pay-date2').click(function () {

        $('.help-text h4').html("Fee Payment Date");
        $('.help-text p').html(" &nbsp;&nbsp; Select which date the fee payment is being recorded.");

    });

    $('.help-adv-grid').click(function () {

        $('.help-text h4').html("Select Unit(s)");
        $('.help-text p').html(" &nbsp;&nbsp; Use these select boxes to check which unit(s) you are wanting to record the advanace fee payments for at this time.");

    });

    $('.help-adv-search').click(function () {

        $('.help-text h4').html("Search for a Unit");
        $('.help-text p').html(" &nbsp;&nbsp; Use these fields (you can enter details in just one field or any number of fields) to search for a specific unit. The more fields you select the more refined the search results will be.");

    });

   

    $('.help-mnt-grid').click(function () {

        $('.help-text h4').html("Select Unit(s)");
        $('.help-text p').html(" &nbsp;&nbsp; Use these select boxes to check which month(s) you are wanting to record the monthly loan fee payments for at this time.");

    });

    $('.help-lot-grid').click(function () {

        $('.help-text h4').html("Select Unit(s)");
        $('.help-text p').html(" &nbsp;&nbsp; Use these select boxes to check which month(s) you are wanting to record the lot inspection fee payments for at this time.");

    });
    
</script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>
