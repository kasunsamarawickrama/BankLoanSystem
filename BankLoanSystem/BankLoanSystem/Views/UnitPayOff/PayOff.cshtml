@using System.Collections.Generic
@using System.Web.Helpers
@model BankLoanSystem.Models.UnitPayOffViewModel

@{
    Layout = null;
    ViewBag.Title = "Pay Off";
    WebGrid grid = new WebGrid(Model.UnitPayOffList, defaultSort: "DateEntered", canPage: false, ajaxUpdateContainerId: "payOffGridDIv", ajaxUpdateCallback: "GridUpdate");
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Pay Off</title>

    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">


    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/scripts/jquery-1.10.2.min.js"></script>
    <script src="~/scripts/bootstrap.min.js"></script>
    <link href="~/Content/commonActions.css" rel="stylesheet" />
    <style>
        #payOffGridDIv table tbody,
        #payOffGridDIv table thead {
            display: block;
        }



        #payOffGridDIv table tbody {
            max-height: 300px;
            overflow-y: auto;
            overflow-x: hidden;
        }
    </style>
</head>
<body>
    @using (Ajax.BeginForm("PayOff", null, new AjaxOptions()
    {
        OnFailure = "handleError",
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "changeContainer",
        LoadingElementId = "loadingDiv"
    }, new { id = "form" }))
    {
        <div class="container" id="container">
            @{
                Html.RenderAction("LoanInfo", "Unit", new { title = @ViewBag.Title, msg = @ViewBag.Msg });
            }
            <div class="details-container">


                <div class="body-content" style="float:right;margin-bottom:15px;width:100%;height:auto">


                    <div class="info-bar" id="payOffGridDIv" style="margin-top:15px;padding:unset">

                        <!-- This is for Grid-->

                        @if (Model.UnitPayOffList != null)
                        {
                            @grid.GetHtml(
                            tableStyle: "gridtable",
                           headerStyle: "webgrid-header",

                           alternatingRowStyle: "webgrid-alternating-row",
                           rowStyle: "webgrid-row-style",
                           htmlAttributes: new { id = "checkableGrid" },
                           columns: grid.Columns(
                           grid.Column(
                            format:@<text><input type="checkbox" value="@item.UnitId" name="ids" class="checkboxAll" id="all" /></text>
                                , header: "{checkall}"

                        ),
                            grid.Column("DateEntered", "DateEntered", canSort: false, format: @<text>@{<label id="date" class="vin"> @item.DateEntered</label>}</text>),
                               grid.Column("VIN / HIN / Serial #", "VIN / HIN / Serial #", canSort: false, format:@<text>@{<label id="vin" class="vin">@item.IdentificationNumber</label>}</text>),
                               grid.Column("Year", "Year", canSort: false, format:@<text>@{<label id="year" class="vin">@item.Year</label>}</text>),
                               grid.Column("Make", "Make", canSort: false, format:@<text>@{<label id="make" class="vin">@item.Make</label>}</text>),
                               grid.Column("Model", "Model", canSort: false, format:@<text>@{<label id="model" class="vin">@item.Model</label>}</text>),
                               grid.Column("PurchesePrice", "PurchesePrice", format:@<text>@{<label id="cost" class="year">@item.PurchesePrice</label>}</text>),
                               grid.Column("Balance", "Balance", canSort: false, format:@<text>@{<label id="balance" class="vin">@item.Balance</label>}</text>)
                            )
                            )
                        }

                    </div>

                    <div class="info-bar" style="margin-top:15px">

                        <div class="form-group row">
                            <label style="width:28%" for="" class="col-sm-4 form-control-label">Are the titles being returned to Dealer at this time?</label>


                            <div class="col-md-2">
                                <label class="radio-inline">
                                    <input type="radio" name="inlineRadioOptions" id="" value=""> Yes
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" name="inlineRadioOptions" id="" value=""> No
                                </label>
                            </div>

                        </div>

                        <div class="form-inline">
                            <div class="form-group">
                                <label for="">Pay Date : </label>

                                @*<input class="form-control" type="date" style="margin-left: 15px"/>*@
                                @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @class = "form-control", @id = "payDate", autocomplete = "off", @disabled = "disabled" } })

                            </div>

                            <button type="submit" class="btn btn-primary" style="margin-left:15px">Pay off all selected units</button>
                        </div>



                    </div>


                    <div class="info-bar search-panel" style="margin-top:15px;">

                        <div class="form-inline" style="margin-left:25px;">
                            <div class="form-group" style="margin-left: -203px;">
                                <label for="id">VIN/HIN/Serial</label>

                                @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control", @id = "identificationNumberSearch", @placeholder = "VIN/HIN/Serial", @maxlength = "20" } })
                                @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })


                            </div>

                            <div class="form-group" style="margin-left:20px;">
                                <label for="">Year</label>

                                @*<input class="form-control" type="text" style="width:90px" />*@
                                @{
                                    List<SelectListItem> yearList = new List<SelectListItem>();
                                    foreach (var type in ViewBag.advanceList)
                                    {
                                        if (!yearList.Exists(a => a.Value == type.Year.ToString()) && type.Year.ToString() != "")
                                        {
                                            yearList.Add(new SelectListItem { Text = type.Year.ToString(), Value = type.Year.ToString() });
                                        }
                                    }
                                }

                                @Html.DropDownList("year", yearList, "-- select year --", new { @class = "form-control", @id = "cmbYear" })
                                @Html.ValidationMessageFor(model => model.vehicle.Year, "", new { @class = "text-danger" })
                                <div id="vehicleyear"><span class="text-danger"></span></div>

                            </div>

                            <div class="form-group" style="margin-left:20px;">
                                <label for="">Make</label>

                                @*<input class="form-control" type="text" style="width:90px" />*@
                                @{List<SelectListItem> makeList = new List<SelectListItem>();
                                    foreach (var type in ViewBag.advanceList)
                                    {
                                        if (!makeList.Exists(a => a.Value == type.Make.ToString()) && type.Make.ToString() != "")
                                        {
                                            makeList.Add(new SelectListItem { Text = type.Make.ToString(), Value = type.Make.ToString() });
                                        }
                                    }
                                }
                            </div>
                            @Html.DropDownList("make", makeList, "-- select make --", new { @class = "form-control", @id = "cmbMake" })
                            @Html.ValidationMessageFor(model => model.vehicle.Make, "", new { @class = "text-danger col-md-2" })
                            <div id="vehiclemake"><span class="text-danger"></span></div>



                            <div class="form-group" style="margin-left: 685px;margin-top: -46px;">
                                <label for="">Model</label>

                                @{List<SelectListItem> modelList = new List<SelectListItem>();
                                    foreach (var type in ViewBag.advanceList)
                                    {
                                        if (!modelList.Exists(a => a.Value == type.Model.ToString()) && type.Model.ToString() != "")
                                        {
                                            modelList.Add(new SelectListItem { Text = type.Model.ToString(), Value = type.Model.ToString() });
                                        }
                                    }
                                }
                                @Html.DropDownList("model", modelList, "-- select model --", new { @class = "form-control", @id = "cmbModel" })
                                @Html.ValidationMessageFor(model => model.vehicle.Model, "", new { @class = "text-danger" })
                                <div id="vehiclemodel"><span class="text-danger"></span></div>

                            </div>


                            <input type="button" name="search" value="Search" id="btnSearch" class="btn btn-info btn-center" style="margin-left: 20px;margin-top: -43px;" />
                            <input type="button" value="Clear" id="btnClear" tabindex="-1" class="btn btn-default cancel btn-right" style="margin-top: -43px;" />
                        </div>
                    </div>


                    <div class="info-bar" style="margin-top:15px">
                        <!-- This is for Search Grid-->
                        <div class="info-unit" id="searchGrid1" style="margin-top:10px;padding:unset">


                        </div>

                    </div>

                    <div class="info-bar" style="margin-top:15px" id="singleUnitDiv">

                        <div class="row">
                            <div class="col-xs-12">
                                <form>
                                    <fieldset>
                                        <div class="form-group row">
                                            <input type="hidden" value="" id="iUnitId"/>
                                            <div class="col-md-2">
                                                <label for="">Vin/HIN/Serial </label>
                                                @Html.Editor("iVin", new { @id = "iVin", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>
                                            <div class="col-md-2">
                                                <label for="firstName">Year </label>
                                                @Html.Editor("iYear", new { @id = "iYear", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="col-md-2">
                                                <label for="">Make </label>
                                                @Html.Editor("iMake", new { @id = "iMake", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="col-md-2">
                                                <label for="">Model </label>
                                                @Html.Editor("iModel", new { @id = "iModel", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="col-md-2">
                                                <label for="">Purchase Price </label>
                                                @Html.Editor("iCost", new { @id = "iCost", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-2">
                                                <label for="">Pay Off Amount </label>
                                                @Html.Editor("iBalance", new { @id = "iBalance", htmlAttributes = new { @class = "form-control", @disabled = "disabled", style = "text-align:right;" } })
                                            </div>
                                            <div class="col-md-2">
                                                <label for="">Pay Off Date </label>
                                                @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "MM/DD/YYYY", @id = "payDate", autocomplete = "off", @disabled = "disabled" } })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label style="width:28%" for="" class="col-sm-4 form-control-label">Is the title being returned to Dealer at this time?</label>


                                            <div class="col-md-2">
                                                <label class="radio-inline">
                                                    <input type="radio" name="inlineRadioOptions" id="" value=""> Yes
                                                </label>
                                                <label class="radio-inline">
                                                    <input type="radio" name="inlineRadioOptions" id="" value=""> No
                                                </label>
                                            </div>
                                        </div>
                                        <button style="width:100px" type="button" id="btnPay" class="btn btn-info">Pay</button>
                                        <button type="button" class="btn btn-default" style="float:right;">Cancel</button>
                                    </fieldset>
                                </form>
                            </div>
                        </div>



                    </div>


                </div>

            </div>


            <div class="link-bar" style="margin-bottom:15px;">


                @{
                    Html.RenderAction("GetLinkBar", "Unit");
                }
            </div>

        </div>

                    }


    <script>

        var total = 0;
        var checkCount = 0;
        var totalRecCount = 0;

        function GridUpdate() {
            var ctrl =
                    $('<input />', {
                        type: 'checkbox',
                        id: "cbSelectAll",
                        click: function () {
                            var checkboxes = $(this).closest('table').find('tbody tr td input[type="checkbox"]');
                            checkboxes.prop('checked', $(this).is(':checked'));
                            var chk = checkboxes.prop('checked');
                            if (chk) {
                                var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
                                $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));
                                $("#iAdvance").attr("disabled", "disabled");

                            } else {
                                var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
                                $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));
                                $("#btnAdvanceAll").attr("disabled", "disabled");
                                $("#startDate").attr("disabled", "disabled");
                                $("#iAdvance").attr("disabled", "disabled");
                                totalRecCount = 0;

                            }
                            total = 0;
                            totalRecCount = 0;
                            $('.advanceAmount').each(function () {
                                var tr = $(this).parents('tr:first');
                                totalRecCount++;
                                if (document.getElementById('all').checked) {
                                    total = total + parseFloat(tr.find("#am").text().replace(',', ''));
                                    checkCount++;

                                    $(this).parents('tr').css('background', 'lightblue');
                                } else {
                                    checkCount = 0;
                                    total = 0;
                                    $(this).parents('tr').css('background', 'transparent');
                                }
                                document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                                if (checkCount > 0) {
                                    $("#btnAdvanceAll").removeAttr("disabled");
                                    $("#startDate").removeAttr("disabled");
                                    if (totalRecCount == 1) {
                                        SetTextBoxValues(tr);
                                    }
                                }

                            });
                            if (checkCount > 1) {
                                ClearTextBoxValues();
                            }
                            else if (checkCount == 0 || totalRecCount == 0) {
                                $("#btnAdvanceAll").attr("disabled", "disabled");
                                $("#startDate").attr("disabled", "disabled");
                                ClearTextBoxValues();
                            }

                        }
                    })


            var gg = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
            $('.gridtable thead tr th:first').html(gg.prepend(ctrl));


            $('.checkboxAll').change(function () {
                var tr = $(this).parents('tr:first');
                //var fullcost = parseFloat(tr.find("#am").text().replace(',', ''));
                //var numValue = Number.parseFloat(tr.find("#am").text());
                //alert(fullcost);
                var checked = tr.find("#all").is(':checked');
                if (checked) {
                    total = total + parseFloat(tr.find("#am").text().replace(',', ''));
                    checkCount++;
                    $(this).parents('tr').css('background', 'lightblue');
                } else {
                    total = total - parseFloat(tr.find("#am").text().replace(',', ''));
                    checkCount--;
                    $(this).parents('tr').css('background', 'transparent');
                }

                if (checkCount == 1) {

                    if (checked) {
                        SetTextBoxValues(tr);

                    } else {
                        $('.advanceAmount').each(function () {

                            var tr = $(this).parents('tr:first');
                            var checked = tr.find("#all").is(':checked');

                            if (checked) {
                                SetTextBoxValues(tr);
                            }
                        });
                    }
                    //document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                    $("#btnAdvanceAll").removeAttr("disabled");
                    $("#startDate").removeAttr("disabled");
                }
                else if (checkCount == 0) {
                    //document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ 0";
                    ClearTextBoxValues();
                    $("#btnAdvanceAll").attr("disabled", "disabled");
                    $("#startDate").attr("disabled", "disabled");
                    $("#iAdvance").attr("disabled", "disabled");
                    $("#someID span").html('Select')

                }
                else {
                    ClearTextBoxValues();
                    //document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                }

                if (checkCount > 0) {
                    var chkText = $('<div />').attr({ id: 'someID' }).html(' <span> Select </span>');
                    $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                    //ChangeCheckBoxText('select ');

                    var totalRows = $("#checkableGrid td :checkbox").length;
                    var checked = $("#checkableGrid td :checkbox:checked").length;

                    if (checked == totalRows) {
                        var chkText = $('<div />').attr({ id: 'someID' }).html('<span>  Deselect </span>');
                        $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                    }
                }

            });
        }

        $(function () {
            GridUpdate();
        });

        $(document).on('click', 'tbody', (function (e) {
            var target = $(e.target);
            if (target.parents('#checkableGrid').length) {
                var $td = $(e.target).closest("td");
                var rowIndex = $td.parent().index();
                rowIndex += 1;
                var ColIndex = $td.parent().children().index($td);
                var table = document.getElementById("checkableGrid");
                var row = $("tr:eq(" + rowIndex + ")", '#checkableGrid');
                //ClearLabelMessages();

                if (ColIndex != 0) {

                    var checked = row.find("#all").prop('checked');
                    if (!checked) {
                        row.find("#all").prop('checked', true);
                        row.css('background', 'lightblue');

                        checkCount++;
                        total = total + parseFloat(row.find("#am").text().replace(',', ''));

                        if (checkCount == 1) {
                            SetTextBoxValues(row);
                        }
                        else {
                            SetRadioBtnHeaderChecked();
                            ClearTextBoxValues();
                        }
                        //document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;

                        $("#btnAdvanceAll").removeAttr("disabled");
                        $("#startDate").removeAttr("disabled");
                    }
                } else {
                    SetRadioBtnHeaderChecked();
                }
            }
        }));

        $(document).ready(function () {
            $("#content tbody tr").each(function (i, row) {
                var $actualRow = $(row);
                if ($actualRow.find('input[type=checkbox]').prop('checked') == true) {
                    $actualRow.css('background-color', '#EAF2D3');
                }
                else {
                    $actualRow.css('background-color', '#FF9E9E');
                }
            });
        });

        $("#btnClear").click(function () {

            ClearSearchRelatedData();
        });

        function ClearSearchRelatedData() {
            //document.getElementById("form").reset();
            $("#identificationNumberSearch").val('');
            $('#cmbYear').val('');
            $("#cmbMake").val('');
            $("#cmbModel").val('');
            $("#noDataLabelDiv").hide();
            $("#searchGrid1").hide();

        }

        function ClearTextBoxValues() {
            $('#iVin').val('');
            $('#iYear').val('');
            $('#iMake').val('');
            $('#iModel').val('');
            $('#iCost').val('');
            $('#iBalance').val('');
            $('#iUnitId').val('');
            //$("#singleUnitDiv").hide();
        }

        function SetTextBoxValues(tr) {
            $('#iVin').val(tr.find("#vin").text());
            $('#iYear').val(tr.find("#year").text());
            $('#iMake').val(tr.find("#make").text());
            $('#iModel').val(tr.find("#model").text());
            $('#iCost').val(tr.find("#cost").text());
            $('#iBalance').val(tr.find("#balance").text().replace(',', ''));
            $('#iUnitId').val(tr.find("#all").val());
            //document.getElementById("unitid").innerHTML = tr.find("#all").val();
            $("#singleUnitDiv").show();

        }

        $("#btnPay").click(function () {
            var hiddenId = document.getElementById('iUnitId').value;
            var payDate = document.getElementById('payDate').value;
            var data = { unitIdList: [], payDate }
            data.payDate = payDate;
            if (hiddenId === '') {
                data.unitIdList.push(hiddenId);
            } else {
                //alert('Hi');
                $('table#checkableGrid > tbody > tr').each(function () {
                    
                    var isChecked = $(this).find("#all").is(':checked');
                    if (isChecked === true) {
                        var unitId = $(this).find("#all").val();
                        data.unitIdList.push(unitId);
                    }

                });
            }
            //alert(data.unitIdList[0]);
            $.ajax({
                url: '/UnitPayOff/UnitListPay/',
                data: JSON.stringify(data),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (View) {
                    //if (View != '2') {
                    //    $(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                    //} else {
                    //    $(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                    //}
                }
            });

        });

        $("#btnSearch").click(function() {
            ClearTextBoxValues();

            total = 0;
            checkCount = 0;
            //$("#btnAdvance").attr("disabled", "disabled");
            //$("#btnAdvanceAll").attr("disabled", "disabled");
            //$("#advanceDate").attr("disabled", "disabled");
            //$("#startDate").attr("disabled", "disabled");
            //$("#iAdvance").attr("disabled", "disabled");

            var count = 0;
            $("#checkableGrid").find("input:checkbox").each(function() {
                this.checked = false;
                if (count > 0) {
                    $(this).parents('tr').css('background', 'transparent');
                }
                count++;
            });
            document.getElementById('all').checked = false;
            //document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;

            $("#someID span").html('Select');
            $("#tagscloud span").html('');
            //$('#iAdvance').removeClass('input-validation-error');
            var para1 = $("#identificationNumberSearch").val();
            var para2 = $('#cmbYear').val();
            var para3 = $("#cmbMake").val();
            var para4 = $("#cmbModel").val();
            if (para1 == null) {
                para1 = '';
            }
            if (($("#identificationNumberSearch").val() != '') || ($('#cmbYear').val() != '') || ($('#cmbMake').val() != '') || ($("#cmbModel").val() != '')) {
                Search(para1, para2, para3, para4);
            }


        });
        function Search(para1, para2, para3, para4) {
        $.ajax({
            url: '/UnitPayOff/SearchUnit',
            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify({ identificationNumber: para1, year: para2, make: para3, vehicleModel: para4 }),
            success: function (View) {
                $('#searchGrid1').html(View);
                $('#searchGrid1').show();
            },
            error: function (reponse) {
                $('#loadingSpan').hide();
                alert("error : " + reponse);
            }
        });
    }
        function SetRadioBtnHeaderChecked() {
            var totalRows = $("#checkableGrid td :checkbox").length;
            var checked = $("#checkableGrid td :checkbox:checked").length;

            if (checked == totalRows) {
                var chkText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
                $("#checkableGrid").find("input:checkbox").each(function () {
                    this.checked = true;
                });
                $("#someID span").html('Deselect');
            }
            else {

                $("#cbSelectAll").removeAttr("checked");
            }

        }

        function ChangeCheckBoxText(value) {
            var chkText = $('<div />').attr({ id: 'someID' }).html(value);
            $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
        }


        $("#lkpoff").before($(".link")).addClass('active').attr("disabled", "disabled").css('cursor', 'default').css('opacity', 'initial').siblings().removeClass('active').removeAttr('disabled');
        $("#lkpoff").click(function (e) { e.preventDefault(); });
        $("#lkpoff").siblings().click(function (e) {
            return true;

        });


        // Change the selector if needed
        var table = $('table'),
            bodyCells = table.find('tbody tr:first').children(),
            colWidth;

        // Adjust the width of thead cells when window resizes
        $(window).resize(function () {
            // Get the tbody columns width array
            colWidth = bodyCells.map(function () {
                return $(this).width();
            }).get();

            // Set the width of thead columns
            table.find('thead tr').children().each(function (i, v) {
                $(v).width(colWidth[i]);
            });
        }).resize(); // Trigger resize handler  

        $(window).bind("load", function () {

            // Get the tbody columns width array
            colWidth = bodyCells.map(function () {
                return $(this).width();
            }).get();

            // Set the width of thead columns
            table.find('thead tr').children().each(function (i, v) {
                $(v).width(colWidth[i]);
            });
        }).resize();

        $(document).ready(function () {

            if ($('#checkableGrid').children('tbody').children('tr').length == 0) {
                $("#checkableGridDiv").hide();
                //$("#advanceAllDiv").hide();
                $("#searchDiv").hide();
                $("#searchGrid1").hide();
                //$("#unitDetailDiv").hide();
                $("#noDataLabelDiv").hide();
                $("#noUnitLabelDiv").show();
                $("#searchLabelDiv").hide();

            }
            else if (($('#checkableGrid').children('tbody').children('tr').length > 0) && ($('#searchResultGrid').children('tbody').children('tr').length > 0)) {
                $("#checkableGridDiv").show();
                //$("#advanceAllDiv").show();
                $("#searchDiv").show();
                $("#searchGrid1").show();
                //$("#unitDetailDiv").show();
                $("#noDataLabelDiv").hide();
                $("#noUnitLabelDiv").hide();
                $("#searchLabelDiv").show();
            }
            else if (($('#checkableGrid').children('tbody').children('tr').length > 0) && ($('#searchResultGrid').children('tbody').children('tr').length == 0)) {
                $("#checkableGridDiv").show();
                //$("#advanceAllDiv").show();
                $("#searchDiv").show();
                //$("#unitDetailDiv").show();
                $("#searchGrid1").hide();
                $("#noDataLabelDiv").show();
                $("#noUnitLabelDiv").hide();
                $("#searchLabelDiv").show();
            }

        });
    </script>
</body>
</html>
