@model BankLoanSystem.Models.CurtailmentScheduleModel

@{ 
    Layout = null;
    WebGrid grid = new WebGrid(Model.CurtailmentScheduleInfoModel, defaultSort: "CreatedDate", canPage: false);
}

<style>

#checkableGridDiv table tbody,
#checkableGridDiv table thead { display: block; }



#checkableGridDiv table tbody {
    max-height: 300px;
    overflow-y: auto;
    overflow-x: hidden;
}
</style>
<div  class="info-bar" id ="checkableGridDiv"style="margin-top:10px;padding:unset">
                            <div>
                                @grid.GetHtml(
                                   tableStyle: "gridtable",
                                   headerStyle: "webgrid-header",
                                   alternatingRowStyle: "webgrid-alternating-row",
                                   rowStyle: "webgrid-row-style",
                                   htmlAttributes: new { id = "checkableGrid" },
                                   columns: grid.Columns(
                                   grid.Column(
                                        format:@<text><input type="checkbox" value="@item.UnitId" name="ids" class="checkboxAll" id="all"/></text>
                                           , header: "{checkall}"
                                   ),
                                   //grid.Column(
                                   //     "AdvanceDate",
                                   //     "Date Advanced",
                                   //     format: (item) => string.Format("{0:MM/dd/yyyy}", item.AdvanceDate)
                                   //),
                                   grid.Column("AdvanceDate", "Date Advanced", format:@<text>@{<label id="dateAdvance" class="dateAdvance">@item.AdvanceDate</label>}</text>),
                                   grid.Column("VIN/HIN/serial #", "VIN/HIN/serial #", canSort: false, format:@<text>@{<label id="vin" class="vin">@item.IDNumber</label>}</text>),
                                   grid.Column("Year", "Year", format:@<text>@{<label id="year" class="year">@item.Year</label>}</text>),
                                   grid.Column("Make", "Make", format:@<text>@{<label id="make" class="make">@item.Make</label>}</text>),
                                   grid.Column("Model", "Model", format:@<text>@{<label id="model" class="model">@item.Model</label>}</text>),
                                   grid.Column("CurtNumber", "Curt-Number", format:@<text>@{<label id="CurtNumber" class="CurtNumber">@item.CurtNumber</label>}</text>),
                                   grid.Column(
                                        "DueDate",
                                        "Due Date",
                                        format: (item) => string.Format("{0:MM/dd/yyyy}", item.DueDate)
                                   ),
                                   grid.Column("CurtAmount", "Curt-Amount ($)", canSort: false, style: "gridColumn", format:@<text>@{<label id="am" class="advanceAmount">@Convert.ToDecimal(item.CurtAmount).ToString("#,##0.00")</label><input type="hidden" id="curtailmentStatus" name="curtailmentStatus" value="@item.Status" />}</text>)
                                   
                                )
                            )
                         </div>
                        <span id="subtotal"> Current Total to Advance : $ 0  </span>
                        <span id="partialPaymentColor" style="margin-left:60%" hidden><label style="position :relative;width:20px;height:15px;background-color:#ffd699"></label> Part Payment Records</span>
                        <div id="unitid" class="hidden"></div>
                </div>
<script>

    
    // Change the selector if needed
    var table = $('table'),
        bodyCells = table.find('tbody tr:first').children(),
        colWidth;

    // Adjust the width of thead cells when window resizes
    $(window).resize(function() {
        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this).width();
        }).get();
    
        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).width(colWidth[i]);
        });    
    }).resize(); // Trigger resize handler  

    $(window).bind("load",function(){
    
        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this).width();
        }).get();
    
        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).width(colWidth[i]);
        });    
    });
</script>

<form method="post">
    <div class="info-bar" style="margin-top:15px">
        <div class="form-inline">
            <div class="form-group">
                
                <label for="">Pay Date : </label>
                @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "MM/DD/YYYY", @id = "payDate", autocomplete = "off", style = "margin-left:15px" } })
                @*<input class="form-control" type="date" style="margin-left:15px" />*@
            </div>
            <input type="button" id="payAll" class="btn btn-primary" style="margin-left:15px" value="Pay Curtailments on all selected" />
        </div>
    </div>
</form>


<div class="info-bar search-panel" style="margin-top:15px;">
    <div class="form-inline" style="margin-left:25px;">
        <div class="form-group">
            <label for="">VIN/HIN/Serial</label>

            @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control", @id = "identificationNumberSearch", @placeholder = "VIN/HIN/Serial", @maxlength = "20" } })
            @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })

        </div>

        <div class="form-group" style="margin-left:20px;">
            <label for="">Year</label>


            @{
                List<SelectListItem> yearList = new List<SelectListItem>();
                foreach (var CurtailmentSchedule in Model.CurtailmentScheduleInfoModel)
                {
                    if (!yearList.Exists(a => a.Value == CurtailmentSchedule.Year.ToString()) && CurtailmentSchedule.Year.ToString() != "")
                    {
                        yearList.Add(new SelectListItem { Text = CurtailmentSchedule.Year.ToString(), Value = CurtailmentSchedule.Year.ToString() });
                    }
                }
            }

            @Html.DropDownList("year", yearList, "-- select year --", new { @class = "form-control", @id = "cmbYear", style = "width:143px" })
                            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })

        </div>

        <div class="form-group" style="margin-left:20px;">
            <label for="">Make</label>

            @{List<SelectListItem> makeList = new List<SelectListItem>();
                foreach (var CurtailmentSchedule in Model.CurtailmentScheduleInfoModel)
                {
                    if (!makeList.Exists(a => a.Value == CurtailmentSchedule.Make.ToString()) && CurtailmentSchedule.Make.ToString() != "")
                    {
                        makeList.Add(new SelectListItem { Text = CurtailmentSchedule.Make.ToString(), Value = CurtailmentSchedule.Make.ToString() });
                    }
                }
            }

        
        @Html.DropDownList("make", makeList, "--select make--", new { @class = "form-control", @id = "cmbMake", style = "width:143px" })
        @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })

        </div>

        <div class="form-group" style="margin-left:20px;">
            <label for="">Model</label>

            @{List<SelectListItem> modelList = new List<SelectListItem>();
                foreach (var CurtailmentSchedule in Model.CurtailmentScheduleInfoModel)
                {
                    if (!modelList.Exists(a => a.Value == CurtailmentSchedule.Model.ToString()) && CurtailmentSchedule.Model.ToString() != "")
                    {
                        modelList.Add(new SelectListItem { Text = CurtailmentSchedule.Model.ToString(), Value = CurtailmentSchedule.Model.ToString() });
                    }
                }
            }
            @Html.DropDownList("model", modelList, "--select model--", new { @class = "form-control", @id = "cmbModel" })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })

        </div>


        
        <button type="button" id="btnClear" tabindex="-1" class="btn btn-default" style="margin-right:25px;float:right;">Clear</button>
        <button type="button" id="btnSearch" class="btn btn-info" style="margin-right:10px;float:right;">Search</button>
        
    </div>



</div>

<div id="searchGrid1" hidden>


</div>



<div class="info-bar reset" style="margin-top:15px" id="singleUnitDiv" hidden>


    <div class="row">
        <div class="col-xs-12">
            <form>
                <fieldset>
                    <div class="form-group row">
                        <div class="col-md-2" style="width:13%;">
                            <label for="">Date Advanced </label>
                            @Html.Editor("iDateAdvance", new { @id = "iDateAdvance", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                        <div class="col-md-2">
                            <label for="">Vin/HIN/Serial </label>
                            @Html.Editor("iVin", new { @id = "iVin", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                        <div class="col-md-2" style="width:13%;">
                            <label for="firstName">Year </label>
                            @Html.Editor("iYear", new { @id = "iYear", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                        <div class="col-md-2" style="width:13%;">
                            <label for="">Make </label>
                            @Html.Editor("iMake", new { @id = "iMake", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                        <div class="col-md-2" style="width:13%;">
                            <label for="firstName">Model </label>
                            @Html.Editor("iModel", new { @id = "iModel", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                        <div class="col-md-2">
                            <label for="">Curt-Amount </label>
                            @Html.Editor("iAdvance", new { @id = "iAdvance", htmlAttributes = new { @class = "form-control", @disabled = "disabled", style = "text-align:right;" } })
                        </div>
                        <div class="col-md-2" style="width:13%;">
                            <label for="">Curt Pay Date </label>
                            @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "MM/DD/YYYY", @id = "payCurtDate", autocomplete = "off" } })
                            @Html.Hidden("iCurtNumber", "" , new { @id = "iCurtNumber" } )
                            @Html.Hidden("iUnitID", "", new { @id = "iUnitID" })
                        </div>
                    </div>




                    <input type="button" value="Cancel" id="btnCancel" tabindex="-1" class="btn btn-default cancel btn-right" style="float:right; margin-right:31px;margin-left:147px;width:130px" />

                    <input type="submit" name="Pay" value="Pay" id="btnPay" class="btn btn-info btn-center" style="float:left;width:130px;margin-left:31px" disabled />


                </fieldset>
            </form>
        </div>
    </div>



</div>



<script>
            
            var total = 0;
            var checkCount = 0;
            var totalRecCount = 0;

            $(function () {
                GridUpdate();
            });

            function GridUpdate() {
                var ctrl =
                        $('<input />', {
                            type: 'checkbox',
                            id: "cbSelectAll",
                            click: function () {
                                var checkboxes = $(this).closest('table').find('tbody tr td input[type="checkbox"]');
                                checkboxes.prop('checked', $(this).is(':checked'));
                                var chk = checkboxes.prop('checked');

                                if (chk) {
                                    var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
                                    $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));
                                    $("#iAdvance").attr("disabled", "disabled");

                                } else {
                                    var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
                                    $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));
                                    $("#btnAdvanceAll").attr("disabled", "disabled");
                                    $("#startDate").attr("disabled", "disabled");
                                    $("#iAdvance").attr("disabled", "disabled");
                                    totalRecCount = 0;

                                }
                                total = 0;
                                totalRecCount = 0;
                               // $('.advanceAmount').each(function () {
                                $('#checkableGrid').find('.advanceAmount') .each(function () {
                                    var tr = $(this).parents('tr:first');
                                    
                                    totalRecCount++;
                                    if (document.getElementById('all').checked) {
                                        total = total + parseFloat(tr.find("#am").text().replace(',', ''));
                                        checkCount++;
                                        if (tr.find("#curtailmentStatus").val() === '2') {
                                            $(this).parents('tr').css('background', '#ffcc80');  $('#partialPaymentColor').show();                   
                                        }else{
                                            $(this).parents('tr').css('background', 'lightblue');
                                        }
                                       
                                    } else {
                                        checkCount = 0;
                                        total = 0;
                                        if (tr.find("#curtailmentStatus").val() === '2') {
                                            $(this).parents('tr').css('background', '#ffe0b3'); $('#partialPaymentColor').show();                    
                                        }else{
                                            $(this).parents('tr').css('background', 'transparent');
                                        }
                                        
                                    }
                                    document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                                    if (checkCount > 0) {
                                        $("#btnAdvanceAll").removeAttr("disabled");
                                        $("#startDate").removeAttr("disabled");
                                        if (totalRecCount == 1) {
                                            SetTextBoxValues(tr);
                                        }
                                    }

                                });
                                if (checkCount > 1) {
                                    ClearTextBoxValues();
                                }
                                else if (checkCount == 0 || totalRecCount == 0) {
                                    $("#btnAdvanceAll").attr("disabled", "disabled");
                                    $("#startDate").attr("disabled", "disabled");
                                    ClearTextBoxValues();
                                }
                                changePartialPaymentRowColor();
                            }
                        })


                var gg = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
                $('.gridtable thead tr th:first').html(gg.prepend(ctrl));


                $('.checkboxAll').change(function () {
                    var tr = $(this).parents('tr:first');
                    var checked = tr.find("#all").is(':checked');

                    if (checked) {
                        total = total + parseFloat(tr.find("#am").text().replace(',', ''));
                        checkCount++;
                        if (tr.find("#curtailmentStatus").val() === '2') {
                            $(this).parents('tr').css('background', '#ffcc80'); //checked color of partial payment 
                            $('#partialPaymentColor').show();                           
                        }else{
                            $(this).parents('tr').css('background', 'lightblue');
                        }


                    } else {
                        total = total - parseFloat(tr.find("#am").text().replace(',', ''));
                        checkCount--;
                        if (tr.find("#curtailmentStatus").val() === '2') {
                            $(this).parents('tr').css('background', '#ffe0b3'); //not checked color of partial payment  
                            $('#partialPaymentColor').show();
                        }else{
                            $(this).parents('tr').css('background', 'transparent');
                        }
                       
                    }

                    if (checkCount == 1) {
                        if (checked) {
                            SetTextBoxValues(tr);

                        } else {
                            $('.advanceAmount').each(function () {

                                var tr = $(this).parents('tr:first');
                                var checked = tr.find("#all").is(':checked');

                                if (checked) {
                                    SetTextBoxValues(tr);
                                }

                            });
                        }
                        document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                        $("#btnAdvanceAll").removeAttr("disabled");
                        $("#startDate").removeAttr("disabled");
                    }
                    else if (checkCount == 0) {
                        document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ 0";
                        ClearTextBoxValues();
                        $("#btnAdvanceAll").attr("disabled", "disabled");
                        $("#startDate").attr("disabled", "disabled");
                        $("#iAdvance").attr("disabled", "disabled");
                        $("#someID span").html('Select')

                    }
                    else {
                        
                        ClearTextBoxValues();
                        document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;
                        
                    }

                    if (checkCount > 0) {
                        var chkText = $('<div />').attr({ id: 'someID' }).html(' <span> Select </span>');
                        $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));

                        var totalRows = $("#checkableGrid td :checkbox").length;
                        var checked = $("#checkableGrid td :checkbox:checked").length;

                        if (checked == totalRows) {
                            var chkText = $('<div />').attr({ id: 'someID' }).html('<span>  Deselect </span>');
                            $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                        }
                    }
                    $('.advanceAmount').each(function () {
                        var tr = $(this).parents('tr:first');
                        if (tr.find("#curtailmentStatus").val() === '2' && tr.find("#all").is(':checked')) {
                            $(this).parents('tr').css('background', '#ffcc80');//checked color of partial payment    
                        }
                    });
                });
            }

            $(document).ready(function () {
                changePartialPaymentRowColor();
            });

            function changePartialPaymentRowColor() {
                $('.advanceAmount').each(function () {
                    var tr = $(this).parents('tr:first');
                    if (tr.find("#curtailmentStatus").val() === '2') {
                        $(this).parents('tr').css('background', '#ffe0b3');     //not checked color of partial payment    
                        $('#partialPaymentColor').show();
                    }
                });
            }

            $(document).on('click', 'tbody', (function (e) {
                var target = $(e.target);
                if (target.parents('#checkableGrid').length) {

                    var $td = $(e.target).closest("td");
                    var rowIndex = $td.parent().index();
                    rowIndex += 1;
                    var ColIndex = $td.parent().children().index($td);
                    var table = document.getElementById("checkableGrid");
                    var row = $("tr:eq(" + rowIndex + ")", '#checkableGrid');
                    ClearLabelMessages();

                    if (ColIndex != 0) {

                        var checked = row.find("#all").prop('checked');
                        if (!checked) {
                            row.find("#all").prop('checked', true);
                            row.css('background', 'lightblue');

                            checkCount++;
                            total = total + parseFloat(row.find("#am").text().replace(',', ''));

                            if (checkCount == 1) {
                                SetTextBoxValues(row);
                            }
                            else {
                                SetRadioBtnHeaderChecked();
                                ClearTextBoxValues();
                            }
                            document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;

                            $("#btnAdvanceAll").removeAttr("disabled");
                            $("#startDate").removeAttr("disabled");
                        }
                    } else {
                        SetRadioBtnHeaderChecked();
                    }
                    changePartialPaymentRowColor();
                }
            }));

            function SetRadioBtnHeaderChecked() {
                var totalRows = $("#checkableGrid td :checkbox").length;
                var checked = $("#checkableGrid td :checkbox:checked").length;

                if (checked == totalRows) {
                    var chkText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
                    $("#checkableGrid").find("input:checkbox").each(function () {
                        this.checked = true;
                    });
                    $("#someID span").html('Deselect');
                }
                else {

                    $("#cbSelectAll").removeAttr("checked");
                }

            }

            function ChangeCheckBoxText(value) {
                var chkText = $('<div />').attr({ id: 'someID' }).html(value);
                $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
            }


            $("#btnSearch").click(function () {

                ClearTextBoxValues();
                
                total = 0;
                checkCount = 0;
                $("#btnAdvance").attr("disabled", "disabled");
                $("#btnAdvanceAll").attr("disabled", "disabled");
                $("#advanceDate").attr("disabled", "disabled");
                $("#startDate").attr("disabled", "disabled");
                $("#iAdvance").attr("disabled", "disabled");
                ClearMainGrid();
                //var count = 0;
                //$("#checkableGrid").find("input:checkbox").each(function () {
                //    this.checked = false;
                //    if (count > 0) {
                //        $(this).parents('tr').css('background', 'transparent');
                //    }
                //    count++;
                //});
                document.getElementById('all').checked = false;
                document.getElementById("subtotal").innerHTML = "Current Total to Advance : $ " + total;

                $("#someID span").html('Select');
                $("#tagscloud span").html('');
                $('#iAdvance').removeClass('input-validation-error');
                var para1 = $("#identificationNumberSearch").val();
                var para2 = $('#cmbYear').val();
                var para3 = $("#cmbMake").val();
                var para4 = $("#cmbModel").val();
                if (para1 == null) { para1 = ''; }
                if (($("#identificationNumberSearch").val() != '') || ($('#cmbYear').val() != '') || ($('#cmbMake').val() != '') || ($("#cmbModel").val() != '')) {
                    Search(para1, para2, para3, para4);
                }


            });

            function ClearTextBoxValues() {
                $('#ivin').val('');
                $('#iVin').val('');
                $('#iYear').val('');
                $('#iMake').val('');
                $('#iModel').val('');
                $('#iCost').val('');
                $('#iAdvance').val('');
                $("#btnAdvance").attr("disabled", "disabled");
                //$("#btnAdvanceAll").removeAttr("disabled");
                $("#advanceDate").attr("disabled", "disabled");
                //$("#startDate").removeAttr("disabled");
                $("#singleUnitDiv").hide();
            }

            $('#identificationNumberSearch').focusout(function () {
                $(this).attr('placeholder', 'VIN/HIN/Serial No');
            });

            function ClearTextBoxValues() {
                $('#iDateAdvance').val('');
                $('#ivin').val('');                
                $('#iYear').val('');
                $('#iMake').val('');
                $('#iModel').val('');
                $('#iAdvance').val('');
                $("#btnAdvance").attr("disabled", "disabled");
                $("#advanceDate").attr("disabled", "disabled");
                $("#singleUnitDiv").hide();
            }

            function SetTextBoxValues(tr) {      
               
                $('#iVin').val(tr.find("#vin").text());
                $('#iYear').val(tr.find("#year").text());
                $('#iMake').val(tr.find("#make").text());
                $('#iModel').val(tr.find("#model").text());
                $('#iDateAdvance').val(tr.find("#dateAdvance").text());
                $('#iAdvance').val(tr.find("#am").text().replace(',', ''));
                document.getElementById("unitid").innerHTML = tr.find("#all").val();
                @if(ViewBag.loanDetails.isEditAllowable == true)
                {
                    <text> $('#iAdvance').removeAttr('disabled'); </text>
                }
                
                $("#btnAdvance").removeAttr("disabled");
                $("#advanceDate").removeAttr("disabled");               
                $("#singleUnitDiv").show();               
            }

            function ClearLabelMessages() {
                $('#noDataLabelDiv').text("");
                $('.label-success').text("");
            }

            @*var advDatePicker = new Pikaday({
                field: document.getElementById('advanceDate'),
                format: 'l'


            });

            advDatePicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
            advDatePicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));*@


            function Search(para1, para2, para3, para4) {

                var curtList = @Html.Raw(Json.Encode(Model));
                
                $.ajax({
                    url: '/Curtailments/SearchCurtailment',
                    type: 'POST',
                    contentType: 'application/json;',
                    data: JSON.stringify({ identificationNumber: para1, year: para2, make: para3, vehicleModel: para4, CurtailmentList: curtList }),
                    success: function (View) {
                        $('#searchGrid1').html(View);
                        $('#searchGrid1').removeAttr('hidden');
                        $('#searchGrid1').show();
                        changePartialPaymentRowColor();
                        // Change the selector if needed
                        var table = $('table'),
                            bodyCells = table.find('tbody tr:first').children(),
                            colWidth;

                        colWidth = bodyCells.map(function () {
                            return $(this).width();
                        }).get();

                        // Set the width of thead columns
                        table.find('thead tr').children().each(function (i, v) {
                            $(v).width(colWidth[i]);
                        });

                    },
                    error: function (reponse) {

                        alert("error : " + reponse);
                    }
                });
            }

    $("#btnClear").click(function () {
       
        ClearSearchRelatedData();
    });

    
    function ClearMainGrid() {
        var count = 0;
        $("#checkableGrid").find("input:checkbox").each(function () {
            this.checked = false;
            if (count > 0) {
                $(this).parents('tr').css('background', 'transparent');

            }
            count++;
        });

        changePartialPaymentRowColor();
    }




    payPicker = new Pikaday({
        field: document.getElementById('payDate'),
        format: 'l',

        bound: true,
        onSelect: function () {
            var thisDate = this.getDate();
            $("#payCurtDate").val(formatDate(thisDate));
        }
    });

    payPicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
    payPicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));
    $("#payDate").val("");
    payPicker.gotoDate(new Date('@DateTime.Today.ToString("d")'));


    payCurtPicker = new Pikaday({
        field: document.getElementById('payCurtDate'),
        format: 'l',

        bound: true,
        onSelect: function () {
            var thisDate = this.getDate();
            $("#payDate").val(formatDate(thisDate));
        }
    });

    payCurtPicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
    payCurtPicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));
    $("#payCurtDate").val("");
    payCurtPicker.gotoDate(new Date('@DateTime.Today.ToString("d")'));


    function formatDate(value)
    {
       
        return value.getMonth()+1 + "/" + value.getDate() + "/" + value.getFullYear();
    }


    $('#payAll').click(function () {

        if($("#payDate").val() == ""){
            // show error
            return;
        }
        if (checkCount >= 1) {
            var data = { SelectedCurtailmentSchedules: [] };
            $('.advanceAmount').each(function () {
                var tr = $(this).parents('tr:first');
                var checked = tr.find("#all").is(':checked');
                if (checked) {
                    data.SelectedCurtailmentSchedules.push({ UnitId: tr.find("#all").val(), IDNumber: tr.find("#vin").text(), CurtNumber: tr.find("#CurtNumber").text(), PayDate: $('#payDate').val(), CurtAmount: $('#am').text().replace(',', '') });

                }
            });
            
            //alert(data.SelectedCurtailmentSchedules.length);
            $.ajax({
                url: '/Curtailments/PayCurtailments/',
                data: JSON.stringify(data),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',

                success: function (View) {

                    //$(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                    if(View == "1"){
                        alert('Success');
                    }
                   
                }
            });
        }

    });

    $('#btnPay').click(function (e) {

        //if ($("#tagscloud span").text() != "") {
        //    // show error
        //    return;
        //}

         if ($('#iVin').val() != '') {
                    
            var unit = {
                "UnitId": $('#unitid').text(),
                "IdentificationNumber": $('#iVin').val(),
                "AdvanceAmount": $('#iAdvance').val().replace(',', ''),
                "AdvanceDate": $('#advanceDate').val(),
                "Cost": $('#iCost').val().replace(',', '')
            };

            if($("#payDate").val() == ""){
                // show error
                return;
            }
          
            var data = { SelectedCurtailmentSchedules: [] }; 
               
            data.SelectedCurtailmentSchedules.push({ UnitId: $('#iUnitID').val(), IDNumber: $('#iVin').val(), CurtNumber: $("#iCurtNumber").text(), PayDate: $('#payDate').val(), CurtAmount: $('#iAdvance').text().replace(',', '') });

                    
            
                //alert(data.SelectedCurtailmentSchedules.length);
                $.ajax({
                    url: '/Curtailments/PayCurtailments/',
                    data: JSON.stringify(data),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',

                    success: function (View) {

                        //$(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                        if(View == "1"){
                            alert('Success');
                        }
                   
                    }
                });
            
        }
    });
    </script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
