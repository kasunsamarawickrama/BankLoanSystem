@model BankLoanSystem.Models.CurtailmentScheduleModel

@{ 
    Layout = null;
    WebGrid grid = new WebGrid(Model.CurtailmentScheduleInfoModel, defaultSort: "CreatedDate", canPage: false, ajaxUpdateContainerId: "checkableGridDiv", ajaxUpdateCallback: "GridUpdate");


}
@using System.Threading;
@using System.Globalization;


@if (Model.CurtailmentScheduleInfoModel.Count == 0)
{
    <div id="noCurtLabelDiv" class="info-bar" style="margin-top:10px;padding:unset; color:red;" hidden>
        @*@Html.Label("No Curtailments matching the date could be found.", htmlAttributes: new { @class = "control-label col-sm-8", @style = "float:unset;margin-top:2%;margin-bottom:2%;" })*@
        <label style="float:unset;margin-top:2%;margin-bottom:2%">No Curtailments matching the due date could be found.</label>
    </div>
}
else
{


<div class="info-bar" id="checkableGridDiv" style="margin-top: 10px; padding: 1px 0px 30px 0px">
                            <div>
                                <span class="icon-help_outline help-select" style="float:left"></span>
                                @grid.GetHtml(
            tableStyle: "gridtable",
            headerStyle: "webgrid-header",
            alternatingRowStyle: "webgrid-alternating-row",
            rowStyle: "webgrid-row-style",
htmlAttributes: new { id = "checkableGrid" },
            columns: grid.Columns(
            grid.Column(style: "gridColumnSelect",
                 format:@<text><input type="checkbox" value="@item.UnitId" name="ids" class="checkboxAll" id="all"/></text>
                    , header: "{checkall}"
            ),
            //grid.Column(
            //     "AdvanceDate",
            //     "Date Advanced",
            //     format: (item) => string.Format("{0:MM/dd/yyyy}", item.AdvanceDate)
            //),
            grid.Column("AdvanceDate", "Date Advanced", style: "gridColumnOthers", format:@<text>@{<label id="dateAdvance" class="dateAdvance">@item.AdvanceDate</label>}</text>),
            grid.Column("VIN/HIN/serial #", "VIN/HIN/serial #", style: "gridColumnVIN", canSort: false, format:@<text>@{<label id="vin" class="vin">@item.IDNumber</label>}</text>),
            grid.Column("Year", "Year", style: "gridColumnOthers", format:@<text>@{<label id="year" class="year">@item.Year</label>}</text>),
            grid.Column("Make", "Make", style: "gridColumnOthers", format:@<text>@{<label id="make" class="make">@item.Make</label>}</text>),
            grid.Column("Model", "Model", style: "gridColumnOthers", format:@<text>@{<label id="model" class="model">@item.Model</label>}</text>),
            grid.Column("CurtNumber", "Curt-No", style: "gridColumnSmall", format:@<text>@{<label id="CurtNumber" class="CurtNumber">@item.CurtNumber</label>}</text>),
            grid.Column(
                 "DueDate",
                 "Due Date", style: "gridColumnOthers",
                 format: (item) => string.Format("{0:MM/dd/yyyy}", item.DueDate)
            ),
grid.Column("CurtAmount", "Curt-Amount ($)", canSort: false, style: "gridColumn", format:@<text>@{<label id="am" class="curtAmount">@Convert.ToDecimal(item.CurtAmount).ToString("#,##0.00")</label>
                                                                                                                    <input type="hidden" id="curtailmentStatus" name="curtailmentStatus" value="@item.Status"/>}</text>)

         )
     )
                         </div>
    
                        <div>
                           
        
        <span id="subtotal" style="margin-right: 42px; float: right; text-align: right; font-weight: bold;"> Current Curtailment Total : $ 0.00  </span><br />
                            <span id="partialPaymentColor"  style="margin-right: 42px;margin-top:4px; float: right; text-align: right; font-weight: bold;" hidden><span style="color: #ecb764;" class="icon-droplet"></span> Part Payment Records</span>
                        </div>
                        
                        <div id="unitid" class="hidden"></div>
                </div>
}
<script>

    
    // Change the selector if needed
    var table = $('table'),
        bodyCells = table.find('tbody tr:first').children(),
        colWidth;

    // Adjust the width of thead cells when window resizes
    $(window).resize(function() {
        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this)[0].getBoundingClientRect().width;
        }).get();
    
        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).outerWidth(colWidth[i]);
        });    
    }).resize(); // Trigger resize handler  

    $(window).bind("load",function(){
    
        // Get the tbody columns width array
        colWidth = bodyCells.map(function() {
            return $(this)[0].getBoundingClientRect().width;
        }).get();
    
        // Set the width of thead columns
        table.find('thead tr').children().each(function(i, v) {
            $(v).outerWidth(colWidth[i]);
        });    
    });
</script>
@if (Model.CurtailmentScheduleInfoModel !=null && Model.CurtailmentScheduleInfoModel.Count > 0)
{
<form method="post">
    <div class="info-bar" style="margin-top:15px" id="payDateDiv">
        <div class="form-inline">
            <div style="text-align: left">

                <label>Curtailment Payment Date  <span class="icon-help_outline help-date1"></span></label>
                @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @class = "form-control dateKeyPressValidate", @placeholder = "MM/DD/YYYY", @id = "payDate", autocomplete = "off", style = "margin-left:15px;width:165px", @disabled = "disabled", maxlength = 10 } })
                @*@Html.ValidationMessageFor(model => model.PayDate, "", new { @class = "text-danger"  , style="left:25%" })*@
                <span class="text-danger field-validation-error" id="errorPayDate" style="left: 28%;margin-top: 35px;width: 14%;"></span>
                
                <div style="display: inline-table;margin-left: 13px;"><input type="checkbox" id="report" value="Report" style="margin-right:3px;width:16px;height:16px" /><label>Print a report of the transactions being submitted at this time <span class="icon-help_outline help-print"></span></label><br />
<input type="checkbox" id="emailReceipt" value="email" style="margin-right:3px;width:16px;height:16px"/><label>Email a report of the transactions being submitted at this time to the dealer <span class="icon-help_outline help-email"></span></label>
                <div id="receiptEmail" hidden>
                    <label>email address</label> <input type="text" class="form-control" id="emailAdress" />
    <span class="text-danger field-validation-error" id="errorEmail" style="margin-top: 6px;margin-left:2px;"></span>
</div></div>
                
                </div>
            
            
        </div><input type="button" id="payAll" class="btn btn-primary m-b next_clear_button next_back" style="width: 245px;margin-left: 115px;" value="Pay Curtailments on all selected" disabled />
        </div>
</form>


<div class="info-bar search-panel" style="margin-top:15px;" id="searchDiv">
    <span class="icon-help_outline help-search" style="float:left;margin-left: -7px;"></span>
    
    <div class="row">
        <div class="col-xs-12" style="padding:unset;">
            <form>
                <fieldset>
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label for="">VIN/HIN/Serial</label>

                            @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control", @id = "identificationNumberSearch", @placeholder = "Last 6 of VIN/HIN/SN", @maxlength = "6", @Style = "width:165px" } })
                            @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })

                            <span class="text-danger field-validation-error" id="searchIdentificationNumber" style="width:205px"></span>

                        </div>
                        <div class="col-md-2" id="div-combobox1-1" style="margin-left:26px">
                            <label for="">Year</label>
                            @{
                                List<SelectListItem> yearList = new List<SelectListItem>();
                                foreach (var CurtailmentSchedule in Model.CurtailmentScheduleInfoModel)
                                {
                                    if (!yearList.Exists(a => a.Value == CurtailmentSchedule.Year.ToString()) && CurtailmentSchedule.Year.ToString() != "")
                                    {
                                        yearList.Add(new SelectListItem { Text = CurtailmentSchedule.Year.ToString(), Value = CurtailmentSchedule.Year.ToString() });
                                    }
                                }
                                yearList = yearList.OrderBy(s => s.Value).ToList();
                            }
                                    @Html.DropDownList("year", yearList, "-- select year --", new { @class = "form-control", @id = "cmbYear", style = "width:143px" })
                                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-2" id="div-combobox1-2">
                            <label for="">Make</label> @{List<SelectListItem> makeList = new List<SelectListItem>();
                                foreach (var CurtailmentSchedule in Model.CurtailmentScheduleInfoModel)
                                {
                                    if (!makeList.Exists(a => a.Value == CurtailmentSchedule.Make.ToString()) && CurtailmentSchedule.Make.ToString() != "")
                                    {
                                        makeList.Add(new SelectListItem { Text = CurtailmentSchedule.Make.ToString(), Value = CurtailmentSchedule.Make.ToString() });
                                    }
                                }
                                makeList = makeList.OrderBy(s => s.Value).ToList();
                            }

                                    @Html.DropDownList("make2", makeList, "--select make--", new { @class = "form-control", @id = "cmbMake", style = "width:143px" })
                                    @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-2" id="div-combobox1-3">
                            <label for="">Model</label>
                            @{List<SelectListItem> modelList = new List<SelectListItem>();
                                foreach (var CurtailmentSchedule in Model.CurtailmentScheduleInfoModel)
                                {
                                    if (!modelList.Exists(a => a.Value == CurtailmentSchedule.Model.ToString()) && CurtailmentSchedule.Model.ToString() != "")
                                    {
                                        modelList.Add(new SelectListItem { Text = CurtailmentSchedule.Model.ToString(), Value = CurtailmentSchedule.Model.ToString() });
                                    }
                                }
                                modelList = modelList.OrderBy(s => s.Value).ToList();
                            }

                                    @Html.DropDownList("model2", modelList, "--select model--", new { @class = "form-control", @id = "cmbModel", @style = "width: 117%;" })
                                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })



                        </div>
                        <button type="button" class="btn btn-primary m-b cancel next_clear_button back_back" id="btnSearch" >Search</button>
                        <button type="button" class="btn btn-primary m-b next_clear_button clear_back" id="btnClear" tabindex="-1" >Clear</button>
                    </div>
                </fieldset>
            </form>
        </div>
    </div>

</div>

<div id="searchGrid1" hidden>


</div>



<div class="info-bar reset" style="margin-top: 15px" id="singleUnitDiv" hidden>


    <div class="row">
        <div class="col-xs-12">
           
                <fieldset>
                    <div class="form-group row">
                    <div class="col-md-2" style="width: 15%;">
                            <label for="">Date Advanced </label>
                        @Html.Editor("iDateAdvance", new { @id = "iDateAdvance", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    <div class="col-md-2" style="width: 27%; padding-left: 29px;">
                            <label for="">Vin/HIN/Serial </label>
                        @Html.Editor("iVin", new { @id = "iVin", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    <div class="col-md-2" style="width: 10%;">
                            <label for="firstName">Year </label>
                        @Html.Editor("iYear", new { @id = "iYear", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                    <div class="col-md-2" style="width: 15%;">
                            <label for="">Make </label>
                        @Html.Editor("iMake", new { @id = "iMake", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                    <div class="col-md-2" style="width: 15%;">
                            <label for="firstName">Model </label>
                        @Html.Editor("iModel", new { @id = "iModel", htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                        
                    </div>

                <div class="form-group row" style="margin-top: 15px !important">
                        <div class="col-md-2"  style="width:20%;">
                            <label for="">Curtailment Amount <span class="icon-help_outline help-curt-amount"></span></label>
                        @Html.Hidden("aCurtAmount", new {@id = "aCurtAmount"})
                        @Html.Editor("iCurtAmount", new {@id = "iCurtAmount", htmlAttributes = new {@class = "form-control", style = "text-align:right;"}})
                        <span class="text-danger field-validation-error" id="errorCurtAmount" style="left: 8%; width: 300%"></span>
                        </div>
                    <div class="col-md-2" style="width:25%;">
                            <label for="">Curtailment Payment Date <span class="icon-help_outline help-date2"></span></label>
                        @Html.EditorFor(model => model.PayDate, new {htmlAttributes = new {@class = "form-control dateKeyPressValidate", @placeholder = "MM/DD/YYYY", @id = "payCurtDate", autocomplete = "off", maxlength = 10}})
                        <span class="text-danger field-validation-error" id="errorCurtPayDate" style="margin-left: 95%; top: 50%; width: 125%"></span>
                        @Html.Hidden("iCurtNumber", "", new { @id = "iCurtNumber" })
                        @Html.Hidden("iUnitID", "", new { @id = "iUnitID" })
                        </div>


                    </div>


                    <div class="form-group row" style="margin-top:25px !important;margin-left: 13px !important;text-align:left">
                        <input type="checkbox" id="report2" value="Report" style="width:16px;height:16px;margin-right:3px" /><label>Print a report of the transaction being submitted at this time <span class="icon-help_outline help-print"></span></label><br />
                        <input type="checkbox" id="emailReceipt2" value="email" style="width:16px;height:16px;margin-right:3px" /><label>Email a report of the transaction being submitted at this time to the dealer <span class="icon-help_outline help-email"></span></label>
                        <div id="receiptEmail2" hidden>
                            <label style="">
                                email address</label>
                            <input type="text" class="form-control" id="emailAdress2" style="margin-left: 106px;margin-top: -17px;"/>
                            <span class="text-danger field-validation-error" id="errorEmail2" style="margin-left: 106px;"></span>
                        </div>
                    </div>

                <input type="button" value="Cancel" id="btnCancel" tabindex="-1" class="btn btn-primary m-b next_clear_button clear_back" style="float: right; width: 130px; margin-right: 40px;"/>

                <input type="button" name="Pay" value="Pay" id="btnPay" class="btn btn-primary m-b next_clear_button next_back" style="width: 130px; margin-left: 174px;" disabled/>


                </fieldset>
            
        </div>
    </div>



</div>
                                }
<script src="~/scripts/CommonFunctions.js"></script>
<script>
    
    $(document).ready(function(){
        // $.browser.chrome = /chrom(e|ium)/.test(navigator.userAgent.toLowerCase()); 

       

        if ($('#checkableGrid').children('tbody').children('tr').length == 0)
        {            
            $('#noCurtLabelDiv').show();
            $('#checkableGridDiv').hide();
            $('#searchDiv').hide();
            $('#payDateDiv').hide();
            
        }
        else{
            $('#noCurtLabelDiv').hide();
            $('#checkableGridDiv').show();
            $('#searchDiv').show();
            $('#payDateDiv').show();
        }
    });

    //capitalize letters when typing
    $('#identificationNumberSearch').keyup(function () {
        $('#identificationNumberSearch').val(($('#identificationNumberSearch').val()).toUpperCase());
    });
    $('#identificationNumberSearch').focusout(function () {
        $(this).attr('placeholder', 'Last 6 of VIN/HIN/SN');
    });
    //block invalid characters
    $("#identificationNumberSearch").keypress(function (e) {

        var ch = e.which;
        if ((ch >= 47 && ch <= 57) || (ch >= 65 && ch <= 90) || (ch >= 97 && ch <= 122)) {
            return 1;
        }

        else {
            e.preventDefault();
        }
        //alert(ch);
    });

    $('#checkableGrid thead tr th a').each(function() {
        var _href = $(this).attr("href"); 
        $(this).attr("href", _href + '&dueDate='+$('#dueDate').val());
    });

    //clear all fields
    $('#btnCancel').click(function(){
         @{
             Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");

             var timezone = TimeZoneInfo.FindSystemTimeZoneById("Central America Standard Time");
             var dateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timezone);

         }
        var dueDate = '@dateTime';
        GetCurrentCurtailment(dueDate);
        $('.centered1 span').text('');
        $("#dueDate").val('@dateTime.ToString("d")');
        //ClearTextBoxValues();
        $('#payDate').removeClass('input-validation-error');
        $('#payDate').val(''); 
        $('#payCurtDate').val(''); 
        //$('#dueDate').val(''); 
        $('#dueDate').removeClass('input-validation-error');
        $('#errorDueDate').text('');
        $("#dueDate").val('@dateTime.ToString("d")');
        $('#searchIdentificationNumber').text('');
        $('#identificationNumberSearch').removeClass('input-validation-error');
        $('#identificationNumberSearch').val('');
        
        
    });
    function GetCurrentCurtailment(dueDate){
        showLoading();
        // alert(dueDate);
        $.ajax({
            url: '/Curtailments/PayCurtailmentForSelectedDueDate/',
            data: JSON.stringify({ dueDate: dueDate }),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',

            success: function (partialView) {
                $('#changeContainer').html(partialView);
                $('#changeContainer').show();
                $('.centered span').text('');
                hideLoading();
                //$('.centered1 span').text('Successfully Updated');
                //$(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // Your handler here...

                // if session expires
                if (jqXHR.status == "404") {
                    window.location.href = '/Login/UserLogin?lbl=Due to inactivity your session has timed out, please log in again.';
                }
                hideLoading();
            }
        });

    };
</script>
<script>

    var total = 0;
    var checkCount = 0;
    var totalRecCount = 0;

    $(function () {

        GridUpdate();
    });

    function GridUpdate() {
        total = 0;
        checkCount = 0;
        totalRecCount = 0;
        var ctrl =
                $('<input />', {
                    type: 'checkbox',
                    id: "cbSelectAll",
                    click: function () {
                        var checkboxes = $(this).closest('table').find('tbody tr td input[type="checkbox"]');
                        checkboxes.prop('checked', $(this).is(':checked'));
                        var chk = checkboxes.prop('checked');

                        if (chk) {
                            var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
                            $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));


                        } else {
                            var checkBoxText = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
                            $('.gridtable thead tr th:first').html(checkBoxText.prepend(ctrl));
                            $("#payAll").attr("disabled", "disabled");
                            $("#payDate").attr("disabled", "disabled");
                            // clear top error
                            $('.centered span').text('');
                            $('#errorPayDate').text('');

                            $('#payDate').removeClass('input-validation-error');
                            $('#payDate').next('span').children().text('');
                            totalRecCount = 0;

                        }
                        total = 0;
                        totalRecCount = 0;total = 0;
                        // $('.advanceAmount').each(function () {
                        $('#checkableGrid').find('.curtAmount') .each(function () {
                            var tr = $(this).parents('tr:first');

                            totalRecCount++;
                            if (document.getElementById('all').checked) {
                                total = total + parseFloat(tr.find("#am").text().replace(/,/g, ""));
                                checkCount++;
                                if (tr.find("#curtailmentStatus").val() === '2') {
                                    $(this).parents('tr').css('background', '#C18410');  $('#partialPaymentColor').show();
                                }else{
                                    $(this).parents('tr').css('background', 'lightblue');
                                }

                            } else {
                                checkCount = 0;

                                if (tr.find("#curtailmentStatus").val() === '2') {
                                    $(this).parents('tr').css('background', '#ecb764'); $('#partialPaymentColor').show();
                                }else{
                                    $(this).parents('tr').css('background', 'transparent');
                                }

                            }
                            var t = roundNumber(total, 2);
                            document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " +t.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") ;
                            if (checkCount > 0) {
                                $("#payAll").removeAttr("disabled");
                                $("#payDate").removeAttr("disabled");
                                if (totalRecCount == 1) {
                                    SetTextBoxValues(tr);
                                }
                            }

                        });
                        if (checkCount > 1) {
                            ClearTextBoxValues();ClearSearchGrid();
                        }
                        else if (checkCount == 0 || totalRecCount == 0) {
                            $("#payAll").attr("disabled", "disabled");
                            $("#payDate").attr("disabled", "disabled");
                            // clear top error

                            $('#errorPayDate').text('');
                            $('.centered span').text('');
                            $('#payDate').removeClass('input-validation-error');
                            $('#payDate').next('span').children().text('');
                            ClearTextBoxValues();
                        }
                        //changePartialPaymentRowColor();
                        SetMinDate();
                    }
                })


        var gg = $('<div />').attr({ id: 'someID' }).html('<span> Select </span>');
        $('.gridtable thead tr th:first').html(gg.prepend(ctrl));

        changePartialPaymentRowColor();

        $('.checkboxAll').change(function () {
            SetMinDate();
            var tr = $(this).parents('tr:first');
            var checked = tr.find("#all").is(':checked');

            if (checked) {
                total = total + parseFloat(tr.find("#am").text().replace(/,/g, ""));

                checkCount++;
                if (tr.find("#curtailmentStatus").val() === '2') {
                    $(this).parents('tr').css('background', '#C18410'); //checked color of partial payment
                    $('#partialPaymentColor').show();
                }else{
                    $(this).parents('tr').css('background', 'lightblue');
                }


            } else {
                total = total - parseFloat(tr.find("#am").text().replace(/,/g, ""));
                checkCount--;
                if (tr.find("#curtailmentStatus").val() === '2') {
                    $(this).parents('tr').css('background', '#ecb764'); //not checked color of partial payment
                    $('#partialPaymentColor').show();
                }else{
                    $(this).parents('tr').css('background', 'transparent');
                }

            }

            if (checkCount == 1) {
                if (checked) {
                    SetTextBoxValues(tr);

                } else {
                    $('.curtAmount').each(function () {

                        var tr = $(this).parents('tr:first');
                        var checked = tr.find("#all").is(':checked');

                        if (checked) {
                            SetTextBoxValues(tr);
                        }

                    });
                }
                var t1 = roundNumber(total,2);
                document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " +t1.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") ;
                $("#payAll").removeAttr("disabled");
                $("#payDate").removeAttr("disabled");
            }
            else if (checkCount == 0) {
                document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ 0.00";
                ClearTextBoxValues();
                $("#payAll").attr("disabled", "disabled");
                $("#payDate").attr("disabled", "disabled");
                // clear top error
                $('.centered span').text('');
                $('#errorPayDate').text('');
                $('#payDate').removeClass('input-validation-error');
                $('#payDate').next('span').children().text('');
                $("#someID span").html('Select')

            }
            else {

                ClearTextBoxValues();
                var t2 = roundNumber(total,2);
                document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " +t2.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") ;
                //document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " + roundNumber(total,2);

            }

            if (checkCount > 0) {ClearSearchGrid() ;
                var chkText = $('<div />').attr({ id: 'someID' }).html(' <span> Select </span>');
                $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));

                var totalRows = $("#checkableGrid td :checkbox").length;
                var checked = $("#checkableGrid td :checkbox:checked").length;

                if (checked == totalRows) {
                    var chkText = $('<div />').attr({ id: 'someID' }).html('<span>  Deselect </span>');
                    $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
                }
            }
            $('.curtAmount').each(function () {
                var tr = $(this).parents('tr:first');
                if (tr.find("#curtailmentStatus").val() === '2' && tr.find("#all").is(':checked')) {
                    $(this).parents('tr').css('background', '#C18410');//checked color of partial payment
                }
            });
        });

        //
        // Change the selector if needed
        var table = $('table'),
            bodyCells = table.find('tbody tr:first').children(),
            colWidth;

        // Adjust the width of thead cells when window resizes
        $(window).resize(function() {
            // Get the tbody columns width array
            colWidth = bodyCells.map(function() {
                return $(this)[0].getBoundingClientRect().width;
            }).get();

            // Set the width of thead columns
            table.find('thead tr').children().each(function(i, v) {
                $(v).outerWidth(colWidth[i]);
            });
        }).resize(); // Trigger resize handler

        $(window).bind("load",function(){

            // Get the tbody columns width array
            colWidth = bodyCells.map(function() {
                return $(this)[0].getBoundingClientRect().width;
            }).get();

            // Set the width of thead columns
            table.find('thead tr').children().each(function(i, v) {
                $(v).outerWidth(colWidth[i]);
            });
        });
    }

    //$(document).ready(function () {
    //    changePartialPaymentRowColor();
    //});

    function changePartialPaymentRowColor() {
        $('.curtAmount').each(function () {
            var tr = $(this).parents('tr:first');
            if (tr.find("#curtailmentStatus").val() === '2') {
                $(this).parents('tr').css('background', '#ecb764');     //not checked color of partial payment
                $('#partialPaymentColor').show();
            }
        });
    }

    $(document).on('click', 'tbody', (function (e) {
        var target = $(e.target);

        if (target.parents('#checkableGrid').length) {

            var $td = $(e.target).closest("td");
            var rowIndex = $td.parent().index();
            rowIndex += 1;
            var ColIndex = $td.parent().children().index($td);
            var table = document.getElementById("checkableGrid");
            var row = $("tr:eq(" + rowIndex + ")", '#checkableGrid');
            ClearLabelMessages();

            if (ColIndex != 0) {

                var checked = row.find("#all").prop('checked');
                if (!checked) {
                    row.find("#all").prop('checked', true);
                    if (row.find("#curtailmentStatus").val() === '2' && row.find("#all").is(':checked')) {
                        row.css('background', '#C18410');//checked color of partial payment
                    }else{
                        row.css('background', 'lightblue');
                    }

                    checkCount++;
                    total = total + parseFloat(row.find("#am").text().replace(/,/g, ""));

                    if (checkCount == 1) {ClearSearchGrid() ;
                        SetTextBoxValues(row);
                    }
                    else {
                        ClearTextBoxValues();
                    }
                    SetRadioBtnHeaderChecked();
                    var t4 = roundNumber(total,2);
                    document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " +t4.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") ;
                    //document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " + roundNumber(total,2);

                    $("#payAll").removeAttr("disabled");
                    $("#payDate").removeAttr("disabled");
                }
            } else {
                SetRadioBtnHeaderChecked();
            }
            //changePartialPaymentRowColor();
            SetMinDate();
        }
        
    }));

    function SetRadioBtnHeaderChecked() {
        var totalRows = $("#checkableGrid td :checkbox").length;
        var checked = $("#checkableGrid td :checkbox:checked").length;

        if (checked == totalRows) {
            var chkText = $('<div />').attr({ id: 'someID' }).html('<span> Deselect </span>');
            $("#checkableGrid").find("input:checkbox").each(function () {
                this.checked = true;
            });
            $("#someID span").html('Deselect');
        }
        else {

            $("#cbSelectAll").removeAttr("checked");
        }

    }


    function ChangeCheckBoxText(value) {
        var ctrl =
                $('<input />', {
                    type: 'checkbox',
                    id: "cbSelectAll"
                });
        var chkText = $('<div />').attr({ id: 'someID' }).html(value);
        $('.gridtable thead tr th:first').html(chkText.prepend(ctrl));
    }


    $("#btnSearch").click(function () {

        ClearTextBoxValues();

        total = 0;
        checkCount = 0;
        $("#btnPay").attr("disabled", "disabled");
        $("#payAll").attr("disabled", "disabled");
        $("#advanceDate").attr("disabled", "disabled");
        $("#payDate").attr("disabled", "disabled");
        // clear top error
        $('#payDate').removeClass('input-validation-error');
        $('#payDate').next('span').children().text('');
        $('.centered span').text('');
        $('#errorPayDate').text('');

        ClearMainGrid();
        //var count = 0;
        //$("#checkableGrid").find("input:checkbox").each(function () {
        //    this.checked = false;
        //    if (count > 0) {
        //        $(this).parents('tr').css('background', 'transparent');
        //    }
        //    count++;
        //});
        document.getElementById('all').checked = false;
        var t5 = roundNumber(total,2);
        document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " +t5.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") ;
        //document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " + roundNumber(total,2);

        $("#someID span").html('Select');
        $("#tagscloud span").html('');
        $('#iCurtAmount').removeClass('input-validation-error');
        var para1 = $("#identificationNumberSearch").val();
        var para2 = $('#cmbYear').val();
        var para3 = $("#cmbMake").val();
        var para4 = $("#cmbModel").val();
        if (para1 == null) { para1 = ''; }
        if (((para1 != "") &&(para1 != null)) && (para1.length < 6)) {
            //alert('ff');
            $("#searchIdentificationNumber").text('Please confirm the last 6 characters of the VIN/HIN/Serial No.');
            // $('#identificationNumberSearch').val("");

            $('.centered span').text('Error');
            $('#identificationNumberSearch').addClass('input-validation-error');
            $('#searchGrid1').hide()
            e.preventDefault();

        }
        else if (($("#identificationNumberSearch").val() != '') || ($('#cmbYear').val() != '') || ($('#cmbMake').val() != '') || ($("#cmbModel").val() != '')) {
            Search(para1, para2, para3, para4);
        }else{
            $('#searchGrid1').hide();
        }


    });
    $('#identificationNumberSearch').click(function () {
        $("#searchIdentificationNumber").text('');
        //$('#identificationNumberSearch').val("");

        $('.centered span').text('');
        $('#identificationNumberSearch').removeClass('input-validation-error')
    });
    //clear text box values and disable feild
    function ClearTextBoxValues() {
        $('#ivin').val('');
        $('#identificationNumber').val('');
        $('#iYear').val('');
        $('#iMake').val('');
        $('#iModel').val('');
        $('#iCost').val('');
        $('#iCurtAmount').val('');
        $("#btnPay").attr("disabled", "disabled");
        //$("#payAll").removeAttr("disabled");
        $("#advanceDate").attr("disabled", "disabled");
        //$("#startDate").removeAttr("disabled");
        $("#singleUnitDiv").hide();
        $('.centered span').text('');
        $('#errorCurtAmount').text('');
        $('#iCurtAmount').removeClass('input-validation-error');
        $('#errorPayDate').text('');
        $('#payDate').removeClass('input-validation-error');
        $('#payDate').next('span').children().text('');
        $('#payDate').val('');
        $('#payCurtDate').val('');

    }

    $('#identificationNumberSearch').focusout(function () {
        $(this).attr('placeholder', 'VIN/HIN/Serial No');
    });

    function ClearTextBoxValues() {
        $('#iDateAdvance').val('');
        $('#ivin').val('');
        $('#iYear').val('');
        $('#iMake').val('');
        $('#iModel').val('');
        $('#iCurtAmount').val('');
        $('#iCurtNumber').val('');
        $("#btnPay").attr("disabled", "disabled");
        $("#advanceDate").attr("disabled", "disabled");
        $("#singleUnitDiv").hide();
        $('#errorCurtAmount').text('');
        $('#iCurtAmount').removeClass('input-validation-error');
        $('.centered span').text('');
        $('#errorPayDate').text('');
        $('#payDate').removeClass('input-validation-error');
        $('#payDate').next('span').children().text('');
        $('#payDate').val('');
        $('#payCurtDate').val('');

    }

    function SetTextBoxValues(tr) {



        $('#iVin').val(tr.find("#vin").text());
        $('#iYear').val(tr.find("#year").text());
        $('#iMake').val(tr.find("#make").text());
        $('#iModel').val(tr.find("#model").text());
        $('#iUnitID').val(tr.find("#all").val());
        $('#iCurtNumber').val(tr.find("#CurtNumber").text());

        $('#iDateAdvance').val(tr.find("#dateAdvance").text());
        $('#iCurtAmount').val(tr.find("#am").text().replace(/,/g, ""));
        $('#aCurtAmount').val(tr.find("#am").text().replace(/,/g, ""));
        $('#errorCurtAmount').text('');
        $('#iCurtAmount').removeClass('input-validation-error');
        $('#errorCurtPayDate').text('');
        $('#payCurtDate').removeClass('input-validation-error');

        //document.getElementById("unitid").innerHTML = tr.find("#all").val();


        $("#btnPay").removeAttr("disabled");
        $("#advanceDate").removeAttr("disabled");
        $("#singleUnitDiv").show();
    }

    function ClearLabelMessages() {
        $('#noDataLabelDiv').text("");
        $('.label-success').text("");
    }

    @*var advDatePicker = new Pikaday({
                field: document.getElementById('advanceDate'),
                format: 'l'


            });

            advDatePicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
            advDatePicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));*@


    function Search(para1, para2, para3, para4) {

        var curtList = @Html.Raw(Json.Encode(Model));
        showSearching();
        $.ajax({
            url: '/Curtailments/SearchCurtailment',
            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify({ identificationNumber: para1, year: para2, make: para3, vehicleModel: para4, CurtailmentList: curtList }),
            success: function (View) {
                $('#searchGrid1').html(View);
                $('#searchGrid1').removeAttr('hidden');
                $('#searchGrid1').show();
                changePartialPaymentRowColor();
                // Change the selector if needed
                var table = $('table'),
                    bodyCells = table.find('tbody tr:first').children(),
                    colWidth;

                colWidth = bodyCells.map(function () {
                    return $(this)[0].getBoundingClientRect().width;
                }).get();

                // Set the width of thead columns
                table.find('thead tr').children().each(function (i, v) {
                    $(v).outerWidth(colWidth[i]);
                });
                hideLoading();
            },

            error: function (jqXHR, textStatus, errorThrown) {
                // Your handler here...
                $('#searchGrid1').hide();
                // if session expires
                if (jqXHR.status == "404") {
                    window.location.href = '/Login/UserLogin?lbl=Due to inactivity your session has timed out, please log in again.';
                }
                hideLoading()
            }
        });
    }

    $("#btnClear").click(function () {

        ClearSearchRelatedData();
        var mainGridSelectedCount = 0;
        $('table#checkableGrid > tbody > tr').each(function () {
            var isChecked = $(this).find("#all").is(':checked');
            if (isChecked === true)
                mainGridSelectedCount = mainGridSelectedCount + 1;
        });

        if (mainGridSelectedCount === 0)
            ClearTextBoxValues();
    });

    function ClearSearchRelatedData() {
        //document.getElementById("form").reset();
        $("#identificationNumberSearch").val('');
        $("#vehicleModelSearch").val('');
        $('#cmbYear').val('');
        $("#cmbMake").val('');
        $("#cmbModel").val('');
        $("#noDataLabelDiv").hide();
        $("#searchGrid").hide();
        //$("#singleUnitDiv").hide();
        $("#searchIdentificationNumber").text('');
        $('.centered span').text('');
        $('#identificationNumberSearch').removeClass('input-validation-error');

    }

    function ClearMainGrid() {
        var count = 0;
        $("#checkableGrid").find("input:checkbox").each(function () {
            this.checked = false;
            if (count > 0) {
                $(this).parents('tr').css('background', 'transparent');

            }
            count++;
        });
        total = 0;
        checkCount = 0;
        var t6 = roundNumber(total,2);
        document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " +t6.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") ;
        //document.getElementById("subtotal").innerHTML = "Current Curtailment Total : $ " + roundNumber(total,2);
        $("#payAll").attr("disabled", "disabled");
        $("#payDate").attr("disabled", "disabled");
        // clear top error
        $('.centered span').text('');
        $('#errorPayDate').text('');
        $('#payDate').removeClass('input-validation-error');
        $('#payDate').next('span').children().text('');
        changePartialPaymentRowColor();
    }

    function ClearSearchGrid() {
        $("#searchResultGrid").find('.advanceAmount').each(function () {
            var tr = $(this).parents('tr:first');
            if (tr.find("#curtailmentStatus").val() != '2') {
                tr.css('background', 'transparent');
            }else{
                tr.css('background', '#ecb764');
            }
        });

    }




    payPicker = new Pikaday({
        field: document.getElementById('payDate'),
        format: 'l',

        bound: true,
        onSelect: function () {
            var thisDate = this.getDate();
            $('#errorPayDate').text('');
            $('#errorCurtPayDate').text('');
            $('#payDate').removeClass('input-validation-error');
            $("#payCurtDate").val(formatDate(thisDate));
        }
    });

    payPicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
    // payPicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));
    $("#payDate").val("");
    payPicker.gotoDate(new Date('@DateTime.Today.ToString("d")'));


    payCurtPicker = new Pikaday({
        field: document.getElementById('payCurtDate'),
        format: 'l',

        bound: true,
        onSelect: function () {
            var thisDate = this.getDate();
            $('#errorPayDate').text('');
            $('#payDate').removeClass('input-validation-error');
            $('#errorCurtPayDate').text('');
            $('#payCurtDate').removeClass('input-validation-error');
            $('#payDate').next('span').children('span').text('');
            $("#payDate").val(formatDate(thisDate));
        }
    });

    payCurtPicker.setMinDate(new Date("@ViewBag.loanDetails.startDate.Date"));
    //payCurtPicker.setMaxDate(new Date("@ViewBag.loanDetails.maturityDate.Date"));
    $("#payCurtDate").val("");
    payCurtPicker.gotoDate(new Date('@DateTime.Today.ToString("d")'));


    function formatDate(value)
    {

        return value.getMonth()+1 + "/" + value.getDate() + "/" + value.getFullYear();
    }

    var dealerEmail = "";
    var emailError = false;
    function validateEmail(email) {
        var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    }

    $('#emailAdress').blur(function() {
        if (this.value !== '') {
            var res = validateEmail(this.value);
            //alert(res);
            if (res === false) {
                $('#errorEmail').text('Invalid email address');
            } else {
                $('#errorEmail').text('');
                dealerEmail = this.value;
            }
        } else {
            $('#emailAdress').removeClass('input-validation-error');
        }
    });

    $('#emailAdress').click(function() {
        $('#errorEmail').text('');
    });

    $('#emailReceipt').change(function() {
        var ckb = $(this).is(':checked');
        var email = '@ViewBag.DealerEmail';
        //alert(email);
        if (ckb && email === '') {
            $('#receiptEmail').show();
        } else {
            dealerEmail = email;
            $('#receiptEmail').hide();
        }
        if (!ckb) {
            $('#emailAdress').val('');
            $('#errorEmail').text('');
            $('#emailAdress').removeClass('input-validation-error');
        }
    });

    //var dealerEmail = "";
    var emailError2 = false;

    $('#emailAdress2').blur(function() {
        if (this.value !== '') {
            var res = validateEmail(this.value);
            //alert(res);
            if (res === false) {
                $('#errorEmail2').text('Invalid email address');
            } else {
                $('#errorEmail2').text('');
                dealerEmail = this.value;
            }
        } else {
            $('#emailAdress2').removeClass('input-validation-error');
        }
    });

    $('#emailAdress2').click(function() {
        $('#errorEmail2').text('');
    });

    $('#emailReceipt2').change(function() {
        var ckb = $(this).is(':checked');
        var email = '@ViewBag.DealerEmail';
        //alert(email);
        if (ckb && email === '') {
            $('#receiptEmail2').show();
        } else {
            dealerEmail = email;
            $('#receiptEmail2').hide();
        }
        if (!ckb) {
            $('#emailAdress2').val('');
            $('#errorEmail2').text('');
            $('#emailAdress2').removeClass('input-validation-error');
        }
    });

    function doConfirm1() {
        var scrollTop = $(window).scrollTop();
        var docHeight = $(document).height(); //grab the height of the page
        $('.overlay-bg').show().css({ 'height': docHeight }); //display your popup background and set height to the page height
        $('#confirmBox').show().css({ 'top': scrollTop + 20 + 'px' }); //show the appropriate popup and set the content 20px from the window top

        $('.overlay-bg, .overlay-content.popupReport').show();
        return;
    }


    var loanId = '@ViewBag.LoanId';
    var data = { SelectedCurtailmentSchedules: [] };
    $('#payAll').click(function (e) {
        //check want to view report
        var ckbReport = $('#report').is(':checked');
        var ckbEmailReceipt = $('#emailReceipt').is(':checked');
        var needSend = "";
        if (ckbEmailReceipt) {
            needSend = "Yes";
        } else {
            needSend = "No";
        }

        if (needSend === "Yes") {
            if (dealerEmail === '') {
                if ($('#emailAdress').val() === "") {
                    $('#errorEmail').text("Please enter the dealer's email address.");
                    $('#emailAdress').addClass('input-validation-error');

                    $('.centered span').text('Error');
                } else {
                    var res = validateEmail($('#emailAdress').val());
                    //alert(res);
                    if (res === false) {
                        $('#errorEmail').text('Invalid email address');
                        $('#emailAdress').addClass('input-validation-error');
                        $('.centered span').text('Error');
                    } else {
                        $('#errorEmail').text('');
                        $('#emailAdress').removeClass('input-validation-error');
                    }
                }
            }
        }

        data = { SelectedCurtailmentSchedules: [], needSend: needSend, dealerEmail: dealerEmail };
        if($("#payDate").val() == ""){
            if($('#payDate').next('span').children().length == 0 ){

                $('#errorPayDate').text('Please select the Curtailment payment date');
                $('#payDate').addClass('input-validation-error');

            }
            $('.centered span').text('Error');
            return;
        }

        if($("#errorPayDate").text() !== "" || $('#errorEmail').text() !== ""){

            return;
        }
        if(checkLastCurtailments()){
            if (checkCount >= 1) {

                $('.curtAmount').each(function () {
                    var tr = $(this).parents('tr:first');
                    var checked = tr.find("#all").is(':checked');
                    if (checked) {
                        data.SelectedCurtailmentSchedules.push({
                            UnitId: tr.find("#all").val(), IDNumber: tr.find("#vin").text(), CurtNumber: tr.find("#CurtNumber").text(), PayDate: $('#payDate').val(), CurtAmount: tr.find("#am").text().replace(/,/g, ""),
                            Year: tr.find("#year").text(), Make: tr.find("#make").text(), Model: tr.find("#model").text()
                        });

                    }
                });

                showPleaseWait();


                $("#btnPay").attr("disabled", "disabled");
                $("#payAll").attr("disabled", "disabled");

                //alert(data.SelectedCurtailmentSchedules.length);
                $.ajax({
                    url: '/Curtailments/PayCurtailments/',
                    data: JSON.stringify(data),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',

                    success: function (View) {


                        //$(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                        if(View == "") {
                            //window.scrollTo(0, 0);
                            if (ckbReport) {
                                doConfirm1();
                                var url = "../Reports/RptDivCUrtailmentReceiptDuringSession.aspx?loanId=" + loanId;

                                $('#reportViewerDiv').show();
                                var myFrame = document.getElementById('ifrmReportViewer');

                                if (myFrame !== null) {

                                    if (myFrame.src) {
                                        //alert(1);
                                        myFrame.src = url;
                                    } else if (myFrame.contentWindow !== null && myFrame.contentWindow.location !== null) {
                                        //alert(2);
                                        myFrame.contentWindow.location = url;
                                    } else {
                                        //alert(3);
                                        myFrame.setAttribute('src', url);
                                    }
                                }
                                hideLoading();
                                $('.overlay-bg, .overlay-content.popupReport').show();

                                e.preventDefault();
                                $('#btnCancelPtrDiv').click(function() {
                                    
                                    GetCurrentCurtailment($('#dueDate').val());
                                    $('.overlay-bg, .overlay-content.popupReport').hide();
                                    $('.centered1 span').text('Successfully Updated');
                                });

                                //$('#btnPrint').click(function () {
                                //    $('.overlay-bg, .overlay-content.popupReport').hide();
                                //    $.ajax({
                                //        url: '/Curtailments/PrintPage',
                                //        type: 'POST',
                                //        contentType: 'application/json;',
                                //        data: {},
                                //        success: function (view) {
                                //            //alert(view);
                                //            $('.centered1 span').text('Successfully Updated');
                                //            GetCurrentCurtailment($('#dueDate').val());
                                //            $('.overlay-bg, .overlay-content.popupReport').hide();
                                //        },
                                //        error: function (jqXHR, textStatus, errorThrown) {
                                //            // Your handler here...

                                //            // if session expires
                                //            if (jqXHR.status == "404") {
                                //                window.location.href = '/Login/UserLogin?lbl=Session expired';
                                //            } else {
                                //                $('#errPage span').text('No printers are installed.');
                                //            }
                                //        }
                                //    });
                                //});

                            } 
                            
                            
                            else {
                                hideLoading();
                                $('.centered1 span').text('Successfully Updated');
                                GetCurrentCurtailment($('#dueDate').val());

                                
                                window.scrollTo(0, 0);

                            }
                        }

                        else if(View.length > 5){

                            if (ckbReport) {
                                doConfirm1();
                                var url = "../Reports/RptDivCUrtailmentReceiptDuringSession.aspx?loanId=" + loanId;

                                $('#reportViewerDiv').show();
                                var myFrame = document.getElementById('ifrmReportViewer');

                                if (myFrame !== null) {

                                    if (myFrame.src) {
                                        //alert(1);
                                        myFrame.src = url;
                                    } else if (myFrame.contentWindow !== null && myFrame.contentWindow.location !== null) {
                                        //alert(2);
                                        myFrame.contentWindow.location = url;
                                    } else {
                                        //alert(3);
                                        myFrame.setAttribute('src', url);
                                    }
                                }
                                hideLoading();
                                 $('.overlay-bg, .overlay-content.popupReport').show();
                                e.preventDefault();
                                $('#btnCancelPtrDiv').click(function() {
                                    $('.overlay-bg, .overlay-content.popupReport').hide();
                                    if(View.length > 5){
                                        var array = View.split(',');
                                        showPopup5(5 , array);
                                    }
                                });

                                //$('#btnPrint').click(function () {
                                //    $('.overlay-bg, .overlay-content.popupReport').hide();
                                //    $.ajax({
                                //        url: '/Curtailments/PrintPage',
                                //        type: 'POST',
                                //        contentType: 'application/json;',
                                //        data: {},
                                //        success: function (view) {
                                //            //alert(view);

                                //            var array = View.split(',');
                                //            showPopup5(5 , array);
                                //        },
                                //        error: function (jqXHR, textStatus, errorThrown) {
                                //            // Your handler here...

                                //            // if session expires
                                //            if (jqXHR.status == "404") {
                                //                window.location.href = '/Login/UserLogin?lbl=Session expired';
                                //            } else {
                                //                $('#errPage span').text('No printers are installed.');
                                //            }
                                //        }
                                //    });
                                //});
                            }
                            else{

                                hideLoading();
                                var array = View.split(',');
                                    window.scrollTo(0, 0);


                                    var array = View.split(',');
                                    showPopup5(5 , array);

                            }
                        }else{
                            hideLoading();
                        }

                        //$('.centered1 span').text('Successfully Updated');
                        //load report div



                        //alert("Success");

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Your handler here...
                        //alert("Error");
                        // if session expires
                        if (jqXHR.status == "404") {
                            window.location.href = '/Login/UserLogin?lbl=Due to inactivity your session has timed out, please log in again.';
                        }
                        hideLoading();
                    }


                });
            }

        }else{
            $('.centered span').html('One or more of the units you have selected to pay curtailment for have an outstanding curtailment due.<br/> Please pay the outstanding curtailment before paying the current curtailment (you may also choose to pay both curtailments at once).');
            window.scrollTo(0, 0);

        }

    });

    function checkLastCurtailments(){


        var a  = true;

        $('.gridtable tbody tr .gridColumnSelect #all').each(function () {
            if($(this).is(':checked')){
                //if($(this).closest('tr').find("#CurtNumber").text() == $('#curtailmentTotal').val()){
                var unitId = $(this).val();
                var curtNo = $(this).closest('tr').find("#CurtNumber").text();
                $('.gridtable tbody tr .gridColumnSelect #all').each(function () {
                    if($(this).val() == unitId ){
                        if($(this).is(':checked') == false && $(this).closest('tr').find("#CurtNumber").text() < curtNo ){

                            a =false;
                            return false;

                        }
                    }

                });
                //}

            }
            return true;
        });

        return a;



    }

    function checkLastCurtailmentsForSearch(){


        var a  = true;



        var unitId = $('#iUnitID').val();
        $('.gridtable tbody tr .gridColumnSelect #all').each(function () {
            if($(this).val() == unitId && $(this).closest('tr').find("#CurtNumber").text() < $('#iCurtNumber').val() ){


                a =false;
                return false;


            }

        });




        return a;



    }

    $('#payDate').click(function(e){

        $('#errorPayDate').text('');
        $(this).next('span').children('span').remove();
        $('#payDate').removeClass('input-validation-error');
    });


    $('#payDate').blur(function () {

        if ($(this).val() == "") {


            $(this).attr('placeholder', 'MM/DD/YYYY');
            return;
        }
        var valid = isValidDate($(this).val());
        if (valid) {
            var selectedDate = new Date($(this).val());
            var minDate = new Date("@ViewBag.loanDetails.startDate.Date");
            // var maxDate = new Date("@ViewBag.loanDetails.maturityDate.Date");
            if (selectedDate < minDate) {
                // out off range error
                $('#errorPayDate').text('Out of Range');
                $(this).addClass('input-validation-error');
                $('.centered span').text('Error');
            } else {
                // delete error mssage
                $('#errorPayDate').text('');
                $(this).removeClass('input-validation-error');
            }



        } else {

            // not valid data error
            $('#errorPayDate').text('The field must be a date');
            $(this).addClass('input-validation-error');
            $('.centered span').text('Error');
        }
    });




    $('#payCurtDate').click(function(e){

        $('#errorCurtPayDate').text('');
        $('#payCurtDate').removeClass('input-validation-error');
        $(this).next('span').children('span').remove();
    });




    $('#payCurtDate').blur(function () {

        if ($(this).val() == "") {


            $(this).attr('placeholder', 'MM/DD/YYYY');
            return;
        }
        var valid = isValidDate($(this).val());
        if (valid) {
            var selectedDate = new Date($(this).val());
            var minDate = new Date("@ViewBag.loanDetails.startDate.Date");
            // var maxDate = new Date("@ViewBag.loanDetails.maturityDate.Date");
            if (selectedDate < minDate) {
                // out off range error
                $('#errorCurtPayDate').text('Out of Range');
                $(this).addClass('input-validation-error');
                $('.centered span').text('Error');
            } else {
                // delete error mssage
                $('#errorCurtPayDate').text('');
                $(this).removeClass('input-validation-error');
            }



        } else {

            // not valid data error
            $('#errorCurtPayDate').text('The field must be a date');
            $(this).addClass('input-validation-error');
            $('.centered span').text('Error');
        }
    });


    $('#btnPay').click(function (e) {

        //check want to view report
        var ckbReport = $('#report2').is(':checked');
        var ckbEmailReceipt = $('#emailReceipt2').is(':checked');
        var needSend = "";
        if (ckbEmailReceipt) {
            needSend = "Yes";
        } else {
            needSend = "No";
        }

        if (needSend === "Yes") {
            if (dealerEmail === '') {
                if ($('#emailAdress2').val() === "") {
                    $('#errorEmail2').text("Please enter the dealer's email address.");
                    $('#emailAdress2').addClass('input-validation-error');

                    $('.centered span').text('Error');
                } else {
                    var res = validateEmail($('#emailAdress2').val());
                    //alert(res);
                    if (res === false) {
                        $('#errorEmail2').text('Invalid email address');
                        $('#emailAdress2').addClass('input-validation-error');
                        $('.centered span').text('Error');
                    } else {
                        $('#errorEmail2').text('');
                        $('#emailAdress2').removeClass('input-validation-error');
                    }
                }
            }
        }

        //data = { SelectedCurtailmentSchedules: [] };
        data = { SelectedCurtailmentSchedules: [], needSend: needSend, dealerEmail: dealerEmail };

        if ($('#iVin').val() != '') {
            var a = 1;
            if($("#payCurtDate").val() == ""){
                // show error errorCurtPayDate
                $('#errorCurtPayDate').text('Please select the Curtailment payment date');
                $('#payCurtDate').addClass('input-validation-error');
                a=0;
            }
            if($('#errorCurtAmount').text() != "" ){
                a=0;
            }
            if($('#errorCurtPayDate').text() != ""){
                a=0;
            }
            if( parseFloat($('#iCurtAmount').val()).toFixed(2) <= 0){
                $('#errorCurtAmount').text('Please enter a Curtailment Amount greater than 0');
                $('#iCurtAmount').removeClass('input-validation-error');


                a=0;
            }
            if(a== 0 ){
                $('.centered span').text('Error');
                return;
            }



            if(checkLastCurtailmentsForSearch()){


                data.SelectedCurtailmentSchedules.push({
                    UnitId: $('#iUnitID').val(), IDNumber: $('#iVin').val(), CurtNumber: $("#iCurtNumber").val(), PayDate: $('#payDate').val(), CurtAmount: $('#iCurtAmount').val().replace(/,/g, ""),
                    Year: $("#iYear").val(), Make: $("#iMake").val(), Model: $("#iModel").val()
                });


                $("#btnPay").attr("disabled", "disabled");
                $("#payAll").attr("disabled", "disabled");

                showPleaseWait();
                //alert(data.SelectedCurtailmentSchedules.length);
                $.ajax({
                    url: '/Curtailments/PayCurtailments/',
                    data: JSON.stringify(data),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',

                    success: function (View) {
                        //window.scrollTo(0, 0);
                        ////$(location).attr('href', '/AdvanceUnit/Advance?flag=' + View);
                        //if(View == ""){
                        //    $('.centered1 span').text('Successfully Updated');
                        //    GetCurrentCurtailment($('#dueDate').val());
                        //}
                        //if(View.length > 5){

                        //    var array = View.split(',');

                        //    showPopup5(5 , array);


                        //}

                        if(View == "") {
                            
                            if (ckbReport) {
                                doConfirm1();
                                var url = "../Reports/RptDivCUrtailmentReceiptDuringSession.aspx?loanId=" + loanId;

                                $('#reportViewerDiv').show();
                                var myFrame = document.getElementById('ifrmReportViewer');

                                if (myFrame !== null) {

                                    if (myFrame.src) {
                                        //alert(1);
                                        myFrame.src = url;
                                    } else if (myFrame.contentWindow !== null && myFrame.contentWindow.location !== null) {
                                        //alert(2);
                                        myFrame.contentWindow.location = url;
                                    } else {
                                        //alert(3);
                                        myFrame.setAttribute('src', url);
                                    }
                                }
                                hideLoading();
                                $('.overlay-bg, .overlay-content.popupReport').show();
                                
                                e.preventDefault();
                                $('#btnCancelPtrDiv').click(function() {

                                    GetCurrentCurtailment($('#dueDate').val());
                                    $('.overlay-bg, .overlay-content.popupReport').hide();
                                    $('.centered1 span').text('Successfully Updated');
                                });

                                //$('#btnPrint').click(function () {
                                //    //$('.overlay-bg, .overlay-content.popupReport').hide();

                                //    var url = '/Curtailments/PrintPage';

                                //    var win = window.open(url, '_blank');
                                //    win.focus();

                                //    //$.ajax({
                                //    //    url: '/Curtailments/PrintPage',
                                //    //    type: 'POST',
                                //    //    contentType: 'application/json;',
                                //    //    data: {},
                                //    //    success: function (view) {
                                //    //        //alert(view);
                                //    //        $('.centered1 span').text('Successfully Updated');
                                //    //        GetCurrentCurtailment($('#dueDate').val());
                                //    //        $('.overlay-bg, .overlay-content.popupReport').hide();
                                //    //    },
                                //    //    error: function (jqXHR, textStatus, errorThrown) {
                                //    //        // Your handler here...

                                //    //        // if session expires
                                //    //        if (jqXHR.status == "404") {
                                //    //            window.location.href = '/Login/UserLogin?lbl=Session expired';
                                //    //        } else {
                                //    //            $('#errPage span').text('No printers are installed.');
                                //    //        }
                                //    //    }
                                //    //});
                                //});

                            } 
                            
                            else {

                                hideLoading();
                                window.scrollTo(0, 0);
                                $('.centered1 span').text('Successfully Updated');
                                GetCurrentCurtailment($('#dueDate').val());

                                
                                
                                

                            }

                            //window.scrollTo(0, 0);
                        }

                        else if(View.length > 5){

                            if (ckbReport) {
                                doConfirm1();
                                var url = "../Reports/RptDivCUrtailmentReceiptDuringSession.aspx?loanId=" + loanId;

                                $('#reportViewerDiv').show();
                                var myFrame = document.getElementById('ifrmReportViewer');

                                if (myFrame !== null) {

                                    if (myFrame.src) {
                                        //alert(1);
                                        myFrame.src = url;
                                    } else if (myFrame.contentWindow !== null && myFrame.contentWindow.location !== null) {
                                        //alert(2);
                                        myFrame.contentWindow.location = url;
                                    } else {
                                        //alert(3);
                                        myFrame.setAttribute('src', url);
                                    }
                                }

                                hideLoading();
                                $('.overlay-bg, .overlay-content.popupReport').show();
                              
                               
                                e.preventDefault();
                                $('#btnCancelPtrDiv').click(function() {
                                    $('.overlay-bg, .overlay-content.popupReport').hide();
                                    if(View.length > 5){
                                        var array = View.split(',');
                                        showPopup5(5 , array);
                                    }
                                });

                                //$('#btnPrint').click(function () {
                                //    $('.overlay-bg, .overlay-content.popupReport').hide();
                                //    $.ajax({
                                //        url: '/Curtailments/PrintPage',
                                //        type: 'POST',
                                //        contentType: 'application/json;',
                                //        data: {},
                                //        success: function (view) {
                                //            //alert(view);

                                //            var array = View.split(',');
                                //            showPopup5(5 , array);
                                //        },
                                //        error: function (jqXHR, textStatus, errorThrown) {
                                //            // Your handler here...

                                //            // if session expires
                                //            if (jqXHR.status == "404") {
                                //                window.location.href = '/Login/UserLogin?lbl=Session expired';
                                //            } else {
                                //                $('#errPage span').text('No printers are installed.');
                                //            }
                                //        }
                                //    });
                                //});
                            }
                            else{


                                hideLoading();
                                var array = View.split(',');
                                    window.scrollTo(0, 0);
                               
                                    showPopup5(5 , array);
                                

                            }
                        }

                        else{

                            hideLoading();
                        }

                        //$('.centered1 span').text('Successfully Updated');
                        //load report div



                        //alert("Success");

                        
                        

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Your handler here...

                        // if session expires
                        if (jqXHR.status == "404") {
                            window.location.href = '/Login/UserLogin?lbl=Due to inactivity your session has timed out, please log in again.';
                        }
                        hideLoading();
                    }
                });

            }

            else{
                $('.centered span').text('Your selected items has previous unpaid curtailment, Please pay that also');
               
                window.scrollTo(0, 0);


            }

        }

        


    });

    $('#btnPrint').click(function () {
        //$('.overlay-bg, .overlay-content.popupReport').hide();

        var url = '/Curtailments/PrintPage';

        var win = window.open(url, '_blank');
        win.focus();
    });

    $("#iCurtAmount").keypress(function (e){

        var charCode = !e.charCode ? e.which : e.charCode;

        if ((charCode > 47 && charCode < 58) || charCode == 127 || charCode == 44 || charCode == 46 || charCode == 8) { }
        else
            e.preventDefault();




    });

    $("#iCurtAmount").blur(function (e){



        if($(this).val() == ""){
            $(this).val("0.00");
        }

        var val = $.trim($(this).val());

        if (val.indexOf(',') > -1) {
            val = val.replace(/,/g, "");
        }
        //if (val.indexOf('$') > -1) {
        //    val = val.replace('$', '');
        //}
        var num = parseFloat(val);
        var num = num.toFixed(2);
        if (isNaN(num)) {
            num = '';
        }


        $(this).val( num);

        if(parseFloat($(this).val()).toFixed(2) <= 0){
            $('#errorCurtAmount').text('Please enter a Curtailment Amount greater than 0');
            $('#iCurtAmount').addClass('input-validation-error');
            $('.centered span').text('Error');
        }else if(parseFloat(parseFloat($(this).val()).toFixed(2)) >  parseFloat(parseFloat($("#aCurtAmount").val()).toFixed(2))){
            $('#errorCurtAmount').text('The curtailment amount being paid cannot be greater than the curtailment amount currently due.');
            $('#iCurtAmount').addClass('input-validation-error');
            $('.centered span').text('Error');
        }else if(parseFloat(parseFloat($(this).val()).toFixed(2)) <=  parseFloat(parseFloat($("#aCurtAmount").val()).toFixed(2))){
            $('#errorCurtAmount').text('');
            $('#iCurtAmount').removeClass('input-validation-error');

        }

    });

    $("#iCurtAmount").on('click', function(e) {
        $('#errorCurtAmount').text('');
        $('#iCurtAmount').removeClass('input-validation-error');
        if (this.value === "0.00") {
            document.getElementById(this.id).value = "";
        }
        else if (this.value === "0") {
            document.getElementById(this.id).value = "";
        }
    });


    function showPopup5(whichpopup , array) {


        var length = array.length;
        var VinNumbers = [];
        for(var i=0 ; i<length ; i++ ){




            if(array[i].length > 5){

                for(var j=0; j<data.SelectedCurtailmentSchedules.length ; j++ ){

                    if(data.SelectedCurtailmentSchedules[j].UnitId == array[i]){
                        VinNumbers.push(data.SelectedCurtailmentSchedules[j].IDNumber);
                        break;
                    }

                }

            }

        }

        // append the message to span
        var vinString = VinNumbers.join(" , ");

        $('#payOffAlert strong').text(vinString);
        if(VinNumbers.length == 1){
            @if (Session["IsTitleTrack"] != null && int.Parse(Session["IsTitleTrack"].ToString()) == 1)
                 {
           <text> $('#payOffAlert').text('This ' + VinNumbers[0] + ' Unit Successfully paid off. Do you Like to Update the Title Status?');</text>
             }else
             {
                 <text> $('#payOffAlert').text('This ' + VinNumbers[0] + ' Unit Successfully paid off.');</text>
             }
        }


        var docHeight = $(document).height(); //grab the height of the page
        var scrollTop = $(window).scrollTop(); //grab the px value from the top of the page to where you're scrolling
        $('.overlay-bg').show().css({ 'height': docHeight }); //display your popup background and set height to the page height
        $('.popup' + whichpopup).show().css({ 'top': scrollTop + 20 + 'px' }); //show the appropriate popup and set the content 20px from the window top

        return;

    }

    ////////////////////////////////////////
    //set advance date as min date on datepicker
    function SetMinDate(){

        var mindate = $('.gridtable tbody tr .gridColumnSelect').find('input[type=checkbox]:checked').filter(':first').closest('tr').find("#dateAdvance").text();
        if(mindate != ""){
            mindate = new Date(mindate);





            $('.gridtable tbody tr .gridColumnSelect #all').each(function () {
                if($(this).is(':checked')){



                    var dateAdvance = new Date($(this).closest('tr').find("#dateAdvance").text());

                    if(mindate.getTime()  < dateAdvance.getTime()){

                        mindate = dateAdvance;
                    }

                }

            });


            payPicker.setMinDate(mindate);
        }


    }

    $('#payCurtDate').focus(function(){
        payCurtPicker.setMinDate(new Date($('#iDateAdvance').val()));
    });
    /////////////////////////////////

    //help

    $('.help-select').click(function () {

        $('.help-text h4').html("Select Unit(s)");
        $('.help-text p').html(" &nbsp;&nbsp; Use these select boxes to check which unit(s) you are wanting to record curtailment payments for at this time.");

    });

    $('.help-date1').click(function () {

        $('.help-text h4').html("Curtailment Payment Date");
        $('.help-text p').html(" &nbsp;&nbsp; Select which date the curtailment payments for the unit(s) are being recorded.");

    });

    $('.help-email').click(function () {

        $('.help-text h4').html("Email report to dealer");
        $('.help-text p').html(" &nbsp;&nbsp; The report will be sent to the email address registered with the dealer branch in the setup. If you would like to specify a different email address for the reports to be sent to please go to your dashboard and update the dealer branch information. If no email address was specified during the initial setup then you will be asked to enter one now. That email address will then be recorded for all future report emails.");

    });

    $('.help-print').click(function () {

        $('.help-text h4').html("Print a report");
        $('.help-text p').html(" &nbsp;&nbsp; If you select this then a separate window will open which will allow you to print the report for the transaction(s) which were just completed. You will be able to go to the reports page at any time and create a report of these transactions to print whether or not you choose to print a copy now.");

    });

    $('.help-search').click(function () {

        $('.help-text h4').html("Search for a Unit");
        $('.help-text p').html(" &nbsp;&nbsp; Use these fields (you can enter details in just one field or any number of fields) to search for a specific unit. The more fields you select the more refined the search results will be.");

    });

    

    $('.help-curt-amount').click(function () {

        $('.help-text h4').html("Curtailment amount to be paid");
        $('.help-text p').html(" &nbsp;&nbsp; This amount is automatically calculated based on the loan set up. You are able to change the amount of the curtailment payment - note that you can only decrease the payment amount, you cannot change the amount to be more than the current curtailment due. If you wish to record payment of more than the current curtailment then you will need to record this curtailment, search for the next curtailment due on the unit, adjust that curtailment amount accordingly and record the payment.");

    });

    $('.help-date2').click(function () {

        $('.help-text h4').html("Curtailment Payment Date");
        $('.help-text p').html(" &nbsp;&nbsp; Select which date the curtailment payment for the unit is being recorded.");

    });
    </script>




<div class="overlay-content popupReport" id="confirmBox" style="height: 750px;">
    <h3>Curtailment Receipt</h3>
    
    <div id="reportViewerDiv" hidden>
        <iframe id="ifrmReportViewer" style="height: 700px; width: 100%;" frameborder="0" scrolling="no"></iframe>
    </div>
    <button style="font-size: 14px; width: 100px; margin-top: -56px;" type="button" id="btnPrint" class="btn btn-primary m-b cancel next_clear_button back_back"> Print</button>
    <button style="font-size:14px;width: 100px;margin-top: -56px;" type="button" id="btnCancelPtrDiv" class="btn btn-primary m-b cancel next_clear_button clear_back"> Cancel</button>
</div>

<div class="overlay-content popup5" style="width:640px;text-align:center;margin-left: 173px;top:280px">


    <h3>Message</h3>

    @if (Session["IsTitleTrack"] != null && int.Parse(Session["IsTitleTrack"].ToString()) == 1)
    {

        //ViewBag.ttlAccess = 1;
        <div id="payOffAlert" class="alert alert-info" role="alert">
            These <strong>VIN NUMBERS</strong>  Units are Successfully paid off. Do you Like to Update the Title Status?
        </div><br />
        <span> Press OK to continue, or Cancel to stay on the current page.</span><br />
        <br />
        @Html.ActionLink("OK", "TitleStatusUpdate", "UnitTitle", null, new { @class = "btn btn-info", style = "width: 70px;margin-right: 20px;" })
        <button class="btn btn-info" onclick="$('.overlay-bg, .overlay-content').hide();GetCurrentCurtailment($('#dueDate').val());">Cancel</button>


    }
    else
    {
        //ViewBag.ttlAccess = 0;
        <div id="payOffAlert" class="alert alert-info" role="alert">
            These <strong>VIN NUMBERS</strong>  Units are Successfully paid off.
        </div><br />
        <span> Press OK to continue</span><br />
        <br />
        @*@Html.ActionLink("OK", "TitleStatusUpdate", "UnitTitle", null, new { @class = "btn btn-info", style = "width: 70px;margin-right: 20px;" })*@
        <button class="btn btn-info" style="width: 70px;" onclick="$('.overlay-bg, .overlay-content').hide();GetCurrentCurtailment($('#dueDate').val());">OK</button>

    }

   






</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>
