@model BankLoanSystem.Models.Unit

@{
    ViewBag.Title = "Add Unit Page";
    Layout = "~/Views/Shared/_UnitAdvance.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">



<link href="~/Content/pikaday.css" rel="stylesheet" />
<link href="~/Content/theme.css" rel="stylesheet" />
<link href="~/Content/triangle.css" rel="stylesheet" />
<script src="~/scripts/moment.js"></script>
<script src="~/scripts/pikaday.js"></script>

<script src="~/scripts/jquery-1.10.2.js"></script>
<script src="~/scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script src="~/scripts/CommonFunctions.js"></script>
@*<script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>*@

@*<script src="//code.jquery.com/jquery-1.10.2.js"></script>*@
<script src="~/scripts/jquery-1.10.2.js"></script>
@*<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>*@
<script src="~/scripts/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">

<link href="~/Content/combo.css" rel="stylesheet" />
<script src="~/scripts/combo.js"></script>


<style type="text/css">
    .validation-summary {
        display: none;
    }



        .validation-summary.validation-summary-errors {
            display: block;
        }

    .ui-state-default {
        background: none;
        background-color: white;
    }

    .info-unit {
        margin-left: 0px;
        margin-right: 20px;
        border-radius: 15px;
        border: 2px solid #8D987E;
        padding: 20px 20px 20px 20px;
    }

    .validation-error {
        z-index: 10001;
        font-weight: bold;
        position: absolute;
        font-size: 12px;
    }

    .form-horizontal .control-label {
        text-align: left;
        padding-left: 60px;
    }

    .ui-autocomplete {
        max-height: 500px;
        overflow-y: auto; /* prevent horizontal scrollbar */
        overflow-x: hidden; /* add padding to account for vertical scrollbar */
        z-index: 10005 !important;
    }

    .custom-combobox-input {
        text-transform: capitalize;
        width: 150px;
    }
    .trim {
        text-transform: capitalize;
    }
    .cap {
        text-transform: uppercase;
    }

    input[type='file'] {
  color: transparent;
}
</style>

@using (Ajax.BeginForm("AddUnit", null, new AjaxOptions()
{
    OnComplete = "function(data) { alert(data.get_response().get_object().Result); }",
    OnFailure = "handleError",
    HttpMethod = "POST",
    LoadingElementId = "loadingDiv"
}, new { enctype = "multipart/form-data", id = "form" }))
{
    @Html.AntiForgeryToken()

    <form>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

            @*UNIT MODEL START*@
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UnitTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.HiddenFor(model => model.LoanId)
                    <div class="col-md-10">
                        @{
                            List<SelectListItem> ListOfUnitTypes = new List<SelectListItem>();

                            var id = 0;
                            var name = "";
                            foreach (var type in ViewBag.loanDetails.selectedUnitTypes)
                            {

                                id = type.unitTypeId;
                                name = type.unitTypeName;

                                if (id == ViewBag.loanDetails.defaultUnitType)
                                {
                                    ListOfUnitTypes.Add(new SelectListItem
                                    {
                                        Value = id.ToString(),
                                        Text = name,
                                        Selected = true
                                    });
                                }
                                else
                                {
                                    ListOfUnitTypes.Add(new SelectListItem
                                    {
                                        Value = id.ToString(),
                                        Text = name
                                    });
                                }
                                id = 0;
                                name = "";
                            }
                        }
                        @if (ViewBag.loanDetails.selectedUnitTypes.Count == 1)
                        {
                            @*@Html.DropDownListFor(model => model.UnitTypeId, ListOfUnitTypes, new { @id = "unitType", @class = "form-control col-sm-2", @Style = "width: 22%;", @disabled = "disabled" })*@
                            @Html.HiddenFor(model => model.UnitTypeId, new { @id = "unitType" })
                            @Html.Label("", (string)ViewBag.UnitTypeId, htmlAttributes: new { @class = "form-control", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block; width: 27.4%;" })

                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.UnitTypeId, ListOfUnitTypes, new { @id = "unitType", @class = "form-control col-sm-2", @Style = "width: 22%;", onChange = "valueChangeUnitType();" })
                        }
                        @Html.ValidationMessageFor(model => model.UnitTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="info-unit" id="vehicle">
                    <div class="form-group">
                        @Html.LabelFor(model => model.vehicle.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.vehicle.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "vehicleVin", @style= "width: 225px;" } })
                            @Html.ValidationMessageFor(model => model.vehicle.IdentificationNumber, "", new { @class = "text-danger" })
                            <div id="vehicleVIN" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vehicle.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.vehicle.Year, new { htmlAttributes = new { @id = "editor1-1", @Style = "display: none;" } })
                        <div class="col-sm-4" id="div-combobox1-1">
                            @{
                                List<SelectListItem> yearlist = new List<SelectListItem>();
                                for (var i = @DateTime.Now.AddYears(+1).Year; i >= 1980; i--)
                                {
                                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                }
                            }

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox1-1"  })
                            @Html.ValidationMessageFor(model => model.vehicle.Year, "", new { @class = "text-danger" })
                            <div id="vehicleyear" class="validation-error"><span id="vehicleyearspan" class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.vehicle.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.vehicle.Make, new { htmlAttributes = new { @id = "editor1-2", @Style = "display: none;" } })
                        <div class="col-sm-2" onmouseover="GetMakes($('#combobox1-1'),'#combobox1-2',1);" id="div-combobox1-2">
                            <div>
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox1-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.vehicle.Make, "", new { @class = "text-danger col-md-2" })
                            <div id="vehiclemake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vehicle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.vehicle.Model, new { htmlAttributes = new { @id = "editor1-3", @Style = "display: none;" } })
                        <div class="col-sm-4" onmouseover="GetModels($('#combobox1-1'),$('#combobox1-2'),'#combobox1-3',1);" id="div-combobox1-3">
                            <div>
                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox1-3" })
                            </div>
                            @Html.ValidationMessageFor(model => model.vehicle.Model, "", new { @class = "text-danger" })
                            <div id="vehiclemodel" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.vehicle.Trim, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-2">
                            @Html.EditorFor(model => model.vehicle.Trim, new { htmlAttributes = new { @class = "form-control trim", @Style = "width: 154%;", @id = "vehicletrim" } })
                            @Html.ValidationMessageFor(model => model.vehicle.Trim, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vehicle.Miles, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.vehicle.Miles, new { htmlAttributes = new { @class = "form-control miles", @id = "vehiclemiles", @Style = "width: 68%;text-align: right;" } })
                            @Html.ValidationMessageFor(model => model.vehicle.Miles, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.vehicle.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.vehicle.Color, new { htmlAttributes = new { @id = "editor1-4", @Style = "display: none;" } })
                        <div class="col-sm-2" id="div-combobox1-4">
                            @{
                                List<SelectListItem> Colourlist = new List<SelectListItem>();

                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "Black",
                                    Value = "Black"
                                });
                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "Blue",
                                    Value = "Blue"
                                });
                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "Brown",
                                    Value = "Brown"
                                });
                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "Gray",
                                    Value = "Gray"
                                });
                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "Green",
                                    Value = "Green"
                                });
                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "Silver",
                                    Value = "Silver"
                                });
                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "White",
                                    Value = "White"
                                });
                                Colourlist.Add(new SelectListItem
                                {
                                    Text = "Yellow",
                                    Value = "Yellow"
                                });
                            }
                            @Html.DropDownList("color", Colourlist, "-- select type --", new { @class = "form-control", @Style = "width: 223%;", @id = "combobox1-4" })
                            @Html.ValidationMessageFor(model => model.vehicle.Color, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vehicle.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            <div>
                                @Html.RadioButtonFor(model => model.vehicle.NewOrUsed, true) New
                                @Html.RadioButtonFor(model => model.vehicle.NewOrUsed, false) Used
                                @Html.ValidationMessageFor(model => model.vehicle.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 11%;width: 120%; " })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="info-unit" id="rv">
                    <div class="form-group">
                        @Html.LabelFor(model => model.rv.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.rv.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "rvVin" } })
                            @Html.ValidationMessageFor(model => model.rv.IdentificationNumber, "", new { @class = "text-danger" })
                            <div id="rvVIN" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.rv.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.rv.Year, new { htmlAttributes = new { @id = "editor2-1", @Style = "display: none;" } })
                        <div class="col-sm-4" id="div-combobox2-1">

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox2-1" })
                            @Html.ValidationMessageFor(model => model.rv.Year, "", new { @class = "text-danger" })
                            <div id="rvyear" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.rv.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.rv.Make, new { htmlAttributes = new { @id = "editor2-2", @Style = "display: none;" } })
                        <div class="col-sm-2">
                            <div onmouseover="GetMakes($('#combobox2-1'),'#combobox2-2',2);" id="div-combobox2-2">
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox2-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.rv.Make, "", new { @class = "text-danger" })
                            <div id="rvmake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.rv.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.rv.Model, new { htmlAttributes = new { @id = "editor2-3", @Style = "display: none;" } })
                        <div class="col-sm-4">
                            <div onmouseover="GetModels($('#combobox2-1'),$('#combobox2-2'),'#combobox2-3',2);" id="div-combobox2-3">
                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox2-3" })
                            </div>
                            @Html.ValidationMessageFor(model => model.rv.Model, "", new { @class = "text-danger" })
                            <div id="rvmodel" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.rv.Miles, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-2" style="width: 32.667%;">
                            @Html.EditorFor(model => model.rv.Miles, new { htmlAttributes = new { @class = "form-control miles", @id = "rvmiles", @Style = "width: 68%;text-align: right;" } })
                            @Html.ValidationMessageFor(model => model.rv.Miles, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.rv.Length, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.rv.Length, new { htmlAttributes = new { @class = "form-control lengths", @id = "rvlength",@style= "width: 179px;text-align: right;" } })
                            @Html.ValidationMessageFor(model => model.rv.Length, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.rv.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            <div>
                                @Html.RadioButtonFor(model => model.rv.NewOrUsed, true) New
                                @Html.RadioButtonFor(model => model.rv.NewOrUsed, false) Used
                                @Html.ValidationMessageFor(model => model.rv.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 6%;width: 120%; " })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="info-unit" id="camper">
                    <div class="form-group">
                        @Html.LabelFor(model => model.camper.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.camper.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "camperVin" } })
                            @Html.ValidationMessageFor(model => model.camper.IdentificationNumber, "", new { @class = "text-danger" })
                            <div id="camperVIN"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.camper.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.camper.Year, new { htmlAttributes = new { @id = "editor3-1", @Style = "display: none;" } })
                        <div class="col-sm-4" id="div-combobox3-1">

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox3-1" })
                            @Html.ValidationMessageFor(model => model.camper.Year, "", new { @class = "text-danger" })
                            <div id="camperyear" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.camper.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.camper.Make, new { htmlAttributes = new { @id = "editor3-2", @Style = "display: none;" } })
                        <div class="col-sm-2">
                            <div onmouseover="GetMakes($('#combobox3-1'),'#combobox3-2',3);" id="div-combobox3-2">
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox3-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.camper.Make, "", new { @class = "text-danger" })
                            <div id="campermake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.camper.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.camper.Model, new { htmlAttributes = new { @id = "editor3-3", @Style = "display: none;" } })
                        <div class="col-sm-4">
                            <div onmouseover="GetModels($('#combobox3-1'),$('#combobox3-2'),'#combobox3-3',3);" id="div-combobox3-3">
                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox3-3" })
                            </div>
                            @Html.ValidationMessageFor(model => model.camper.Model, "", new { @class = "text-danger" })
                            <div id="campermodel" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.camper.Length, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-2" style="width: 32.667%;">
                            @Html.EditorFor(model => model.camper.Length, new { htmlAttributes = new { @class = "form-control lengths", @id = "camperlength", @style = "width: 179px;text-align: right;" } })
                            @Html.ValidationMessageFor(model => model.camper.Length, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.camper.HitchStyle, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            <div>
                                @{
                                    List<SelectListItem> hitchlist = new List<SelectListItem>();

                                    hitchlist.Add(new SelectListItem
                                    {
                                        Text = "Bumper Pull",
                                        Value = "Bumper Pull"
                                    });
                                    hitchlist.Add(new SelectListItem
                                    {
                                        Text = "5th Wheel",
                                        Value = "5th Wheel"
                                    });
                                    hitchlist.Add(new SelectListItem
                                    {
                                        Text = "Gooseneck",
                                        Value = "Gooseneck"
                                    });
                                }
                                @Html.DropDownListFor(model => model.camper.HitchStyle, hitchlist, "-- select style --", new { @class = "form-control", @id = "camperhitch" ,@style= "width: 179px;" })
                                @Html.ValidationMessageFor(model => model.camper.HitchStyle, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.camper.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-2">
                            <div>
                                @Html.RadioButtonFor(model => model.camper.NewOrUsed, true) New
                                @Html.RadioButtonFor(model => model.camper.NewOrUsed, false) Used
                                @Html.ValidationMessageFor(model => model.camper.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 11%;width: 120%; " })
                            </div>

                        </div>

                    </div>

                </div>


                <div class="info-unit" id="atv">
                    <div class="form-group">
                        @Html.LabelFor(model => model.atv.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.atv.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "atvVin" } })
                            @Html.ValidationMessageFor(model => model.atv.IdentificationNumber, "", new { @class = "text-danger" })
                            <div id="atvVIN" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.atv.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.atv.Year, new { htmlAttributes = new { @id = "editor4-1", @Style = "display: none;" } })
                        <div class="col-sm-4" id="div-combobox4-1">

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox4-1" })
                            @Html.ValidationMessageFor(model => model.atv.Year, "", new { @class = "text-danger" })
                            <div id="atvyear" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.atv.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.atv.Make, new { htmlAttributes = new { @id = "editor4-2", @Style = "display: none;" } })
                        <div class="col-sm-2">
                            <div onmouseover="GetMakes($('#combobox4-1'),'#combobox4-2',4);" id="div-combobox4-2">
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox4-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.atv.Make, "", new { @class = "text-danger" })
                            <div id="atvmake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.atv.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.atv.Model, new { htmlAttributes = new { @id = "editor4-3", @Style = "display: none;" } })
                        <div class="col-sm-4">
                            <div onmouseover="GetModels($('#combobox4-1'),$('#combobox4-2'),'#combobox4-3',4);" id="div-combobox4-3">
                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox4-3" })
                            </div>
                            @Html.ValidationMessageFor(model => model.atv.Model, "", new { @class = "text-danger" })
                            <div id="atvmodel" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.atv.Miles, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-2" style="width: 32.667%;">
                            @Html.EditorFor(model => model.atv.Miles, new { htmlAttributes = new { @class = "form-control miles", @id = "atvmiles", @Style = "width: 68%;text-align: right;" } })
                            @Html.ValidationMessageFor(model => model.atv.Miles, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.atv.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            <div>
                                @Html.RadioButtonFor(model => model.atv.NewOrUsed, true) New
                                @Html.RadioButtonFor(model => model.atv.NewOrUsed, false) Used
                                @Html.ValidationMessageFor(model => model.atv.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 5%;width: 120%; " })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="info-unit" id="boat">
                    <div class="form-group">
                        @Html.LabelFor(model => model.boat.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.boat.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "boatVin" } })
                            @Html.ValidationMessageFor(model => model.boat.IdentificationNumber, "", new { @class = "text-danger" })
                            <div id="boatVIN" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.boat.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.boat.Year, new { htmlAttributes = new { @id = "editor5-1", @Style = "display: none;" } })
                        <div class="col-sm-4" id="div-combobox5-1">

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox5-1" })
                            @Html.ValidationMessageFor(model => model.boat.Year, "", new { @class = "text-danger" })
                            <div id="boatyear" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.boat.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.boat.Make, new { htmlAttributes = new { @id = "editor5-2", @Style = "display: none;" } })
                        <div class="col-sm-2">
                            <div onmouseover="GetMakes($('#combobox5-1'),'#combobox5-2',5);" id="div-combobox5-2">
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox5-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.boat.Make, "", new { @class = "text-danger" })
                            <div id="boatmake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.boat.TrailerId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.boat.TrailerId, new { htmlAttributes = new { @class = "form-control cap", @id = "boattrailer", @maxlength = 17 } })
                            @Html.ValidationMessageFor(model => model.boat.TrailerId, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.boat.EngineSerial, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-2" style="width: 32.667%;">
                            @Html.EditorFor(model => model.boat.EngineSerial, new { htmlAttributes = new { @class = "form-control cap", @id = "boatserial", @maxlength = 17 } })
                            @Html.ValidationMessageFor(model => model.boat.EngineSerial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.boat.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            <div>
                                @Html.RadioButtonFor(model => model.boat.NewOrUsed, true) New
                                @Html.RadioButtonFor(model => model.boat.NewOrUsed, false) Used
                                @Html.ValidationMessageFor(model => model.boat.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 6%;width: 120%; " })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="info-unit" id="motorcycle">
                    <div class="form-group">
                        @Html.LabelFor(model => model.motorcycle.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.motorcycle.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "motorcycleVin" } })
                            @Html.ValidationMessageFor(model => model.motorcycle.IdentificationNumber, "", new { @class = "text-danger" })
                            <div id="motorcycleVIN" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.motorcycle.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.motorcycle.Year, new { htmlAttributes = new { @id = "editor6-1", @Style = "display: none;" } })
                        <div class="col-sm-4" id="div-combobox6-1">

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox6-1" })
                            @Html.ValidationMessageFor(model => model.motorcycle.Year, "", new { @class = "text-danger" })
                            <div id="motorcycleyear" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.motorcycle.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.motorcycle.Make, new { htmlAttributes = new { @id = "editor6-2", @Style = "display: none;" } })
                        <div class="col-sm-2">
                            <div onmouseover="GetMakes($('#combobox6-1'),'#combobox6-2',6);" id="div-combobox6-2">
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox6-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.motorcycle.Make, "", new { @class = "text-danger" })
                            <div id="motorcyclemake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.motorcycle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.motorcycle.Model, new { htmlAttributes = new { @id = "editor6-3", @Style = "display: none;" } })
                        <div class="col-sm-4">
                            <div onmouseover="GetModels($('#combobox6-1'),$('#combobox6-2'),'#combobox6-3',5);" id="div-combobox6-3">
                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox6-3" })
                            </div>
                            @Html.ValidationMessageFor(model => model.motorcycle.Model, "", new { @class = "text-danger" })
                            <div id="motorcyclemodel" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.motorcycle.Miles, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-2" style="width: 32.667%;">
                            @Html.EditorFor(model => model.motorcycle.Miles, new { htmlAttributes = new { @class = "form-control miles", id = "motorcyclemiles", @Style = "width: 68%;text-align: right;" } })
                            @Html.ValidationMessageFor(model => model.motorcycle.Miles, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" id="div-combobox6-4">
                        @Html.LabelFor(model => model.motorcycle.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.motorcycle.Color, new { htmlAttributes = new { @id = "editor6-4", @Style = "display: none;" } })
                        <div class="col-sm-4">
                            @Html.DropDownList("color", Colourlist, "-- select type --", new { @class = "form-control", @id = "combobox6-4" })
                            @Html.ValidationMessageFor(model => model.motorcycle.Color, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.motorcycle.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            <div>
                                @Html.RadioButtonFor(model => model.motorcycle.NewOrUsed, true) New
                                @Html.RadioButtonFor(model => model.motorcycle.NewOrUsed, false) Used
                                @Html.ValidationMessageFor(model => model.motorcycle.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 6%;width: 120%; " })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="info-unit" id="snowmobile">
                    <div class="form-group">
                        @Html.LabelFor(model => model.snowmobile.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.snowmobile.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "snowmobileVin" } })
                            @Html.ValidationMessageFor(model => model.snowmobile.IdentificationNumber, "", new { @class = "text-danger" })
                            <div id="snowmobileVIN" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.snowmobile.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.snowmobile.Year, new { htmlAttributes = new { @id = "editor7-1", @Style = "display: none;" } })
                        <div class="col-sm-4" id="div-combobox7-1">

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox7-1" })
                            @Html.ValidationMessageFor(model => model.snowmobile.Year, "", new { @class = "text-danger" })
                            <div id="snowmobileyear" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.snowmobile.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.snowmobile.Make, new { htmlAttributes = new { @id = "editor7-2", @Style = "display: none;" } })
                        <div class="col-sm-2">
                            <div onmouseover="GetMakes($('#combobox7-1'),'#combobox7-2',7);" id="div-combobox7-2">
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox7-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.snowmobile.Make, "", new { @class = "text-danger" })
                            <div id="snowmobilemake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.snowmobile.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.snowmobile.Model, new { htmlAttributes = new { @id = "editor7-3", @Style = "display: none;" } })
                        <div class="col-sm-4">
                            <div onmouseover="GetModels($('#combobox7-1'),$('#combobox7-2'),'#combobox7-3',6);" id="div-combobox7-3">
                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox7-3" })
                            </div>
                            @Html.ValidationMessageFor(model => model.snowmobile.Model, "", new { @class = "text-danger" })
                            <div id="snowmobilemodel" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.snowmobile.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            <div>
                                @Html.RadioButtonFor(model => model.snowmobile.NewOrUsed, true) New
                                @Html.RadioButtonFor(model => model.snowmobile.NewOrUsed, false) Used
                                @Html.ValidationMessageFor(model => model.snowmobile.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 6%;width: 120%; " })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="info-unit" id="heavyequipment">
                    <div class="form-group">
                        @Html.LabelFor(model => model.heavyequipment.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.heavyequipment.SerialNumber, new { htmlAttributes = new { @class = "form-control cap", @id = "heavyequipmentSerial" } })
                            @Html.ValidationMessageFor(model => model.heavyequipment.SerialNumber, "", new { @class = "text-danger" })
                            <div id="heavyequipmentVIN" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.heavyequipment.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.heavyequipment.Year, new { htmlAttributes = new { @id = "editor8-1", @Style = "display: none;" } })

                        <div class="col-sm-4" id="div-combobox8-1">

                            @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox8-1" })
                            @Html.ValidationMessageFor(model => model.heavyequipment.Year, "", new { @class = "text-danger" })
                            <div id="heavyequipmentyear" class="validation-error"><span class="text-danger"></span></div>
                        </div>

                        @Html.LabelFor(model => model.heavyequipment.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.heavyequipment.Make, new { htmlAttributes = new { @id = "editor8-2", @Style = "display: none;" } })
                        <div class="col-sm-2">
                            <div onmouseover="GetMakes($('#combobox8-1'),'#combobox8-2',8);" id="div-combobox8-2">
                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox8-2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.heavyequipment.Make, "", new { @class = "text-danger" })
                            <div id="heavyequipmentmake" class="validation-error"><span class="text-danger"></span></div>
                        </div>
                    </div>
                </div>
            </div>
            @*UNIT MODEL END*@

            @*PAYMENT DETAILS START*@
            <div class="info-unit" style="margin-top:20px">
                <div class="form-group">
                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @id = "txtCost", autocomplete = "off", @style = "text-align: right;" } })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                        <div id="tagscloud" class="validation-error"><span class="text-danger"></span></div>
                    </div>

                    @Html.LabelFor(model => model.AdvanceAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-3">
                        @if (ViewBag.Editable == "Yes")
                {
                            @Html.EditorFor(model => model.AdvanceAmount, new { htmlAttributes = new { @class = "form-control", @id = "txtAdvanceAmount", autocomplete = "off", @style = "text-align: right;" } })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.AdvanceAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "txtAdvanceAmount", autocomplete = "off", @style = "text-align: right;" } })
                        }
                        @Html.ValidationMessageFor(model => model.AdvanceAmount, "", new { @class = "text-danger" })
                        <div id="tagscloudAdvance" class="validation-error"><span class="text-danger"></span></div>
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Note, 5, 85, new { htmlAttributes = new { @class = "form-control-notebox" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (ViewBag.IsTitleTrack == "Yes")
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.TitleReceived, htmlAttributes: new { @class = "control-label col-md-4", style = "width:28%" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.RadioButtonFor(model => model.TitleReceived, "Yes", new { @id = "rdYes", @class = "titleReceived" }) Yes @*, @checked = "checked"*@
                                @Html.RadioButtonFor(model => model.TitleReceived, "No", new { @id = "rdNo", @class = "titleReceived" }) No
                                @Html.ValidationMessageFor(model => model.TitleReceived, "", new { @class = "text-danger", style = "top:100%;left:18%" })
                            </div>
                        </div>
                    </div>
                }
                @if (ViewBag.CompabyType == 2 && ViewBag.Upload == "Yes")
                {
                    <div class="form-group" id="fileUploader">
                        @Html.HiddenFor(i => i.FileName)
                        <label for="file" class="control-label col-md-3" style="width: 22%">Upload Image:</label>

                        <div class="col-md-3" id="fileUploaderInsideDiv" style="padding-left: 0px; margin-top: 10px">
                            <input type="file" id="fileToUpload" name="fileUpload" style="float: left;" />
                            <br />
                            <div><span id="spnFile" style="float: left; color: #FF0000"></span></div>

                            <div id="selectedFiles" class="control-section" style="width: 1000px"></div>

                            @*@Html.ValidationMessage("File")*@
                            @Html.Hidden("hdnFileUpload")

                            <div id="tagscloudFileUpload"><span class="text-danger"></span></div>
                        </div>

                    </div>

                }
            </div>
            @*PAYMENT DETAILS END*@

            <div class="form-group" style="margin-top:15px;margin-left: -87px">
                @Html.LabelFor(model => model.AdvanceNow, htmlAttributes: new { @class = "control-label col-md-5", style = "text-align:right" })
                <div class="col-md-2">
                    @Html.RadioButtonFor(model => model.AdvanceNow, "Yes", new { @id = "rdAdvanceYes", @class = "advanceNow" }) Yes
                    @Html.RadioButtonFor(model => model.AdvanceNow, "No", new { @id = "rdAdvanceNo", @class = "advanceNow" }) No
                    @Html.ValidationMessageFor(model => model.AdvanceNow, "", new { @class = "text-danger", style = "top:100%;left:18%" })
                </div>
            </div>

            @*<div class="form-group" id="advanceDate" hidden>
                    @Html.LabelFor(model => model.AdvanceDate, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.TextBox("StartDate", DateTime.Today, new {@class = "datepicker", @type = "date"})
                        @Html.ValidationMessageFor(model => model.AdvanceDate, "", new {@class = "text-danger"})
                    </div>
                </div>*@

            <div class="form-group" id="advanceDateFormDiv" hidden style="margin-left: -71px;">

                <div class="control-label col-sm-3" style="text-align:right;margin-left: 10px;">
                    @Html.LabelFor(model => model.AdvanceDate, htmlAttributes: new { })<span style="color:red"> *</span>
                </div>


                <div class="col-xs-3" id="advanceDateDiv">
                    @Html.EditorFor(model => model.AdvanceDate, new { htmlAttributes = new { @class = "form-control", placeholder = "MM/DD/YYYY", @id = "advanceDate", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.AdvanceDate, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group btn-panel">
                <input type="button" value="Cancel" id="btnCancel" class="btn btn-default cancel btn-right" tabindex="-1" style="float:right;margin-left:27%;margin-right:4%" />

                <input type="submit" value="Add" name="btnAdd" id="btnSubmit" class="btn btn-info btn-center" style="float:right;width:200px" />



            </div>
        </div>
    </form>
                                    }


<script type="text/javascript">

    _previousMakeYear = "";
    _previousMake     = "";   

    function getResult(data) {
        alert(data.get_response().get_object().Result);
        //$(location).attr('href', '/Unit/AddUnit?flag=1');
        if(data === 1)
            $(location).attr('href', '/Unit/AddUnit?flag=1');
        else if (data === 0)
            alert(data);
    }

    $( "#div-combobox1-1" ).focusin(function(){
        $('#vehicleyear').children('span').text("");
    });
    $( "#div-combobox1-2" ).focusin(function(){
        $('#vehiclemake').children('span').text("");
    });
    $( "#div-combobox1-3" ).focusin(function(){
        $('#vehiclemodel').children('span').text("");
    });
    $( "#div-combobox2-1" ).focusin(function(){
        $('#rvyear').children('span').text("");
    });
    $( "#div-combobox2-2" ).focusin(function(){
        $('#rvmake').children('span').text("");
    });
    $( "#div-combobox2-3" ).focusin(function(){
        $('#rvmodel').children('span').text("");
    });
    $( "#div-combobox3-1" ).focusin(function(){
        $('#camperyear').children('span').text("");
    });
    $( "#div-combobox3-2" ).focusin(function(){
        $('#campermake').children('span').text("");
    });
    $( "#div-combobox3-3" ).focusin(function(){
        $('#campermodel').children('span').text("");
    });
    $( "#div-combobox4-1" ).focusin(function(){
        $('#atvyear').children('span').text("");
    });
    $( "#div-combobox4-2" ).focusin(function(){
        $('#atvmake').children('span').text("");
    });
    $( "#div-combobox4-3" ).focusin(function(){
        $('#atvmodel').children('span').text("");
    });
    $( "#div-combobox5-1" ).focusin(function(){
        $('#boatyear').children('span').text("");
    });
    $( "#div-combobox5-2" ).focusin(function(){
        $('#boatmake').children('span').text("");
    });
    $( "#div-combobox6-1" ).focusin(function(){
        $('#motorcycleyear').children('span').text("");
    });
    $( "#div-combobox6-2" ).focusin(function(){
        $('#motorcyclemake').children('span').text("");
    });
    $( "#div-combobox6-3" ).focusin(function(){
        $('#motorcyclemodel').children('span').text("");
    });
    $( "#div-combobox7-1" ).focusin(function(){
        $('#snowmobileyear').children('span').text("");
    });
    $( "#div-combobox7-2" ).focusin(function(){
        $('#snowmobilemake').children('span').text("");
    });
    $( "#div-combobox7-3" ).focusin(function(){
        $('#snowmobilemodel').children('span').text("");
    });
    $( "#div-combobox8-1" ).focusin(function(){
        $('#heavyequipmentyear').children('span').text("");
    });
    $( "#div-combobox8-2" ).focusin(function(){
        $('#heavyequipmentmake').children('span').text("");
    });



    function GetModels(var1,var2,var3,id)
    {
        var checkYear = var1.val();
        var checkMake = var2.val();
        checkYear = var1.next().children('input').val();
        checkMake = var2.next().children('input').val();

        var markup = "";
        if(checkYear != "" && checkMake != ""){
            if(_previousMakeYear != checkYear|| _previousMake != checkMake){
                $.ajax({
                    url: '/Unit/GetModels',
                    type: 'POST',
                    contentType: 'application/json;',
                    data: JSON.stringify({ make: checkMake, year: checkYear , unitId :id }),
                    success: function (data) {
                        //var markup = "<option value='0'>-- select a model --</option>";
                        for (var x = 0; x < data.length; x++) {
                            markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                        }
                        $(var3).html(markup);
                        _previousMakeYear = checkYear;
                        _previousMake     = checkMake;
                    },
                    error: function (reponse) {
                    }
                });
            }
        }
        else{
            markup="";
            $(var3).html(markup);
        }
    }


    @*$("#btnSubmit").click(function(evt) {
        var model = @Html.Raw(Json.Encode(Model));

        $.ajax({
            url: '/Unit/AddUnit',
            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify({ unit : model}),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                //var markup = "<option value='0'>-- select a model --</option>";
                alert(data);
                evt.preventDefault();
            },
            error: function (reponse) {
                alert('error');
            }
        });

    });*@

    function GetMakes(var1,var2,id)
    {
        var checkYear = var1.val();
        checkYear = var1.next().children('input').val();
        var markup = "";
        if(checkYear != ""){
            if(_previousMakeYear != checkYear){
                $.ajax({
                    url: '/Unit/GetMakes',
                    type: 'POST',
                    contentType: 'application/json;',
                    data: JSON.stringify({year: checkYear , unitId :id}),
                    success: function (data) {
                        //var markup = "<option value='0'>-- select a model --</option>";
                        for (var x = 0; x < data.length; x++) {
                            markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                        }
                        $(var2).html(markup);
                        _previousMakeYear = checkYear;
                        _previousMake= "";
                    },
                    error: function (reponse) {
                    }
                });
            }
        }
        else{
            markup="";
            $(var2).html(markup);
        }
    }
    // focusout functions Start
    // --------------------------
    $('#div-combobox1-1').focusout(function(){
        var yearmakemodel = $('#combobox1-1').next().children('input').val();
        document.getElementById('editor1-1').value = yearmakemodel;
        focusoutcall('#vehicleyear span','#editor1-1','#combobox1-1',yearmakemodel);

    });
    $('#div-combobox1-2').focusout(function(){
        var yearmakemodel = $('#combobox1-2').next().children('input').val();
        document.getElementById('editor1-2').value = yearmakemodel;

    });
    $('#div-combobox1-3').focusout(function(){
        var yearmakemodel = $('#combobox1-3').next().children('input').val();
        document.getElementById('editor1-3').value = yearmakemodel;

    });
    $('#div-combobox1-4').focusout(function(){
        var yearmakemodel = $('#combobox1-4').next().children('input').val();
        document.getElementById('editor1-4').value = yearmakemodel;

    });
    $('#div-combobox2-1').focusout(function(){
        var yearmakemodel = $('#combobox2-1').next().children('input').val();
        document.getElementById('editor2-1').value = yearmakemodel;
        focusoutcall('#rvyear span','#editor2-1','#combobox2-1',yearmakemodel);

    });
    $('#div-combobox2-2').focusout(function(){
        var yearmakemodel = $('#combobox2-2').next().children('input').val();
        document.getElementById('editor2-2').value = yearmakemodel;

    });
    $('#div-combobox2-3').focusout(function(){
        var yearmakemodel = $('#combobox2-3').next().children('input').val();
        document.getElementById('editor2-3').value = yearmakemodel;

    });
    $('#div-combobox3-1').focusout(function(){
        var yearmakemodel = $('#combobox3-1').next().children('input').val();
        document.getElementById('editor3-1').value = yearmakemodel;
        focusoutcall('#camperyear span','#editor3-1','#combobox3-1',yearmakemodel);

    });
    $('#div-combobox3-2').focusout(function(){
        var yearmakemodel = $('#combobox3-2').next().children('input').val();
        document.getElementById('editor3-2').value = yearmakemodel;

    });
    $('#div-combobox3-3').focusout(function(){
        var yearmakemodel = $('#combobox3-3').next().children('input').val();
        document.getElementById('editor3-3').value = yearmakemodel;

    });
    $('#div-combobox4-1').focusout(function(){
        var yearmakemodel = $('#combobox4-1').next().children('input').val();
        document.getElementById('editor4-1').value = yearmakemodel;
        focusoutcall('#atvyear span','#editor4-1','#combobox4-1',yearmakemodel);

    });
    $('#div-combobox4-2').focusout(function(){
        var yearmakemodel = $('#combobox4-2').next().children('input').val();
        document.getElementById('editor4-2').value = yearmakemodel;

    });
    $('#div-combobox4-3').focusout(function(){
        var yearmakemodel = $('#combobox4-3').next().children('input').val();
        document.getElementById('editor4-3').value = yearmakemodel;

    });
    $('#div-combobox5-1').focusout(function(){
        var yearmakemodel = $('#combobox5-1').next().children('input').val();
        document.getElementById('editor5-1').value = yearmakemodel;
        focusoutcall('#boatyear span','#editor5-1','#combobox5-1',yearmakemodel);

    });
    $('#div-combobox5-2').focusout(function(){
        var yearmakemodel = $('#combobox5-2').next().children('input').val();
        document.getElementById('editor5-2').value = yearmakemodel;

    });
    $('#div-combobox6-1').focusout(function(){
        var yearmakemodel = $('#combobox6-1').next().children('input').val();
        document.getElementById('editor6-1').value = yearmakemodel;
        focusoutcall('#motorcycleyear span','#editor6-1','#combobox6-1',yearmakemodel);

    });
    $('#div-combobox6-2').focusout(function(){
        var yearmakemodel = $('#combobox6-2').next().children('input').val();
        document.getElementById('editor6-2').value = yearmakemodel;

    });
    $('#div-combobox6-3').focusout(function(){
        var yearmakemodel = $('#combobox6-3').next().children('input').val();
        document.getElementById('editor6-3').value = yearmakemodel;

    });
    $('#div-combobox6-4').focusout(function(){
        var yearmakemodel = $('#combobox6-4').next().children('input').val();
        document.getElementById('editor6-4').value = yearmakemodel;

    });
    $('#div-combobox7-1').focusout(function(){
        var yearmakemodel = $('#combobox7-1').next().children('input').val();
        document.getElementById('editor7-1').value = yearmakemodel;
        focusoutcall('#snowmobileyear span','#editor7-1','#combobox7-1',yearmakemodel);

    });
    $('#div-combobox7-2').focusout(function(){
        var yearmakemodel = $('#combobox7-2').next().children('input').val();
        document.getElementById('editor7-2').value = yearmakemodel;

    });
    $('#div-combobox7-3').focusout(function(){
        var yearmakemodel = $('#combobox7-3').next().children('input').val();
        document.getElementById('editor7-3').value = yearmakemodel;

    });
    $('#div-combobox8-1').focusout(function(){
        var yearmakemodel = $('#combobox8-1').next().children('input').val();
        document.getElementById('editor8-1').value = yearmakemodel;
        focusoutcall('#heavyequipmentyear span','#editor8-1','#combobox8-1',yearmakemodel);

    });
    $('#div-combobox8-2').focusout(function(){
        var yearmakemodel = $('#combobox8-2').next().children('input').val();
        document.getElementById('editor8-2').value = yearmakemodel;

    });
    // -------------------------
    //focusout functions End
    function focusoutcall(span,vareditor,varcombo, val){
        // $('#editor1-1').trigger('change');

        var len = val.length;
        if(len == 4){
            var isnum = /^\d+$/.test(val);
            if(isnum === false){
                //$(span).fadeIn();
                $(span).text("Invalid : enter only numbers");
                $(varcombo).next().children('input').val("");
                $(vareditor).val("");
                //$(span).delay(3000).fadeOut();
                $('.centered span').text('Error');
            }
            else{
                $(span).text("");
                $('.centered span').text('');
                middleSpanCheck();
            }
        }
        else if(len > 4){
            //$(span).fadeIn();
            $(span).text("Invalid : enter only 4 numbers");
            $(varcombo).next().children('input').val("");
            $(vareditor).val("");
            //$(span).delay(3000).fadeOut();
            $('.centered span').text('Error');

        }
        else if(len == 0){
            $(varcombo).next().children('input').val("");
            $(vareditor).val("");
            $('.centered span').text('');
            middleSpanCheck();

        }
        else{
            //$(span).fadeIn();
            $(span).text("Invalid : need 4 numbers");
            $(varcombo).next().children('input').val("");
            $(vareditor).val("");
            //$(span).delay(3000).fadeOut();
            $('.centered span').text('Error');
        }
    }

    // drop down combo boxes
    $(function() {
        $( "#combobox1-1" ).combobox();
        $( "#combobox1-2" ).combobox();
        $( "#combobox1-3" ).combobox();
        $( "#combobox1-4" ).combobox();
        $( "#combobox2-1" ).combobox();
        $( "#combobox2-2" ).combobox();
        $( "#combobox2-3" ).combobox();
        $( "#combobox3-1" ).combobox();
        $( "#combobox3-2" ).combobox();
        $( "#combobox3-3" ).combobox();
        $( "#combobox4-1" ).combobox();
        $( "#combobox4-2" ).combobox();
        $( "#combobox4-3" ).combobox();
        $( "#combobox5-1" ).combobox();
        $( "#combobox5-2" ).combobox();
        $( "#combobox6-1" ).combobox();
        $( "#combobox6-2" ).combobox();
        $( "#combobox6-3" ).combobox();
        $( "#combobox6-4" ).combobox();
        $( "#combobox7-1" ).combobox();
        $( "#combobox7-2" ).combobox();
        $( "#combobox7-3" ).combobox();
        $( "#combobox8-1" ).combobox();
        $( "#combobox8-2" ).combobox();
    });

    unitTypeInitialLoad();

    //Initial page load
    //hide panels
    function unitTypeInitialLoad() {
        $("#vehicle").hide();
        $("#rv").hide();
        $("#camper").hide();
        $("#atv").hide();
        $("#boat").hide();
        $("#motorcycle").hide();
        $("#snowmobile").hide();
        $("#heavyequipment").hide();

        document.getElementById('vehiclemiles').value = "";
        document.getElementById('rvmiles').value = "";
        document.getElementById('rvlength').value = "";
        document.getElementById('camperlength').value = "";
        document.getElementById('atvmiles').value = "";
        document.getElementById('motorcyclemiles').value = "";
    }


    //key up for bind child text box value to hidden box
    $('#vehicleVin').keyup(function () {
        //$("#vehicleVin").val(($("#vehicleVin").val()).toUpperCase());
        var vin1 =document.getElementById('vehicleVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#vehicleVin').val(vin2);
        if($('#vehicleVin').val().length == 17){
            $('#vehicleVIN span').text("");
            var vin =document.getElementById('vehicleVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox1-1').next().children('input').val(year);
                        document.getElementById('editor1-1').value = year;
                    }
                },
                error: function (reponse) {
                }
            });
        }
        else if($('#vehicleVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
           // $('#vehicleVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#vehicleVin').val().length < 17){
            //var vinlen = $('#vehicleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
           // $('#vehicleVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#vehicleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
           // $('#vehicleVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    // mouseleave for check vin number and bind year to year text box
    $('#vehicleVin').change (function () {
        //$("#vehicleVin").val(($("#vehicleVin").val()).toUpperCase());
        var vin1 =document.getElementById('vehicleVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#vehicleVin').val(vin2);
        if($('#vehicleVin').val().length == 17){
            var vin =document.getElementById('vehicleVin').value;
            $('#vehicleVIN span').text("");
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox1-1').next().children('input').val(year);
                        document.getElementById('editor1-1').value = year;
                    }
                },
                error: function (reponse) {
                }
            });
        }
        else if($('#vehicleVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#vehicleVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#vehicleVin').val().length < 17){
           // var vinlen = $('#vehicleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
           // $('#vehicleVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#vehicleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
           // $('#vehicleVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }

    });

    $('#rvVin').keyup(function () {
        //$("#rvVin").val(($("#rvVin").val()).toUpperCase());
        var vin1 =document.getElementById('rvVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#rvVin').val(vin2);
        if($('#rvVin').val().length == 17){
            $('#rvVIN span').text("");
            var vin =document.getElementById('rvVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox2-1').next().children('input').val(year);
                        document.getElementById('editor2-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }
        else if($('#rvVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
           // $('#rvVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#rvVin').val().length < 17){
            var vinlen = $('#rvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
           // $('#rvVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#rvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
           // $('#rvVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#rvVin').change(function () {
        //$("#rvVin").val(($("#rvVin").val()).toUpperCase());
        var vin1 =document.getElementById('rvVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#rvVin').val(vin2);
        if($('#rvVin').val().length == 17){
            $('#rvVIN span').text("");
            var vin =document.getElementById('rvVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox2-1').next().children('input').val(year);
                        document.getElementById('editor2-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }
        else if($('#rvVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#rvVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#rvVin').val().length < 17){
            var vinlen = $('#rvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#rvVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#rvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
           // $('#rvVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#camperVin').keyup(function () {
        //$("#camperVin").val(($("#camperVin").val()).toUpperCase());
        var vin1 =document.getElementById('camperVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#camperVin').val(vin2);
        if($('#camperVin').val().length == 17){
            $('#camperVIN span').text("");
            var vin =document.getElementById('camperVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox3-1').next().children('input').val(year);
                        document.getElementById('editor3-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }
        else if($('#camperVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
           // $('#camperVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#camperVin').val().length < 17){
            var vinlen = $('#camperVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#camperVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#camperVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#camperVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#camperVin').change(function () {
        //$("#camperVin").val(($("#camperVin").val()).toUpperCase());
        var vin1 =document.getElementById('camperVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#camperVin').val(vin2);
        if($('#camperVin').val().length == 17){
            $('#camperVIN span').text("");
            var vin =document.getElementById('camperVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox3-1').next().children('input').val(year);
                        document.getElementById('editor3-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#camperVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#camperVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#camperVin').val().length < 17){
            var vinlen = $('#camperVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#camperVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#camperVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#camperVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#atvVin').keyup(function () {
        //$("#atvVin").val(($("#atvVin").val()).toUpperCase());
        var vin1 =document.getElementById('atvVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#atvVin').val(vin2);
        if($('#atvVin').val().length == 17){
            $('#atvVIN span').text("");
            var vin =document.getElementById('atvVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox4-1').next().children('input').val(year);
                        document.getElementById('editor4-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#atvVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#atvVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#atvVin').val().length < 17){
            //var vinlen = $('#atvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#atvVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#atvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#atvVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#atvVin').change(function () {
        //$("#atvVin").val(($("#atvVin").val()).toUpperCase());
        var vin1 =document.getElementById('atvVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#atvVin').val(vin2);
        if($('#atvVin').val().length == 17){
            $('#atvVIN span').text("");
            var vin =document.getElementById('atvVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox4-1').next().children('input').val(year);
                        document.getElementById('editor4-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#atvVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#atvVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#atvVin').val().length < 17){
            //var vinlen = $('#atvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#atvVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#atvVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#atvVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#boatVin').keyup(function () {
        //$("#boatVin").val(($("#boatVin").val()).toUpperCase());
        var vin1 =document.getElementById('boatVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#boatVin').val(vin2);
        if($('#boatVin').val().length == 12){
            $('#boatVIN span').text("");
            var vin =document.getElementById('boatVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox5-1').next().children('input').val(year);
                        document.getElementById('editor5-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#boatVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#boatVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#boatVin').val().length < 12){
            //var vinlen = $('#boatVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#boatVIN span').text(12 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
           // var vinlen = $('#boatVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#boatVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#boatVin').change(function () {
        //$("#boatVin").val(($("#boatVin").val()).toUpperCase());
        var vin1 =document.getElementById('boatVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#boatVin').val(vin2);
        if($('#boatVin').val().length == 12){
            $('#boatVIN span').text("");
            var vin =document.getElementById('boatVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox5-1').next().children('input').val(year);
                        document.getElementById('editor5-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#boatVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#boatVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#boatVin').val().length < 12){
            //var vinlen = $('#boatVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#boatVIN span').text(12 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            //var vinlen = $('#boatVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#boatVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }

    });
    $('#motorcycleVin').keyup(function () {
        //$("#motorcycleVin").val(($("#motorcycleVin").val()).toUpperCase());
        var vin1 =document.getElementById('motorcycleVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#motorcycleVin').val(vin2);
        if($('#motorcycleVin').val().length == 17){
            $('#motorcycleVIN span').text("");
            var vin =document.getElementById('motorcycleVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox6-1').next().children('input').val(year);
                        document.getElementById('editor6-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#motorcycleVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#motorcycleVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#motorcycleVin').val().length < 17){
            //var vinlen = $('#motorcycleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#motorcycleVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            //var vinlen = $('#motorcycleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#motorcycleVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }

    });
    $('#motorcycleVin').change(function () {
        //$("#motorcycleVin").val(($("#motorcycleVin").val()).toUpperCase());
        var vin1 =document.getElementById('motorcycleVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#motorcycleVin').val(vin2);
        if($('#motorcycleVin').val().length == 17){
            $('#motorcycleVIN span').text("");
            var vin =document.getElementById('motorcycleVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox6-1').next().children('input').val(year);
                        document.getElementById('editor6-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#motorcycleVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#motorcycleVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#motorcycleVin').val().length < 17){
            //var vinlen = $('#motorcycleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#motorcycleVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            var vinlen = $('#motorcycleVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#motorcycleVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#snowmobileVin').keyup(function () {

        //$("#snowmobileVin").val(($("#snowmobileVin").val()).toUpperCase());
        var vin1 =document.getElementById('snowmobileVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#snowmobileVin').val(vin2);
        if($('#snowmobileVin').val().length == 17){
            $('#snowmobileVIN span').text("");
            var vin =document.getElementById('snowmobileVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox7-1').next().children('input').val(year);
                        document.getElementById('editor7-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#snowmobileVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#snowmobileVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#snowmobileVin').val().length < 17){
            //var vinlen = $('#snowmobileVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#snowmobileVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            //var vinlen = $('#snowmobileVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#snowmobileVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });
    $('#snowmobileVin').change(function () {
        //$("#snowmobileVin").val(($("#snowmobileVin").val()).toUpperCase());
        var vin1 =document.getElementById('snowmobileVin').value;
        var vin2 = vin1.replace(/\W/g, '');
        $('#snowmobileVin').val(vin2);
        if($('#snowmobileVin').val().length == 17){
            $('#snowmobileVIN span').text("");
            var vin =document.getElementById('snowmobileVin').value;
            $.ajax({
                url: '/Unit/GetYearByVin',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({vin: vin }),
                success: function (data) {
                    var year = data;
                    if(year != 0){
                        $('#combobox7-1').next().children('input').val(year);
                        document.getElementById('editor7-1').value = year;
                    }

                },
                error: function (reponse) {
                }
            });
        }else if($('#snowmobileVin').val().length == 0){
            //$('#vehicleVIN span').fadeIn();
            //$('#snowmobileVIN span').text("");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else if($('#snowmobileVin').val().length < 17){
            //var vinlen = $('#snowmobileVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#snowmobileVIN span').text(17 - vinlen + " charactors remaining");
            //$('#vehicleVIN span').delay(100).fadeOut();
        }
        else{
            //var vinlen = $('#snowmobileVin').val().length ;
            //$('#vehicleVIN span').fadeIn();
            //$('#snowmobileVIN span').text("charactors exceeded");
            //$('#vehicleVIN span').delay(100).fadeOut();

        }
    });

    //hide the panels
    //show one panel at a time

    initialUnitType();

    function initialUnitType(){
        var unitType  = '@ViewBag.loanDetails.defaultUnitType';
        changeUnitType(unitType);
        $(".miles").val("0");
        $(".lengths").val("0");
    }
    function valueChangeUnitType(){
        var unitType  = document.getElementById("unitType").value
        clearform();
        changeUnitType(unitType);
        $(".miles").val("0");
        $(".lengths").val("0");
    }
    function changeUnitType(unitType) {

        document.getElementById("form").reset();

        _previousMakeYear = "";
        _previousMake     = "";
        if (unitType == "1") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "1";
            $("#vehicle").show();
        } else if (unitType == "2") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "2";
            $("#rv").show();
        } else if (unitType == "3") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "3";
            $("#camper").show();
        } else if (unitType == "4") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "4";
            $("#atv").show();
        } else if (unitType == "5") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "5";
            $("#boat").show();
        } else if (unitType == "6") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "6";
            $("#motorcycle").show();
        } else if (unitType == "7") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "7";
            $("#snowmobile").show();
        } else if (unitType == "8") {
            unitTypeInitialLoad();
            document.getElementById("unitType").value = "8";
            $("#heavyequipment").show();
        } else {
            unitTypeInitialLoad();
        }

    }

    //$('.titleReceived').change(function() {
    //    var isUpload = $(this).filter(':checked').val();

    //    if (isUpload === "Yes") {
    //        $('#fileUploader').show();
    //    } else {
    //        $('#fileUploader').hide();
    //    }
    //    //alert(isUpload);
    //});

    //
    $('.advanceNow').change(function() {
        var isAdvance = $(this).filter(':checked').val();

        if (isAdvance === "Yes") {
            $('#advanceDateFormDiv').show();
            $('#btnSubmit').prop('value', 'Add and Advance');
        } else {
            $('#advanceDateFormDiv').hide();
            $('#btnSubmit').prop('value', 'Add');
        }
    });

    var files;
    var storedFiles = [];
    var upc = 0;

    //Reset the data and clear just the form
    $('#btnCancel').click(function() {
        clearform();
        $('#advanceDateFormDiv').hide();
        //$("#advanceDateFormDiv").attr('value', '');
        files = null;
        storedFiles = [];
        upc = 0;
        //$('#selectedFiles').children().parent().remove();
        $('#selectedFiles').children().remove();
        $(".miles").val("0");
        $(".lengths").val("0");
    });

    function clearform() {
        var unitType = document.getElementById("unitType").value;
        document.getElementById("form").reset();
        changeUnitType(unitType);
        _previousMakeYear = "";
        _previousMake     = "";

        // for all input field
        $('input').next('span').children('span').text('');

        // for dropdown field
        $('select').next('span').children('span').text('');

        $('#vehicleVIN').children('span').text('');
        $('#vehicleyear').children('span').text("");
        $('#vehiclemake').children('span').text("");
        $('#vehiclemodel').children('span').text("");

        $('#rvVIN').children('span').text('');
        $('#rvyear').children('span').text("");
        $('#rvmake').children('span').text("");
        $('#rvmodel').children('span').text("");

        $('#camperVIN').children('span').text('');
        $('#camperyear').children('span').text("");
        $('#campermake').children('span').text("");
        $('#campermodel').children('span').text("");

        $('#atvVIN').children('span').text('');
        $('#atvyear').children('span').text("");
        $('#atvmake').children('span').text("");
        $('#atvmodel').children('span').text("");

        $('#boatVIN').children('span').text('');
        $('#boatyear').children('span').text("");
        $('#boatmake').children('span').text("");

        $('#motorcycleVIN').children('span').text('');
        $('#motorcycleyear').children('span').text("");
        $('#motorcyclemake').children('span').text("");
        $('#motorcyclemodel').children('span').text("");

        $('#snowmobileVIN').children('span').text('');
        $('#snowmobileyear').children('span').text("");
        $('#snowmobilemake').children('span').text("");
        $('#snowmobilemodel').children('span').text("");

        $('#heavyequipmentVIN').children('span').text('');
        $('#heavyequipmentyear').children('span').text("");
        $('#heavyequipmentmake').children('span').text("");

        $('#tagscloudAdvance').children('span').text('');
        $('#tagscloud').children('span').text('');

        $('.centered span').text('');

    };
    // vin key press key block validation with 17 charactors and Miles 10 charactors

    $("#vehicleVin").keypress(function(e){
        if($('#vehicleVin').val().length >= 17){
            e.preventDefault();
        }
        else if(alphaNumericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#rvVin").keypress(function(e){
        if($('#rvVin').val().length >= 17){
            e.preventDefault();
        }
        else if(alphaNumericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#camperVin").keypress(function(e){
        if($('#camperVin').val().length >= 17){
            e.preventDefault();
        }
        else if(alphaNumericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#atvVin").keypress(function(e){
        if($('#atvVin').val().length >= 17){
            e.preventDefault();
        }
        else if(alphaNumericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#boatVin").keypress(function(e){
        if($('#boatVin').val().length >= 17){
            e.preventDefault();
        }
        else if(alphaNumericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#motorcycleVin").keypress(function(e){
        if($('#motorcycleVin').val().length >= 17){
            e.preventDefault();
        }
        else if(alphaNumericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#snowmobileVin").keypress(function(e){
        if($('#snowmobileVin').val().length >= 17){
            e.preventDefault();
        }
        else if(alphaNumericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#vehiclemiles").keypress(function(e){
        if($('#vehiclemiles').val().length >= 10){
            e.preventDefault();
        }
        else if(numericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#rvmiles").keypress(function(e){
        if($('#rvmiles').val().length >= 10){
            e.preventDefault();
        }
        else if(numericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#atvmiles").keypress(function(e){
        if($('#atvmiles').val().length >= 10){
            e.preventDefault();
        }
        else if(numericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#motorcyclemiles").keypress(function(e){
        if($('#motorcyclemiles').val().length >= 10){
            e.preventDefault();
        }
        else if(numericAllow(e)){

        }else{
            e.preventDefault();
        }
    });
    $("#rvlength").keypress(function(e){
        var val = $("#rvlength").val();
        if($('#rvlength').val().length >= 10){
            e.preventDefault();
        }
        else if(numericAllowDecimal(e,val)){

        }else{
            e.preventDefault();
        }
    });
    $("#camperlength").keypress(function(e){
        var val = $("#camperlength").val();
        if($('#camperlength').val().length >= 10){
            e.preventDefault();
        }
        else if(numericAllowDecimal(e,val)){

        }else{
            e.preventDefault();
        }
    });
    function numericAllowDecimal(e,val){
        var ch = e.which;
        if(val.indexOf('.')=== -1){
            if ((ch >= 48 && ch <= 57 )|| ch == 46) {
                return 1;
            }
        }else{
            if (ch >= 48 && ch <= 57 ) {
                return 1;
            }
        }
        return 0;
    }
    function alphaNumericAllow(e){
        var ch = e.which;
        if ((ch >= 48 && ch <= 57)||(ch >= 65 && ch <= 90)||(ch >= 97 && ch <= 122) ){
            return 1;
        }
        return 0;
    }
    function numericAllow(e){
        var ch = e.which;
        if (ch >= 48 && ch <= 57) {
            return 1;
        }
        return 0;
    }

    $(".miles").on('click', function(e) {
        if (this.value === "0") {
            document.getElementById(this.id).value = "";
        }
    });
    $(".miles").blur( function() {
        if (this.value === "") {
            document.getElementById(this.id).value = "0";
        }
    });
    $(".lengths").on('click', function(e) {
        if (this.value === "0") {
            document.getElementById(this.id).value = "";
        }
    });
    $(".lengths").blur( function() {
        if (this.value === "") {
            document.getElementById(this.id).value = "0";
        }
    });
    // cost tab///
    var model = @Html.Raw(Json.Encode(Model));
    var advancePt = model.AdvancePt;
    //var maxCost = model.LoanAmount * 100 / advancePt;
    var maxCost = model.Balance * 100 / advancePt;
    var maxAdvance = model.Balance ;


    $("#txtCost").on('click', function(e) {
        if (this.value === "0.00") {
            document.getElementById(this.id).value = "";
        }
        else if (this.value === "0") {
            document.getElementById(this.id).value = "";
        }
    });

    $("#txtAdvanceAmount").on('click', function(e) {
        if (this.value === "0.00") {
            document.getElementById(this.id).value = "";
        }
        else if (this.value === "0") {
            document.getElementById(this.id).value = "";
        }
    });

    //calculate advance
    $('#txtCost').keypress(function(e) {
        $("#tagscloud span").text("");
        if ((e.which >= 48 && e.which <= 57) || e.which === 46 || e.which === 8) {
            //var val = this.value + (e.which - 48);
            var cost = document.getElementById('txtCost').value;
            if (e.which !== 46 && e.which !== 8) {
                if (cost <= maxCost) {
                    //$("#tagscloudAdvance span").fadeOut();
                    $('#txtAdvanceAmount').removeClass('input-validation-error');
                    //$("#tagscloudAdvance span").text("");
                    $('#txtAdvanceAmount').next('span').children('span').text('');
                } else {
                    //$("#tagscloud span").fadeIn();
                    $(this).addClass('input-validation-error');
                    $("#tagscloud span").text("Cost must be less than balance");
                    //$("#tagscloud span").delay(1000).fadeOut();
                    $(this).removeClass('input-validation-error');
                    $("#tagscloud span");
                    e.preventDefault();
                }
            }

        } else {
            //$("#tagscloud span").fadeIn();
            //$(this).addClass('input-validation-error');
            //$("#tagscloud span").text("Invalid character");
            //$("#tagscloud span").delay(1000).fadeOut();
            //$(this).removeClass('input-validation-error');
            //$("#tagscloud span");

            e.preventDefault();


        }
    });

    //claculate advance when click back-space
    $('#txtCost').keyup(function(e) {
        if (e.keyCode === 8) {
            var val = this.value;
            var advanceAmount = (advancePt * val) / 100;
            document.getElementById('txtAdvanceAmount').value = advanceAmount;
            $("#tagscloud span").text("");
            $("#tagscloudAdvance span").text("");
        }
    });

    $('#txtCost').blur(function () {
        var val = $.trim($(this).val());
        if (val.indexOf(',') > -1) {
            val = val.replace(',', '');
        }

        var num = parseFloat(val);
        num = num.toFixed(2);
        if (isNaN(num)) {
            num = '';
        }

        if (isNaN(num)) {

            //$("#tagscloud span").fadeIn();
            $(this).addClass('input-validation-error');
            //$("#tagscloud span").text("Cost must be a positive number");

        }
        else if (Number(num) > Number(maxCost)) {
            //$("#tagscloud span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloud span").text("Cost must be less than balance");
        }
        else if (Number(num) == ""||Number(num) == 0.00) {
            //$("#tagscloudAdvance span").fadeIn();
            //$(this).addClass('input-validation-error');
            $("#tagscloud span").text("");
            $(this).val("0.00");
            $('#txtAdvanceAmount').val("0.00");
        }
        else if (Number(num) <= 0) {
            //$("#tagscloud span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloud span").text("Cost must be greater than zero");
        } else {
            //$("#tagscloud span").fadeOut();
            $(this).removeClass('input-validation-error');
            $("#tagscloud span").text("");

            //$("#tagscloudAdvance span").fadeOut();
            $('#txtAdvanceAmount').removeClass('input-validation-error');
            $("#tagscloudAdvance span").text("");
            $(this).val(num);

            var advanceAmount = (advancePt * num) / 100;

            advanceAmount = parseFloat(advanceAmount);
            advanceAmountRoundUp = advanceAmount.toFixed(2);
            document.getElementById('txtAdvanceAmount').value = advanceAmountRoundUp;


        }


        if(advanceAmount > maxCost){
            //$("#tagscloudAdvance span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloudAdvance span").text("Advance must be less than balance");
            //$("#tagscloudAdvance span").delay(1000).fadeOut();
            //$(this).removeClass('input-validation-error');
        }
    });

    $('#txtAdvanceAmount').keypress(function(e) {
        var cost = document.getElementById('txtCost').value;
        //alert(e.which);
        var advance = document.getElementById('txtAdvanceAmount').value;
        if ((e.which >= 48 && e.which <= 57) || e.which === 46 || e.which === 8) {
            //var val = this.value + (e.which - 48);
            //alert(cost + ' ' + val);
            if (e.which !== 46 && e.which !== 8) {
                if (cost === 0.00 || Number(advance) > Number(cost)) {
                    //$("#tagscloudAdvance span").fadeIn();
                    $(this).addClass('input-validation-error');
                    $("#tagscloudAdvance span").text("Advance must be less than cost");
                    //$("#tagscloudAdvance span").delay(1000).fadeOut();
                    //$(this).removeClass('input-validation-error');
                    e.preventDefault();
                }
                if (advance > maxAdvance) {
                    //$("#tagscloudAdvance span").fadeIn();
                    $(this).addClass('input-validation-error');
                    $("#tagscloudAdvance span").text("Advance must be less than balance");
                    //$("#tagscloudAdvance span").delay(1000).fadeOut();
                    //$(this).removeClass('input-validation-error');
                    e.preventDefault();
                }
            }
        } else {
            //$("#tagscloudAdvance span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloudAdvance span").text("Invalid character");
            //$("#tagscloudAdvance span").delay(1000).fadeOut();
            $(this).removeClass('input-validation-error');
            e.preventDefault();
        }
    });

    //claculate advance when click back-space
    $('#txtAdvanceAmount').keyup(function(e) {
        //alert(e.keyCode);
        if (e.keyCode === 8) {
            var val = this.value;
            //document.getElementById('txtAdvanceAmount').value = val;
            $("#tagscloudAdvance span").text("");
        }
    });

    $('#txtAdvanceAmount').blur(function () {
        var cost = document.getElementById('txtCost').value;
        var advance = document.getElementById('txtAdvanceAmount').value;
        var val = $.trim($(this).val());

        if (val.indexOf(',') > -1) {
            val = val.replace(',', '');
        }

        var num = parseFloat(val);
        num = num.toFixed(2);
        if (isNaN(num)) {
            num = '';
        }

        if (isNaN(num)) {

            //$("#tagscloudAdvance span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloudAdvance span").text("Advance must be a positive number");
        }
        else if (Number(num) > Number(cost)) {
            //$("#tagscloudAdvance span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloudAdvance span").text("Advance  must be less than cost");
        }
        else if (Number(num) == "") {
            //$("#tagscloudAdvance span").fadeIn();
            $(this).removeClass('input-validation-error');
            $("#tagscloudAdvance span").text("");
        }
        else if (Number(num) <= 0) {
            //$("#tagscloudAdvance span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloudAdvance span").text("Advance must be greater than zero");
        }
        else if (advance > maxAdvance) {
            //$("#tagscloudAdvance span").fadeIn();
            $(this).addClass('input-validation-error');
            $("#tagscloudAdvance span").text("Advance must be less than balance");
            //$("#tagscloudAdvance span").delay(1000).fadeOut();
            //$(this).removeClass('input-validation-error');
            e.preventDefault();
        }
        else {
            //$("#tagscloudAdvance span").fadeOut();
            $(this).removeClass('input-validation-error');
            $("#tagscloudAdvance span").text("");
        }
        //if (advance > cost) {
        //    alert("checked");
        //    //$("#tagscloudAdvance span").fadeIn();
        //    $("#tagscloudAdvance span").addClass('input-validation-error');
        //    $("#tagscloudAdvance span").text("Advance must be less than balance");
        //    //$("#tagscloudAdvance span").delay(1000).fadeOut();
        //    //$(this).removeClass('input-validation-error');
        //}
        $(this).val(num);
        if (num == "") {
            //$("#tagscloudAdvance span").fadeIn();
            $(this).val("0.00");
        }
    });

    $('#btnSubmit').click(function(e) {

        var unitType = document.getElementById("unitType").value;

        if (unitType == "1") {
            var vin = document.getElementById("vehicleVin").value;
            var trim = document.getElementById("vehicletrim").value;
            var miles = document.getElementById("vehiclemiles").value;

            if ($('#combobox1-1').next().children('input').val() == "") {
                //$('#vehicleyear span').fadeIn();
                $('#vehicleyear span').text("year required");
                //$('#vehicleyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || trim == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox1-2').next().children('input').val() == "") {
                //$('#vehiclemake span').fadeIn();
                $('#vehiclemake span').text("make required");
                // $('#vehiclemake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || trim == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox1-3').next().children('input').val() == "") {
                // $('#vehiclemodel span').fadeIn();
                $('#vehiclemodel span').text("model required");
                //$('#vehiclemodel span').delay(1000).fadeOut();
                if (vin == "" || trim == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
        } else if (unitType == "2") {

            var vin = document.getElementById("rvVin").value;
            var length = document.getElementById("rvlength").value;
            var miles = document.getElementById("rvmiles").value;

            if ($('#combobox2-1').next().children('input').val() == "") {
                //$('#rvyear span').fadeIn();
                $('#rvyear span').text("year required");
                //$('#rvyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || length == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox2-2').next().children('input').val() == "") {
                //$('#rvmake span').fadeIn();
                $('#rvmake span').text("make required");
                //$('#rvmake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || length == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox2-3').next().children('input').val() == "") {
                //$('#rvmodel span').fadeIn();
                $('#rvmodel span').text("model required");
                //$('#rvmodel span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || length == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }


        } else if (unitType == "3") {

            var vin = document.getElementById("camperVin").value;
            var length = document.getElementById("camperlength").value;
            var hitch = document.getElementById("camperhitch").value;

            if ($('#combobox3-1').next().children('input').val() == "") {
                //$('#camperyear span').fadeIn();
                $('#camperyear span').text("year required");
                //$('#camperyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || length == "" || hitch == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox3-2').next().children('input').val() == "") {
                //$('#campermake span').fadeIn();
                $('#campermake span').text("make required");
                //$('#campermake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || length == "" || hitch == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox3-3').next().children('input').val() == "") {
                //$('#campermodel span').fadeIn();
                $('#campermodel span').text("model required");
                //$('#campermodel span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || length == "" || hitch == "") {
                } else {
                    e.preventDefault();
                }
            }

        } else if (unitType == "4") {

            var vin = document.getElementById("atvVin").value;
            var miles = document.getElementById("atvmiles").value;

            if ($('#combobox4-1').next().children('input').val() == "") {
                //$('#atvyear span').fadeIn();
                $('#atvyear span').text("year required");
                //$('#atvyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox4-2').next().children('input').val() == "") {
                //$('#atvmake span').fadeIn();
                $('#atvmake span').text("make required");
                //$('#atvmake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox4-3').next().children('input').val() == "") {
                //$('#atvmodel span').fadeIn();
                $('#atvmodel span').text("model required");
                //$('#atvmodel span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }

        } else if (unitType == "5") {

            var vin = document.getElementById("boatVin").value;
            var trailer = document.getElementById("boattrailer").value;
            var serial = document.getElementById("boatserial").value;

            if ($('#combobox5-1').next().children('input').val() == "") {
                //$('#boatyear span').fadeIn();
                $('#boatyear span').text("year required");
                //$('#boatyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || trailer == "" || serial == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox5-2').next().children('input').val() == "") {
                //$('#boatmake span').fadeIn();
                $('#boatmake span').text("make required");
                //$('#boatmake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || trailer == "" || serial == "") {
                } else {
                    e.preventDefault();
                }
            }


        } else if (unitType == "6") {
            var vin = document.getElementById("motorcycleVin").value;
            var miles = document.getElementById("motorcyclemiles").value;

            if ($('#combobox6-1').next().children('input').val() == "") {
                //$('#motorcycleyear span').fadeIn();
                $('#motorcycleyear span').text("year required");
                //$('#motorcycleyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox6-2').next().children('input').val() == "") {
                //$('#motorcyclemake span').fadeIn();
                $('#motorcyclemake span').text("make required");
                //$('#motorcyclemake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox6-3').next().children('input').val() == "") {
                //$('#motorcyclemodel span').fadeIn();
                $('#motorcyclemodel span').text("make required");
                //$('#motorcyclemodel span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }

        } else if (unitType == "7") {
            var vin = document.getElementById("snowmobileVin").value;

            if ($('#combobox7-1').next().children('input').val() == "") {
                //$('#snowmobileyear span').fadeIn();
                $('#snowmobileyear span').text("year required");
                //$('#snowmobileyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox7-2').next().children('input').val() == "") {
                //$('#snowmobilemake span').fadeIn();
                $('#snowmobilemake span').text("make required");
                //$('#snowmobilemake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox7-3').next().children('input').val() == "") {
                //$('#snowmobilemodel span').fadeIn();
                $('#snowmobilemodel span').text("make required");
                //$('#snowmobilemodel span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
        } else if (unitType == "8") {
            var vin = document.getElementById("heavyequipmentSerial").value;

            if ($('#combobox8-1').next().children('input').val() == "") {
                //$('#heavyequipmentyear span').fadeIn();
                $('#heavyequipmentyear span').text("year required");
                //$('#heavyequipmentyear span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }
            if ($('#combobox8-2').next().children('input').val() == "") {
                //$('#heavyequipmentmake span').fadeIn();
                $('#heavyequipmentmake span').text("make required");
                //$('#heavyequipmentmake span').delay(1000).fadeOut();
                $('.centered span').text('Error');
                if (vin == "" || miles == "") {
                } else {
                    e.preventDefault();
                }
            }

        } else {

        }

        var cost = parseFloat(document.getElementById('txtCost').value);
        var advance = parseFloat(document.getElementById('txtAdvanceAmount').value);
        if (advance > cost) {
            //$("#tagscloudAdvance span").fadeIn();
            //$("#tagscloudAdvance span").addClass('input-validation-error');
            //$("#tagscloudAdvance span").text("Advance must be less than cost");
            //$("#tagscloudAdvance span").delay(1000).fadeOut();
            //$(this).removeClass('input-validation-error');
            e.preventDefault();
        } else if (cost > maxCost) {
            //$("#tagscloudAdvance span").fadeIn();
            //$("#tagscloudAdvance span").addClass('input-validation-error');
            //$("#tagscloudAdvance span").text("Advance must be less than balance");
            //$("#tagscloudAdvance span").delay(1000).fadeOut();
            //$(this).removeClass('input-validation-error');
            e.preventDefault();
        } else if (advance > maxAdvance) {
            //$("#tagscloudAdvance span").fadeIn();
            //$("#tagscloudAdvance span").addClass('input-validation-error');
            //$("#tagscloudAdvance span").text("Advance must be less than balance");
            //$("#tagscloudAdvance span").delay(1000).fadeOut();
            //$(this).removeClass('input-validation-error');
            e.preventDefault();
        } else {
        }

    });
    $('input').blur(function() {

    });

    $('#Note').keyup(function(e) {
        //alert(this.value.length);
        if (this.value.length === 1) {
            //alert(this.value.length);
            document.getElementById('Note').value = this.value.toUpperCase();
        }
    });
    $('#Note').keypress(function(e) {
        //alert(this.value.length);
        if (this.value.length === 0) {
            //alert(this.value.length);
            document.getElementById('Note').value = String.fromCharCode(e.which).toUpperCase();
        }
    });

    $("input[id^='fileToUpload']").change(function (e) {
        var res = doReCreate(e);
    });

    function doReCreate(e) {
        if(upc < 9)
        {
            upc = upc + 1;
            var res = handleFileSelect(e);
            //if (res === 0) return 0;
            $("input[id^='fileToUpload']").hide();

            $('<input>').attr({
                type: 'file',
                multiple: 'multiple',
                id: 'fileToUpload' + upc,
                class: 'fUpload',
                name: 'fileUpload',
                style: 'float: left',
                title: '  ',
                onchange: "doReCreate(event)"

            }).appendTo('#fileUploaderInsideDiv');
            //return 1;
        }
        //return 0;
    }

    


    function handleFileSelect(e) {
        var validExt = ['gif', 'png', 'jpg', 'jpeg', 'pdf', 'docx', 'xls'];

        var selDiv = document.querySelector("#selectedFiles");

        if (!e.target.files) return;

        files = e.target.files;
        var maxSize = 375000;
        for (var i = 0; i < files.length; i++) {

            var f = files[i];
            var ext = f.name.split('.').pop().toLowerCase();

            if($.inArray(ext, validExt) === -1) {
                $('#tagscloudFileUpload span').fadeIn();
                $("#tagscloudFileUpload span").text("invalid file type!");
                $('#tagscloudFileUpload span').delay(1000).fadeOut();
                return;
            }
            else if (f.size > parseFloat(maxSize)) {
                $('#tagscloudFileUpload span').fadeIn();
                $("#tagscloudFileUpload span").text("File size should be less than 3MB.");
                $('#tagscloudFileUpload span').delay(1000).fadeOut();
                return;
            }

            selDiv.innerHTML += "<div>" + f.name + "<a id='imgLink' onclick='removeAtt(this)'> <b style='color: red'>   X </b> </a> </div>";

            //<img id='' src='~/Images/deleteRow.png'/>
            storedFiles.push(f.name);
        }
        $('#@Html.IdFor(i => i.FileName)').val(storedFiles);
    }

    function removeAtt(t) {
        var serEle = $(t).parent().text().slice(0, -3);
        var index = storedFiles.indexOf(serEle);
        if (index !== -1) {
            storedFiles.splice(index, 1);
        }
        $(t).parent().remove();

        $('#@Html.IdFor(i => i.FileName)').val(storedFiles);
        upc = upc - 1;
    }

</script>

<script>
    //Add date picker
    var startPicker = new Pikaday({
        field: document.getElementById('advanceDate'),
        format: 'l'
    });

    //Set min date and max date
    startPicker.setMinDate(new Date("@Model.StartDate"));
    startPicker.setMaxDate(new Date("@Model.EndDate"));
    $('#advanceDate').val('');
    // onclick remove success msg


    $('textarea').click(function () {
        $('.centered1 span').text('');

    });
    $(document).on('click', '.ui-button', function(){
        $('.centered1 span').text('');
    });

    function middleSpanCheck(){
        if ($('input').next('span').children('span').text().length > 1) {
            $('.centered span').text('Error');
        }
        else{
            $('.centered span').text('');
        }
    }


</script>

