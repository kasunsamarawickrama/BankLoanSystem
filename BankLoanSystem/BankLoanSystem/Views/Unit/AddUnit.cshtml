@model BankLoanSystem.Models.Unit

@{
    ViewBag.Title = "Add Unit Page";
    ViewBag.Page = 2;
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}

@section AddToHead{
    <link href="~/Content/addunit.css?version=1" rel="stylesheet" />
}

<script src="~/scripts/jquery-1.10.2.min.js"></script>




<script src="~/scripts/moment.js"></script>
<script src="~/scripts/pikaday.js"></script>

<script src="~/scripts/jquery-1.10.2.js"></script>
<script src="~/scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js?version=@((new Random()).Next(1,10000))."></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js?version=@((new Random()).Next(1,10000))."></script>

<script src="~/scripts/CommonFunctions.js"></script>
@*<script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>*@

@*<script src="//code.jquery.com/jquery-1.10.2.js"></script>*@
@*<script src="~/scripts/jquery-1.10.2.js"></script>*@
@*<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>*@
<script src="~/scripts/jquery-ui.js"></script>

<script src="~/scripts/combo.js"></script>



    
        @{Html.RenderAction("LoanInfo", "Unit", new { title = @ViewBag.Title, msg = @ViewBag.Msg });
             }
    <div class="container" id="container">
        <div class="details-container">
            @using(Html.BeginForm("AddUnit", "Unit", FormMethod.Post, new { enctype = "multipart/form-data", id = "form" }))
            {  <div class="right-panel">
                @{
                    Html.RenderAction("LoanPaymentDetails", "Unit");
                }

                @if (ViewBag.Title == "Add Unit Page")
                {
                    Html.RenderAction("GetJustAddedUnits", "Unit");
                }

            </div>          
            <div class="body-content">
                @Html.AntiForgeryToken()

                <form>
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

                        @*UNIT MODEL START*@
                        <div>
                            <div style="padding: 0px 20px 0px 20px;">
                                <div class="form-group">

                                    @Html.LabelFor(model => model.UnitTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.HiddenFor(model => model.LoanId)
                                    <div class="col-md-10">
                                        @{
                                        List<SelectListItem> ListOfUnitTypes = new List<SelectListItem>();

                                        var id = 0;
                                        var name = "";
                                        foreach (var type in ViewBag.loanDetails.selectedUnitTypes)
                                        {

                                            id = type.unitTypeId;
                                            name = type.unitTypeName;

                                            if (id == ViewBag.loanDetails.defaultUnitType)
                                            {
                                                ListOfUnitTypes.Add(new SelectListItem
                                                {
                                                    Value = id.ToString(),
                                                    Text = name,
                                                    Selected = true
                                                });
                                            }
                                            else
                                            {
                                                ListOfUnitTypes.Add(new SelectListItem
                                                {
                                                    Value = id.ToString(),
                                                    Text = name
                                                });
                                            }
                                            id = 0;
                                            name = "";
                                        }
                                        }
                                        @if (ViewBag.loanDetails.selectedUnitTypes.Count == 1)
                                        {
                                                @*@Html.DropDownListFor(model => model.UnitTypeId, ListOfUnitTypes, new { @id = "unitType", @class = "form-control col-sm-2", @Style = "width: 22%;", @disabled = "disabled" })*@
                                                @Html.HiddenFor(model => model.UnitTypeId, new { @id = "unitType" })
                                                @Html.Label("", (string)ViewBag.UnitTypeId, htmlAttributes: new { @class = "form-control", style = "border:none;border-radius:none;-webkit-box-shadow:nonr;box-shadow:none;margin-top: 3px;display: block; width: 27.4%;" })

                                        }
                                        else
                                        {
                                                @Html.DropDownListFor(model => model.UnitTypeId, ListOfUnitTypes, new { @id = "unitType", @class = "form-control col-sm-2", @Style = "width: 26%;height: 31px;", onChange = "valueChangeUnitType();" })
                                        }
                                                @Html.ValidationMessageFor(model => model.UnitTypeId, "", new { @class = "text-danger" })
                                        </div>
                
                                    </div>
               
                                </div>
                
                                            <div class="info-unit" id="vehicle" hidden>
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.vehicle.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <label class="control-label col-md-2" for="vehicle_IdentificationNumber">VIN <span class="icon-help_outline help-veh-vin"></span></label>

                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.vehicle.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap vinUnique", @id = "vehicleVin", @style = "width: 225px;" } })
                                        @Html.ValidationMessageFor(model => model.vehicle.IdentificationNumber, "", new { @class = "text-danger", @style= "width: 300px; left: 0%;" })
                                        <div id="vehicleVIN" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.vehicle.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.vehicle.Year, new { htmlAttributes = new { @id = "editor1-1", @Style = "display: none;" } })
                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox1-1">
                                        @{
                                            List<SelectListItem> yearlist = new List<SelectListItem>();
                                            for (var i = @DateTime.Now.AddYears(+1).Year; i >= 1980; i--)
                                            {
                                                yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                                            }
                                        }

                                        @Html.DropDownList("year", yearlist, "", new { @class = "form-control", @id = "combobox1-1" })
                                        @Html.ValidationMessageFor(model => model.vehicle.Year, "", new { @class = "text-danger" })
                                        <div id="vehicleyear" class="validation-error"><span id="vehicleyearspan" class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.vehicle.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.vehicle.Make, new { htmlAttributes = new { @id = "editor1-2", @Style = "display: none;" } })
                                    @*<div class="col-sm-2 block_invalid" onmouseover="GetMakes($('#combobox1-1'),'#combobox1-2',1);" onmouseout="GetModels($('#combobox1-1'),$('#combobox1-2'),'#combobox1-3',1);" id="div-combobox1-2">*@
                                    <div class="col-sm-4 block_invalid" id="div-combobox1-2">

                                        <div style="margin-left: -45px;">
                                            @Html.DropDownList("make", new SelectList(""), "", new { @class = "form-control", @id = "combobox1-2" })

                                            @Html.ValidationMessageFor(model => model.vehicle.Make, "", new { @class = "text-danger col-md-2" })
                                        </div>
                                        <div id="vehiclemake" class="validation-error"><span class="text-danger ma"></span></div>
                                  </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.vehicle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.vehicle.Model, new { htmlAttributes = new { @id = "editor1-3", @Style = "display: none;" } })
                                    @*<div class="col-sm-4 block_invalid" onmouseover="GetModels($('#combobox1-1'),$('#combobox1-2'),'#combobox1-3',1);" id="div-combobox1-3">*@
                                        <div class="col-sm-4 block_invalid" id="div-combobox1-3">
                                            <div>
                                                @Html.DropDownList("model", new SelectList(""), "", new { @class = "form-control", @id = "combobox1-3" })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.vehicle.Model, "", new { @class = "text-danger"})
                                            <div id="vehiclemodel" class="validation-error"><span class="text-danger mo"></span></div>
                                        </div>
                                    <label class="control-label col-md-2">
                                        Trim <span class="icon-help_outline help-veh-trim"></span>
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-2" style="width: 175px;">
                                        @Html.EditorFor(model => model.vehicle.Trim, new { htmlAttributes = new { @class = "form-control trim block_invalid_char", @Style = "width: 100%;", @id = "vehicletrim" } })
                                        @Html.ValidationMessageFor(model => model.vehicle.Trim, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">
                                        Miles
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.vehicle.Miles, new { htmlAttributes = new { @class = "form-control miles", @id = "vehiclemiles", @placeholder = "0", @Style = "width: 68%;text-align: right;" } })
                                        @Html.ValidationMessageFor(model => model.vehicle.Miles, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="control-label col-md-2">
                                        Color <span class="icon-help_outline help-veh-col"></span>
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    @Html.EditorFor(model => model.vehicle.Color, new { htmlAttributes = new { @id = "editor1-4", @Style = "display: none;" } })
                                    <div class="col-sm-2 block_invalid" id="div-combobox1-4">
                                        @{
                                            List<SelectListItem> Colourlist = new List<SelectListItem>();

                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "Black",
                                                Value = "Black"
                                            });
                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "Blue",
                                                Value = "Blue"
                                            });
                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "Brown",
                                                Value = "Brown"
                                            });
                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "Gray",
                                                Value = "Gray"
                                            });
                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "Green",
                                                Value = "Green"
                                            });
                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "Silver",
                                                Value = "Silver"
                                            });
                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "White",
                                                Value = "White"
                                            });
                                            Colourlist.Add(new SelectListItem
                                            {
                                                Text = "Yellow",
                                                Value = "Yellow"
                                            });
                                        }
                                        @Html.DropDownList("color", Colourlist, "", new { @class = "form-control", @Style = "width: 136%;", @id = "combobox1-4" })
                                        @Html.ValidationMessageFor(model => model.vehicle.Color, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.vehicle.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2" >
                                        
                                            @Html.RadioButtonFor(model => model.vehicle.NewOrUsed, true, new { @class="conditionRadio"}) New
                                            @Html.RadioButtonFor(model => model.vehicle.NewOrUsed, false ,new { @class = "conditionRadio",@style = "margin-left: 21px;" }) <p style="margin-left: 107px;margin-top: -15px;">Used</p>
                                            @Html.ValidationMessageFor(model => model.vehicle.NewOrUsed, "", new { @class = "text-danger", @style = "top: 89%;left: 0%;width: 120%; " })
                                        
                                    </div>
                                </div>*@


                                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                                    <label for="" class="col-md-2 control-label">Condition</label>


                                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                                        <label class="radio-inline">
                                                            @Html.RadioButtonFor(model => model.vehicle.NewOrUsed, true, new { @class = "conditionRadio" }) New

                                                        </label>
                                                        <label class="radio-inline">
                                                            @Html.RadioButtonFor(model => model.vehicle.NewOrUsed, false, new { @class = "conditionRadio" }) Used
                                                        </label>
                                                       @Html.ValidationMessageFor(model => model.vehicle.NewOrUsed, "", new { @class = "text-danger", @style = "top: 89%;left: 0%;width: 120%; " })
                                                    </div>
                                                </div>

                            </div>

                            <div class="info-unit" id="rv" hidden>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.rv.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.rv.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap vinUnique", @id = "rvVin" } })
                                        @Html.ValidationMessageFor(model => model.rv.IdentificationNumber, "", new { @class = "text-danger", @style = "width: 300px; left: 0%;" })
                                        <div id="rvVIN" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.rv.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.rv.Year, new { htmlAttributes = new { @id = "editor2-1", @Style = "display: none;" } })
                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox2-1">

                                        @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox2-1" })
                                        @Html.ValidationMessageFor(model => model.rv.Year, "", new { @class = "text-danger" })
                                        <div id="rvyear" class="validation-error"><span class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.rv.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.rv.Make, new { htmlAttributes = new { @id = "editor2-2", @Style = "display: none;" } })
                                    <div class="col-sm-4 block_invalid">
                                        @*<div onmouseover="GetMakes($('#combobox2-1'),'#combobox2-2',2);" onmouseout="GetModels($('#combobox2-1'),$('#combobox2-2'),'#combobox2-3',2);" id="div-combobox2-2">*@
                                            <div id="div-combobox2-2">

                                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox2-2" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.rv.Make, "", new { @class = "text-danger" })
                                        <div id="rvmake" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.rv.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.rv.Model, new { htmlAttributes = new { @id = "editor2-3", @Style = "display: none;" } })
                                    <div class="col-sm-4 block_invalid">
                                        @*<div onmouseover="GetModels($('#combobox2-1'),$('#combobox2-2'),'#combobox2-3',2);" id="div-combobox2-3">*@
                                            <div id="div-combobox2-3">

                                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox2-3" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.rv.Model, "", new { @class = "text-danger" })
                                        <div id="rvmodel" class="validation-error"><span class="text-danger"></span></div>
                                    </div>

                                    <label class="control-label col-md-2">
                                        Miles
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-2" style="width: 32.667%;">
                                        @Html.EditorFor(model => model.rv.Miles, new { htmlAttributes = new { @class = "form-control miles", @id = "rvmiles", @placeholder = "0", @Style = "width: 70%;text-align: right;" } })
                                        @Html.ValidationMessageFor(model => model.rv.Miles, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">
                                        Length
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.rv.Length, new { htmlAttributes = new { @class = "form-control lengths", @placeholder = "0", @id = "rvlength", @style = "width: 157px;text-align: right;" } })
                                        @Html.ValidationMessageFor(model => model.rv.Length, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.rv.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2">
                                       
                                            @Html.RadioButtonFor(model => model.rv.NewOrUsed, true, new { @class = "conditionRadio" }) New
                                            @Html.RadioButtonFor(model => model.rv.NewOrUsed, false, new { @class = "conditionRadio" }) Used
                                            @Html.ValidationMessageFor(model => model.rv.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                        
                                    </div>
                                </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    <label for="" class="col-md-2 control-label">Condition</label>


                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.rv.NewOrUsed, true, new { @class = "conditionRadio" }) New

                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.rv.NewOrUsed, false, new { @class = "conditionRadio" }) Used
                                        </label>
                                        @Html.ValidationMessageFor(model => model.rv.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                    </div>
                                </div>
                            </div>

                            <div class="info-unit" id="camper" hidden>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.camper.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.camper.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap vinUnique", @id = "camperVin" } })
                                        @Html.ValidationMessageFor(model => model.camper.IdentificationNumber, "", new { @class = "text-danger", @style = "width: 300px; left: 0%;" })
                                        <div id="camperVIN"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.camper.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.camper.Year, new { htmlAttributes = new { @id = "editor3-1", @Style = "display: none;" } })
                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox3-1">

                                        @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox3-1" })
                                        @Html.ValidationMessageFor(model => model.camper.Year, "", new { @class = "text-danger" })
                                        <div id="camperyear" class="validation-error"><span class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.camper.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.camper.Make, new { htmlAttributes = new { @id = "editor3-2", @Style = "display: none;" } })
                                    <div class="col-sm-4 block_invalid">
                                        @*<div onmouseover="GetMakes($('#combobox3-1'),'#combobox3-2',3);" onmouseout="GetModels($('#combobox3-1'),$('#combobox3-2'),'#combobox3-3',3);" id="div-combobox3-2">*@
                                            <div id="div-combobox3-2">

                                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox3-2" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.camper.Make, "", new { @class = "text-danger" })
                                        <div id="campermake" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.camper.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.camper.Model, new { htmlAttributes = new { @id = "editor3-3", @Style = "display: none;" } })
                                    <div class="col-sm-4 block_invalid">
                                        @*<div onmouseover="GetModels($('#combobox3-1'),$('#combobox3-2'),'#combobox3-3',3);" id="div-combobox3-3">*@
                                            <div id="div-combobox3-3">

                                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox3-3" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.camper.Model, "", new { @class = "text-danger" })
                                        <div id="campermodel" class="validation-error"><span class="text-danger"></span></div>
                                    </div>

                                    <label class="control-label col-md-2">
                                        Length
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-2" style="width: 32.667%;">
                                        @Html.EditorFor(model => model.camper.Length, new { htmlAttributes = new { @class = "form-control lengths", @id = "camperlength", @placeholder = "0", @style = "width: 157px;text-align: right;" } })
                                        @Html.ValidationMessageFor(model => model.camper.Length, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">
                                        Hitch Style
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-4">
                                        <div>
                                            @{
                                                List<SelectListItem> hitchlist = new List<SelectListItem>();

                                            hitchlist.Add(new SelectListItem
                                                {
                                                    Text = "Bumper Pull",
                                                    Value = "Bumper Pull"
                                                });
                                                hitchlist.Add(new SelectListItem
                                                {
                                                    Text = "5th Wheel",
                                                    Value = "5th Wheel"
                                                });
                                                hitchlist.Add(new SelectListItem
                                                {
                                                    Text = "Gooseneck",
                                                    Value = "Gooseneck"
                                                });
                                            }
                                            @Html.DropDownListFor(model => model.camper.HitchStyle, hitchlist, "-- select style --", new { @class = "form-control", @id = "camperhitch", @style = "width: 157px;" })
                                            @Html.ValidationMessageFor(model => model.camper.HitchStyle, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.camper.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2 rad-style">
                                        <div class="radio">
                                            @Html.RadioButtonFor(model => model.camper.NewOrUsed, true,new { @class = "conditionRadio" }) New
                                            @Html.RadioButtonFor(model => model.camper.NewOrUsed, false, new { @class = "conditionRadio", @style = "margin-left: 21px;" }) <p style="margin-left: 107px;margin-top: -15px;">Used</p>
                                            @Html.ValidationMessageFor(model => model.camper.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: -7%;width: 120%; " })
                                        </div>

                                    </div>

                                </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    <label for="" class="col-md-2 control-label">Condition</label>


                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.camper.NewOrUsed, true, new { @class = "conditionRadio" }) New

                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.camper.NewOrUsed, false, new { @class = "conditionRadio" }) Used
                                        </label>
                                        @Html.ValidationMessageFor(model => model.camper.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: -7%;width: 120%; " })
                                    </div>
                                </div>

                            </div>


                            <div class="info-unit" id="atv" hidden>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.atv.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.atv.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap vinUnique", @id = "atvVin" } })
                                        @Html.ValidationMessageFor(model => model.atv.IdentificationNumber, "", new { @class = "text-danger", @style = "width: 300px; left: 0%;" })
                                        <div id="atvVIN" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.atv.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.atv.Year, new { htmlAttributes = new { @id = "editor4-1", @Style = "display: none;" } })
                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox4-1">

                                        @Html.DropDownList("year", yearlist, "", new { @class = "form-control", @id = "combobox4-1" })
                                        @Html.ValidationMessageFor(model => model.atv.Year, "", new { @class = "text-danger" })
                                        <div id="atvyear" class="validation-error"><span class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.atv.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.atv.Make, new { htmlAttributes = new { @id = "editor4-2", @Style = "display: none;" } })
                                    <div class="col-sm-4">
                                        @*<div class="block_invalid" onmouseover="GetMakes($('#combobox4-1'),'#combobox4-2',4);" onmouseout="GetModels($('#combobox4-1'),$('#combobox4-2'),'#combobox4-3',4);" id="div-combobox4-2">*@
                                            <div class="block_invalid" id="div-combobox4-2">

                                                @Html.DropDownList("make", new SelectList(""), "", new { @class = "form-control", @id = "combobox4-2" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.atv.Make, "", new { @class = "text-danger" })
                                        <div id="atvmake" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.atv.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.atv.Model, new { htmlAttributes = new { @id = "editor4-3", @Style = "display: none;" } })
                                    <div class="col-sm-4">
                                        @*<div class="block_invalid" onmouseover="GetModels($('#combobox4-1'),$('#combobox4-2'),'#combobox4-3',4);" id="div-combobox4-3">*@
                                            <div class="block_invalid" id="div-combobox4-3">

                                                @Html.DropDownList("model", new SelectList(""), "", new { @class = "form-control", @id = "combobox4-3" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.atv.Model, "", new { @class = "text-danger" })
                                        <div id="atvmodel" class="validation-error"><span class="text-danger"></span></div>
                                    </div>

                                  
                                    <label class="control-label col-md-2">Miles/Hours
                                    <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-2" style="width: 32.667%;">
                                        @Html.EditorFor(model => model.atv.Miles, new { htmlAttributes = new { @class = "form-control miles", @id = "atvmiles", @placeholder = "0", @Style = "width: 70%;text-align: right;" } })
                                        @Html.ValidationMessageFor(model => model.atv.Miles, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.atv.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2 rad-style">
                                        <div class="radio">
                                            @Html.RadioButtonFor(model => model.atv.NewOrUsed, true,new { @class = "conditionRadio" }) New
                                            @Html.RadioButtonFor(model => model.atv.NewOrUsed, false, new { @class = "conditionRadio", @style = "margin-left: 21px;" }) <p style="margin-left: 107px;margin-top: -15px;">Used</p>
                                            @Html.ValidationMessageFor(model => model.atv.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                        </div>
                                    </div>
                                </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    <label for="" class="col-md-2 control-label">Condition</label>


                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.atv.NewOrUsed, true, new { @class = "conditionRadio" }) New

                                        </label>
                                        <label class="radio-inline">
                                           @Html.RadioButtonFor(model => model.atv.NewOrUsed, false, new { @class = "conditionRadio" })Used
                                        </label>
                                        @Html.ValidationMessageFor(model => model.atv.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                    </div>
                                </div>
                            </div>

                            <div class="info-unit" id="boat" hidden>
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.boat.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@

                                    <label class="control-label col-md-2" style="width:18%" for="boat_IdentificationNumber">HIN <span class="icon-help_outline help-boat-hin"></span></label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.boat.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap vinUnique", @id = "boatVin" } })
                                        @Html.ValidationMessageFor(model => model.boat.IdentificationNumber, "", new { @class = "text-danger", @style = "width: 300px; left: 0%;" })
                                        <div id="boatVIN" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.boat.Year, htmlAttributes: new { @class = "control-label col-md-2", style = "width:18%" })
                                    @Html.EditorFor(model => model.boat.Year, new { htmlAttributes = new { @id = "editor5-1", @Style = "display: none;" } })
                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox5-1">

                                        @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox5-1" })
                                        @Html.ValidationMessageFor(model => model.boat.Year, "", new { @class = "text-danger" })
                                        <div id="boatyear" class="validation-error"><span class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.boat.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.boat.Make, new { htmlAttributes = new { @id = "editor5-2", @Style = "display: none;" } })
                                    <div class="col-sm-2 block_invalid">
                                        @*<div onmouseover="GetMakes($('#combobox5-1'),'#combobox5-2',5);" id="div-combobox5-2">*@
                                            <div id="div-combobox5-2">

                                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox5-2" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.boat.Make, "", new { @class = "text-danger" })
                                        <div id="boatmake" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2" , style = "width:18%;padding-right:0px">
                                        Trailer ID  <span class="icon-help_outline help-boat-tra_id"></span>
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.boat.TrailerId, new { htmlAttributes = new { @class = "form-control cap block_invalid_char", @id = "boattrailer", @maxlength = 17  } })
                                        @Html.ValidationMessageFor(model => model.boat.TrailerId, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="control-label col-md-2" style="padding-left: 38px;">
                                        Engine Serial <span class="icon-help_outline help-boat-eng_ser"></span>
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-2" style="width: 31.667%;">
                                        @Html.EditorFor(model => model.boat.EngineSerial, new { htmlAttributes = new { @class = "form-control cap block_invalid_allow_dash", @id = "boatserial", @maxlength = 17 } })
                                        @Html.ValidationMessageFor(model => model.boat.EngineSerial, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.boat.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2 rad-style">
                                        <div class="radio">
                                            @Html.RadioButtonFor(model => model.boat.NewOrUsed, true,new { @class = "conditionRadio" }) New
                                            @Html.RadioButtonFor(model => model.boat.NewOrUsed, false, new { @class = "conditionRadio", @style = "margin-left: 21px;" }) <p style="margin-left: 107px;margin-top: -15px;">Used</p>
                                            @Html.ValidationMessageFor(model => model.boat.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                        </div>
                                    </div>
                                </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    <label for="" class="col-md-2 control-label">Condition</label>


                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                           @Html.RadioButtonFor(model => model.boat.NewOrUsed, true, new { @class = "conditionRadio" }) New

                                        </label>
                                        <label class="radio-inline">
                                           @Html.RadioButtonFor(model => model.boat.NewOrUsed, false, new { @class = "conditionRadio"}) Used
                                        </label>
                                        @Html.ValidationMessageFor(model => model.boat.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                    </div>
                                </div>
                            </div>

                            <div class="info-unit" id="motorcycle" hidden>
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.motorcycle.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@  
                                    <label class="control-label col-md-2" for="motorcycle_IdentificationNumber">VIN  <span class="icon-help_outline help-mot-vin"></span></label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.motorcycle.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap vinUnique", @id = "motorcycleVin" } })
                                        @Html.ValidationMessageFor(model => model.motorcycle.IdentificationNumber, "", new { @class = "text-danger", @style = "width: 300px; left: 0%;" })
                                        <div id="motorcycleVIN" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.motorcycle.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.motorcycle.Year, new { htmlAttributes = new { @id = "editor6-1", @Style = "display: none;" } })
                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox6-1">

                                        @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox6-1" })
                                        @Html.ValidationMessageFor(model => model.motorcycle.Year, "", new { @class = "text-danger" })
                                        <div id="motorcycleyear" class="validation-error"><span class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.motorcycle.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.motorcycle.Make, new { htmlAttributes = new { @id = "editor6-2", @Style = "display: none;" } })
                                    <div class="col-sm-4">
                                        @*<div class="block_invalid" onmouseover="GetMakes($('#combobox6-1'),'#combobox6-2',6);" onmouseout="GetModels($('#combobox6-1'),$('#combobox6-2'),'#combobox6-3',5);" id="div-combobox6-2">*@
                                            <div class="block_invalid" id="div-combobox6-2">

                                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox6-2" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.motorcycle.Make, "", new { @class = "text-danger" })
                                        <div id="motorcyclemake" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.motorcycle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.motorcycle.Model, new { htmlAttributes = new { @id = "editor6-3", @Style = "display: none;" } })
                                    <div class="col-sm-4">
                                        @*<div class="block_invalid" onmouseover="GetModels($('#combobox6-1'),$('#combobox6-2'),'#combobox6-3',5);" id="div-combobox6-3">*@
                                            <div class="block_invalid" id="div-combobox6-3">

                                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox6-3" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.motorcycle.Model, "", new { @class = "text-danger" })
                                        <div id="motorcyclemodel" class="validation-error"><span class="text-danger"></span></div>
                                    </div>

                                    <label class="control-label col-md-2">
                                        Miles
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    <div class="col-sm-2" style="width: 32.667%;padding-right: 13px;">
                                        @Html.EditorFor(model => model.motorcycle.Miles, new { htmlAttributes = new { @class = "form-control miles", id = "motorcyclemiles", @placeholder = "0", @Style = "width: 68%;text-align: right;" } })
                                        @Html.ValidationMessageFor(model => model.motorcycle.Miles, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" id="div-combobox6-4">
                                    <label class="control-label col-md-2">
                                        Color  <span class="icon-help_outline help-mot-col"></span>
                                        <span class="optional">(Optional)</span>
                                    </label>
                                    @Html.EditorFor(model => model.motorcycle.Color, new { htmlAttributes = new { @id = "editor6-4", @Style = "display: none;" } })
                                    <div class="col-sm-4 block_invalid">
                                        @Html.DropDownList("color", Colourlist, "-- select type --", new { @class = "form-control", @id = "combobox6-4" })
                                        @Html.ValidationMessageFor(model => model.motorcycle.Color, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.motorcycle.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2 rad-style">
                                        <div class="radio">
                                            @Html.RadioButtonFor(model => model.motorcycle.NewOrUsed, true,new { @class = "conditionRadio" }) New
                                            @Html.RadioButtonFor(model => model.motorcycle.NewOrUsed, false, new { @class = "conditionRadio", @style = "margin-left: 21px;" }) <p style="margin-left: 107px;margin-top: -15px;">Used</p>
                                            @Html.ValidationMessageFor(model => model.motorcycle.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                        </div>
                                    </div>
                                </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    <label for="" class="col-md-2 control-label">Condition</label>


                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.motorcycle.NewOrUsed, true, new { @class = "conditionRadio" }) New

                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.motorcycle.NewOrUsed, false, new { @class = "conditionRadio"}) Used
                                        </label>
                                        @Html.ValidationMessageFor(model => model.motorcycle.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                    </div>
                                </div>
                            </div>

                            <div class="info-unit" id="snowmobile" hidden>
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.snowmobile.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@ 
                                    <label class="control-label col-md-2" for="snowmobile_IdentificationNumber">VIN <span class="icon-help_outline help-snow-vin"></span></label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.snowmobile.IdentificationNumber, new { htmlAttributes = new { @class = "form-control cap vinUnique", @id = "snowmobileVin" } })
                                        @Html.ValidationMessageFor(model => model.snowmobile.IdentificationNumber, "", new { @class = "text-danger", @style = "width: 305px; left: 0%;" })
                                        <div id="snowmobileVIN" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.snowmobile.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.snowmobile.Year, new { htmlAttributes = new { @id = "editor7-1", @Style = "display: none;" } })
                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox7-1">

                                        @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox7-1" })
                                        @Html.ValidationMessageFor(model => model.snowmobile.Year, "", new { @class = "text-danger" })
                                        <div id="snowmobileyear" class="validation-error"><span class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.snowmobile.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.snowmobile.Make, new { htmlAttributes = new { @id = "editor7-2", @Style = "display: none;" } })
                                    <div class="col-sm-4">
                                        @*<div class="block_invalid" onmouseover="GetMakes($('#combobox7-1'),'#combobox7-2',7);" onmouseout="GetModels($('#combobox7-1'),$('#combobox7-2'),'#combobox7-3',7);" id="div-combobox7-2">*@
                                            <div class="block_invalid" id="div-combobox7-2">

                                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox7-2" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.snowmobile.Make, "", new { @class = "text-danger" })
                                        <div id="snowmobilemake" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.snowmobile.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.snowmobile.Model, new { htmlAttributes = new { @id = "editor7-3", @Style = "display: none;" } })
                                    <div class="col-sm-4">
                                        @*<div class="block_invalid" onmouseover="GetModels($('#combobox7-1'),$('#combobox7-2'),'#combobox7-3',7);" id="div-combobox7-3">*@                                      
                                            <div class="block_invalid" id="div-combobox7-3">
                                                @Html.DropDownList("model", new SelectList(""), "-- select a model --", new { @class = "form-control", @id = "combobox7-3" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.snowmobile.Model, "", new { @class = "text-danger" })
                                        <div id="snowmobilemodel" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.snowmobile.NewOrUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2 rad-style">
                                        <div class="radio">
                                            @Html.RadioButtonFor(model => model.snowmobile.NewOrUsed, true, new { @class = "conditionRadio" }) New
                                            @Html.RadioButtonFor(model => model.snowmobile.NewOrUsed, false, new { @style = "margin-left: 21px;", @class = "conditionRadio" }) <p style="margin-left: 107px;margin-top: -15px;">Used</p>
                                            @Html.ValidationMessageFor(model => model.snowmobile.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                        </div>
                                    </div>
                                </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    <label for="" class="col-md-2 control-label">Condition</label>


                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.snowmobile.NewOrUsed, true, new { @class = "conditionRadio" }) New

                                        </label>
                                        <label class="radio-inline">
                                           @Html.RadioButtonFor(model => model.snowmobile.NewOrUsed, false, new { @class = "conditionRadio" }) Used
                                        </label>
                                        @Html.ValidationMessageFor(model => model.snowmobile.NewOrUsed, "", new { @class = "text-danger", style = "top: 89%;left: 0%;width: 120%; " })
                                    </div>
                                </div>
                            </div>

                            <div class="info-unit" id="heavyequipment" hidden>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.heavyequipment.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.heavyequipment.SerialNumber, new { htmlAttributes = new { @class = "form-control cap block_invalid_char vinUnique", @id = "heavyequipmentSerial", @maxlength = 17 } })
                                        @Html.ValidationMessageFor(model => model.heavyequipment.SerialNumber, "", new { @class = "text-danger", @style = "width: 300px; left: 0%;" })
                                        <div id="heavyequipmentVIN" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                    <div class="col-sm-2" style="width: 271px;">
                                        <div class="validation-error"><span class="text-danger vinCheck"></span></div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.heavyequipment.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.heavyequipment.Year, new { htmlAttributes = new { @id = "editor8-1", @Style = "display: none;" } })

                                    <div class="col-sm-4 allow_numeric max_length4" id="div-combobox8-1">

                                        @Html.DropDownList("year", yearlist, "-- select a date --", new { @class = "form-control", @id = "combobox8-1" })
                                        @Html.ValidationMessageFor(model => model.heavyequipment.Year, "", new { @class = "text-danger" })
                                        <div id="heavyequipmentyear" class="validation-error"><span class="text-danger y"></span></div>
                                    </div>

                                    @Html.LabelFor(model => model.heavyequipment.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.heavyequipment.Make, new { htmlAttributes = new { @id = "editor8-2", @Style = "display: none;" } })
                                    <div class="col-sm-4">
                                        @*<div class="block_invalid" onmouseover="GetMakes($('#combobox8-1'),'#combobox8-2',8);" id="div-combobox8-2">*@
                                            <div class="block_invalid" id="div-combobox8-2">
                                                @Html.DropDownList("make", new SelectList(""), "-- select model make --", new { @class = "form-control", @id = "combobox8-2" })
                                            </div>
                                        @Html.ValidationMessageFor(model => model.heavyequipment.Make, "", new { @class = "text-danger" })
                                        <div id="heavyequipmentmake" class="validation-error"><span class="text-danger"></span></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*UNIT MODEL END*@

                        @*PAYMENT DETAILS START*@
                        <div class="info-unit" style="margin-top:20px">
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })*@  

                                <label class="control-label col-md-2" for="Cost">Cost  <span class="icon-help_outline help-cost"></span></label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @id = "txtCost", autocomplete = "off", @placeholder = "0.00", @style = "text-align: right;" } })
                                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger", @style= "left: 1%;" })
                                    <div id="tagscloud" class="validation-error"><span class="text-danger co"></span></div>
                                </div>

                                @*@Html.LabelFor(model => model.AdvanceAmount, htmlAttributes: new { @class = "control-label col-md-3", @style = "padding-left: 57px;" })*@
                                <label class="control-label col-md-3" for="AdvanceAmount" style="padding-left: 35px;">Advance Amount  <span class="icon-help_outline help-adv_amount"></span></label>
                                <div class="col-md-3">
                                    @if (ViewBag.Editable == "Yes")
                                    {
                                        @Html.EditorFor(model => model.AdvanceAmount, new { htmlAttributes = new { @class = "form-control", @id = "txtAdvanceAmount", @placeholder = "0.00", autocomplete = "off", @style = "text-align: right;" , @tabindex = "-1" } })
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.AdvanceAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "txtAdvanceAmount", @placeholder = "0.00", autocomplete = "off", @style = "text-align: right;" , @tabindex = "-1" } })
                                    }
                                    @Html.ValidationMessageFor(model => model.AdvanceAmount, "", new { @class = "text-danger", @style= "left: 0%; text-align: left; width: 217px;" })
                                    <div id="tagscloudAdvance" class="validation-error"><span class="text-danger ad"></span></div>
                                </div>
                            </div>



                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Note
                                    <span class="optional">(Optional)</span>
                                </label>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Note, 5, 85, new { htmlAttributes = new { @class = "form-control-notebox" } })
                                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @if (ViewBag.IsTitleTrack == "Yes")
                                    {
                                        @*<div class="form-group">
                                            @Html.LabelFor(model => model.TitleReceived, htmlAttributes: new {@class = "control-label col-md-4", style = "width: 43%;"})
                                            <div class="col-md-2">
                                                <div class="checkbox rad-style">
                                                    @Html.RadioButtonFor(model => model.TitleReceived, "Yes", new {@id = "rdYes", @class = "titleReceived"}) Yes @*, @checked = "checked"
                                                    @Html.RadioButtonFor(model => model.TitleReceived, "No", new {@id = "rdNo", @class = "titleReceived", @style = "margin-left: 21px;"}) No
                                                    @Html.ValidationMessageFor(model => model.TitleReceived, "", new {@class = "text-danger", style = "left: 1%; text-align: left; width: 260px;"})
                                                </div>

                                            </div>

                                        </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    @*@Html.LabelFor(model => model.TitleReceived, htmlAttributes: new { @class = "control-label col-md-4", style = "width: 43%;" })*@
                                    @if (ViewBag.CompabyType == 1)
                                    {
                                        <label class="control-label col-md-4" style = "width: 43%;">Has the title been received?</label>
                                    }
                                    else if (ViewBag.CompabyType == 2)
                                    {
                                        <label class="control-label col-md-4" style="width: 43%;">Has the title deliver to the bank?</label>
                                    }

                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.TitleReceived, "Yes", new { @id = "rdYes", @class = "titleReceived" }) Yes

                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.TitleReceived, "No", new { @id = "rdNo", @class = "titleReceived" }) No
                                        </label>
                                        @Html.ValidationMessageFor(model => model.TitleReceived, "", new { @class = "text-danger", style = "left: 1%;top: 100%; text-align: left; width: 260px;" })
                                    </div>
                                </div>
                            }
                            @if (ViewBag.CompabyType == 2 && ViewBag.Upload == "Yes")
                            {
                                <div class="form-group" id="fileUploader">
                                    @Html.HiddenFor(i => i.FileName)
                                    <label for="file" class="control-label col-md-3" style="width: 22%">Upload Image:
                                        <span class="optional">(Optional)</span></label>

                                    <div class="col-md-3" id="fileUploaderInsideDiv" style="padding-left: 0px; margin-top: 10px">
                                        <input type="file" id="fileToUpload" name="fileUpload"  />
                                        <br />
                                        <div><span id="spnFile" style="float: left; color: #FF0000"></span></div>

                                        <div id="selectedFiles" class="control-section" style="text-align:left; width: 400px;margin-bottom:10px;"></div>

                                        @*@Html.ValidationMessage("File")*@
                                        @Html.Hidden("hdnFileUpload")

                                        <div id="tagscloudFileUpload"><span class="text-danger"></span></div>
                                    </div>

                                </div>

                            }
                            
                        </div>
                        @*PAYMENT DETAILS END*@

                        @if (ViewBag.RoleId != 4)
                        {
                            <div style="padding:20px 20px 10px 20px">
                                @*<div class="form-group" >
                                    //@Html.LabelFor(model => model.AdvanceNow, htmlAttributes: new { @class = "control-label col-md-5", style = "width:43%" })
                                    <label class="control-label col-md-5" for="AdvanceNow" style="width:43%">Will you advance the unit today?  <span class="icon-help_outline help-date"></span></label>
                                    <div class="col-md-2 rad-style">
                                        @Html.RadioButtonFor(model => model.AdvanceNow, "Yes", new { @id = "rdAdvanceYes", @class = "advanceNow" }) Yes
                                        @Html.RadioButtonFor(model => model.AdvanceNow, "No", new { @id = "rdAdvanceNo", @class = "advanceNow" , @style = "margin-left: 21px;" }) No
                                        @Html.ValidationMessageFor(model => model.AdvanceNow, "", new { @class = "text-danger", style = "left: 3%; text-align: left; width: 247px;" })
                                    </div>
                        
                                </div>*@

                                <div class="form-group" style="margin-top:25px !important;text-align:left;margin-bottom:15px !important">
                                    @Html.LabelFor(model => model.AdvanceNow, htmlAttributes: new { @class = "control-label col-md-5", style = "width:43%" })


                                    <div class="col-md-8 radios" style="display: inline-block;width: 398px;">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.AdvanceNow, "Yes", new { @id = "rdAdvanceYes", @class = "advanceNow" }) Yes

                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.AdvanceNow, "No", new { @id = "rdAdvanceNo", @class = "advanceNow" }) No
                                        </label>
                                        @Html.ValidationMessageFor(model => model.AdvanceNow, "", new { @class = "text-danger", style = "left: 3%; text-align: left; width: 247px;top: 100%;" })
                                    </div>
                                </div> 
                            </div>
                        }


                        @*<div class="form-group" id="advanceDate" hidden>
                                @Html.LabelFor(model => model.AdvanceDate, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.TextBox("StartDate", DateTime.Today, new {@class = "datepicker", @type = "date"})
                                    @Html.ValidationMessageFor(model => model.AdvanceDate, "", new {@class = "text-danger"})
                                </div>
                            </div>*@

                        <div style="padding:0px 20px 0px 20px">
                            <div class="form-group" id="advanceDateFormDiv" hidden>

                                <div class="control-label col-sm-3" >
                                    @Html.LabelFor(model => model.AdvanceDate, htmlAttributes: new { })@*<span style="color:red"> *</span>*@
                                </div>


                                <div class="col-xs-3" id="advanceDateDiv">
                                    @Html.EditorFor(model => model.AdvanceDate, new { htmlAttributes = new { @class = "form-control dateKeyPressValidate", @placeholder = "MM/DD/YYYY", @id = "advanceDate", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.AdvanceDate, "", new { @class = "text-danger", @style= "text-align: left; left: 0%; width: 208px; " })
                                    <span class="text-danger field-validation-error" id="errorAdvanceDate" style=""></span>
                                </div>
                           
                                </div>
                            
                            </div>
                            

                            <div style="padding:0px 20px 0px 20px">
                            
                                <div class="form-group btn-panel">
                                <input type="button" value="Cancel" id="btnCancel" class="btn btn-primary m-b next_clear_button clear_back" tabindex="-1" style="float:right;margin-right:4%" />

                                <input type="submit" value="Add" name="btnAdd" id="btnSubmit" class="btn btn-primary m-b next_clear_button next_back" style="width: 200px;margin-left: 102px;" />
                            </div>
                        </div>
                    </div>
                </form>

            </div>
            }


            <script type="text/javascript">

                _previousMakeYear = "";
                _previousMake     = "";

                $( "#div-combobox1-1" ).focusin(function(){
                    $('#vehicleyear').children('span').text("");
                });
                $( "#div-combobox1-2" ).focusin(function(){
                    $('#vehiclemake').children('span').text("");
                    GetMakes($('#combobox1-1'),'#combobox1-2',1);
                });
                $( "#div-combobox1-3" ).focusin(function(){
                    $('#vehiclemodel').children('span').text("");
                    GetModels($('#combobox1-1'),$('#combobox1-2'),'#combobox1-3',1);
                });
                $( "#div-combobox2-1" ).focusin(function(){
                    $('#rvyear').children('span').text("");
                 });
                $( "#div-combobox2-2" ).focusin(function(){
                    $('#rvmake').children('span').text("");
                    GetMakes($('#combobox2-1'),'#combobox2-2',2);
                });
                $( "#div-combobox2-3" ).focusin(function(){
                    $('#rvmodel').children('span').text("");
                    GetModels($('#combobox2-1'),$('#combobox2-2'),'#combobox2-3',2);
                });
                $( "#div-combobox3-1" ).focusin(function(){
                    $('#camperyear').children('span').text("");
                });
                $( "#div-combobox3-2" ).focusin(function(){
                    $('#campermake').children('span').text("");
                    GetMakes($('#combobox3-1'),'#combobox3-2',3);
                });
                $( "#div-combobox3-3" ).focusin(function(){
                    $('#campermodel').children('span').text("");
                    GetModels($('#combobox3-1'),$('#combobox3-2'),'#combobox3-3',3);
                });
                $( "#div-combobox4-1" ).focusin(function(){
                    $('#atvyear').children('span').text("");
                });
                $( "#div-combobox4-2" ).focusin(function(){
                    $('#atvmake').children('span').text("");
                    GetMakes($('#combobox4-1'),'#combobox4-2',4);
                });
                $( "#div-combobox4-3" ).focusin(function(){
                    $('#atvmodel').children('span').text("");
                    GetModels($('#combobox4-1'),$('#combobox4-2'),'#combobox4-3',4);
                });
                $( "#div-combobox5-1" ).focusin(function(){
                    $('#boatyear').children('span').text("");
                });
                $( "#div-combobox5-2" ).focusin(function(){
                    $('#boatmake').children('span').text("");
                    GetMakes($('#combobox5-1'),'#combobox5-2',5);
                });
                $( "#div-combobox6-1" ).focusin(function(){
                    $('#motorcycleyear').children('span').text("");
                });
                $( "#div-combobox6-2" ).focusin(function(){
                    $('#motorcyclemake').children('span').text("");
                    GetMakes($('#combobox6-1'),'#combobox6-2',6);
                });
                $( "#div-combobox6-3" ).focusin(function(){
                    $('#motorcyclemodel').children('span').text("");
                    GetModels($('#combobox6-1'),$('#combobox6-2'),'#combobox6-3',6);
                });
                $( "#div-combobox7-1" ).focusin(function(){
                    $('#snowmobileyear').children('span').text("");
                });
                $( "#div-combobox7-2" ).focusin(function(){
                    $('#snowmobilemake').children('span').text("");
                    GetMakes($('#combobox7-1'),'#combobox7-2',7);
                });
                $( "#div-combobox7-3" ).focusin(function(){
                    $('#snowmobilemodel').children('span').text("");
                    GetModels($('#combobox7-1'),$('#combobox7-2'),'#combobox7-3',7);
                });
                $( "#div-combobox8-1" ).focusin(function(){
                    $('#heavyequipmentyear').children('span').text("");
                });
                $( "#div-combobox8-2" ).focusin(function(){
                    $('#heavyequipmentmake').children('span').text("");
                    GetMakes($('#combobox8-1'),'#combobox8-2',8);
                });



                function GetModels(var1,var2,var3,id)
                {
                    var checkYear = var1.val();
                    var checkMake = var2.val();
                    checkYear = var1.next().children('input').val();
                    checkMake = var2.next().children('input').val();

                    var markup = "";
                    if(checkYear != "" && checkMake != ""){
                        if(_previousMakeYear != checkYear|| _previousMake != checkMake){
                            $.ajax({
                            url: '/Unit/GetModels',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({ make: checkMake, year: checkYear , unitId :id }),
                            success: function (data) {
                                //var markup = "<option value='0'>-- select a model --</option>";
                                for (var x = 0; x < data.length; x++) {
                                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                                }
                                
                                //if(data.length == 0){
                                    $(var3).next('span').children('a').click();
                                //}
                                $(var3).html(markup);

                                        _previousMakeYear = checkYear;
                                        _previousMake     = checkMake;
                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                            });
                        }
                    }
                        else{
                            markup="";
                            $(var3).html(markup);
                        }
                    }

                    function GetMakes(var1,var2,id)
                    {
                        var checkYear = var1.val();
                        checkYear = var1.next().children('input').val();
                        var markup = "";
                        if(checkYear != ""){
                            if(_previousMakeYear != checkYear){
                                $.ajax({
                                url: '/Unit/GetMakes',
                                type: 'POST',
                                contentType: 'application/json;',
                                data: JSON.stringify({year: checkYear , unitId :id}),
                                success: function (data) {
                                    //var markup = "<option value='0'>-- select a model --</option>";
                                    for (var x = 0; x < data.length; x++) {
                                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                                    }
                                    
                                    $(var2).next('span').children('a').click();
                                    $(var2).html(markup);

                                    _previousMakeYear = checkYear;
                                    _previousMake= "";
                                },
                                error: function (jqXHR, textStatus, errorThrown){
                                    // Your handler here...
                                
                                    // if session expires
                                    if(jqXHR.status == "404"){
                                        window.location.href='/Login/UserLogin?lbl=Session expired';
                                    }
                                }
                                });
                            }
                        }
                        else{
                            markup="";
                            $(var2).html(markup);
                        }
                    }

                $('.vinUnique').focusout(function(){
                    $.ajax({
                        url: '/Unit/IsVinExists',
                        type: 'POST',
                        contentType: 'application/json;',
                        data: JSON.stringify({identificationNumber :$(this).val()}),
                        success: function (data) {
                            //alert(data);
                            if(data == 0){
                                // $('.centered span').text('Error');
                                $('.vinCheck').text("This unit is already active in this loan, therefore cannot be added again at this time.");
                                middleSpanCheck();
                            }else if(data == 1){
                                //  $('.centered span').text('Error');
                                $('.vinCheck').text("This unit is pending in this loan, therefore cannot be added again at this time.");
                                middleSpanCheck();
                            }
                            else if(data == 2){
                                showPopup(8);
                            }
                            else if(data == 3){
                                $('.vinCheck').text("");
                                middleSpanCheck();
                            }
                            else{
                                $('.vinCheck').text("");
                                middleSpanCheck();
                                $('.vinUnique').val("");
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown){
                            // Your handler here...
                            $('.vinUnique').val(""); 
                            // if session expires
                            if(jqXHR.status == "404"){
                                window.location.href='/Login/UserLogin?lbl=Session expired';
                            }
                        }
                    });

                });
                // focusout functions Start
                // --------------------------
                $('#div-combobox1-1').focusout(function(){
                    var yearmakemodel = $('#combobox1-1').next().children('input').val();
                    document.getElementById('editor1-1').value = yearmakemodel;
                    focusoutcall('#vehicleyear span','#editor1-1','#combobox1-1',yearmakemodel);
                    //GetMakes($('#combobox1-1'),'#combobox1-2',1);
                });
                $('#div-combobox1-2').focusout(function(){
                    var yearmakemodel = $('#combobox1-2').next().children('input').val();
                    document.getElementById('editor1-2').value = yearmakemodel;
                    //GetModels($('#combobox1-1'),$('#combobox1-2'),'#combobox1-3',1);
                });
                $('#div-combobox1-3').focusout(function(){
                    var yearmakemodel = $('#combobox1-3').next().children('input').val();
                    document.getElementById('editor1-3').value = yearmakemodel;

                });
                $('#div-combobox1-4').focusout(function(){
                    var yearmakemodel = $('#combobox1-4').next().children('input').val();
                    document.getElementById('editor1-4').value = yearmakemodel;

                });
                $('#div-combobox2-1').focusout(function(){
                    var yearmakemodel = $('#combobox2-1').next().children('input').val();
                    document.getElementById('editor2-1').value = yearmakemodel;
                    focusoutcall('#rvyear span','#editor2-1','#combobox2-1',yearmakemodel);
                    //GetMakes($('#combobox1-1'),'#combobox1-2',1);
                });
                $('#div-combobox2-2').focusout(function(){
                    var yearmakemodel = $('#combobox2-2').next().children('input').val();
                    document.getElementById('editor2-2').value = yearmakemodel;
                    //GetModels($('#combobox2-1'),$('#combobox2-2'),'#combobox2-3',2);
                });
                $('#div-combobox2-3').focusout(function(){
                    var yearmakemodel = $('#combobox2-3').next().children('input').val();
                    document.getElementById('editor2-3').value = yearmakemodel;

                });
                $('#div-combobox3-1').focusout(function(){
                    var yearmakemodel = $('#combobox3-1').next().children('input').val();
                    document.getElementById('editor3-1').value = yearmakemodel;
                    focusoutcall('#camperyear span','#editor3-1','#combobox3-1',yearmakemodel);
                    //GetMakes($('#combobox3-1'),'#combobox3-2',3);
                });
                $('#div-combobox3-2').focusout(function(){
                    var yearmakemodel = $('#combobox3-2').next().children('input').val();
                    document.getElementById('editor3-2').value = yearmakemodel;
                    //GetModels($('#combobox3-1'),$('#combobox3-2'),'#combobox3-3',6);
                });
                $('#div-combobox3-3').focusout(function(){
                    var yearmakemodel = $('#combobox3-3').next().children('input').val();
                    document.getElementById('editor3-3').value = yearmakemodel;

                });
                $('#div-combobox4-1').focusout(function(){
                    var yearmakemodel = $('#combobox4-1').next().children('input').val();
                    document.getElementById('editor4-1').value = yearmakemodel;
                    focusoutcall('#atvyear span','#editor4-1','#combobox4-1',yearmakemodel);
                    //GetMakes($('#combobox4-1'),'#combobox4-2',4);
                });
                $('#div-combobox4-2').focusout(function(){
                    var yearmakemodel = $('#combobox4-2').next().children('input').val();
                    document.getElementById('editor4-2').value = yearmakemodel;
                    //GetModels($('#combobox4-1'),$('#combobox4-2'),'#combobox4-3',4);
                });
                $('#div-combobox4-3').focusout(function(){
                    var yearmakemodel = $('#combobox4-3').next().children('input').val();
                    document.getElementById('editor4-3').value = yearmakemodel;

                });
                $('#div-combobox5-1').focusout(function(){
                    var yearmakemodel = $('#combobox5-1').next().children('input').val();
                    document.getElementById('editor5-1').value = yearmakemodel;
                    focusoutcall('#boatyear span','#editor5-1','#combobox5-1',yearmakemodel);
                    //GetMakes($('#combobox5-1'),'#combobox5-2',5);
                });
                $('#div-combobox5-2').focusout(function(){
                    var yearmakemodel = $('#combobox5-2').next().children('input').val();
                    document.getElementById('editor5-2').value = yearmakemodel;

                });
                $('#div-combobox6-1').focusout(function(){
                    var yearmakemodel = $('#combobox6-1').next().children('input').val();
                    document.getElementById('editor6-1').value = yearmakemodel;
                    focusoutcall('#motorcycleyear span','#editor6-1','#combobox6-1',yearmakemodel);
                    // GetMakes($('#combobox6-1'),'#combobox6-2',6);
                });
                $('#div-combobox6-2').focusout(function(){
                    var yearmakemodel = $('#combobox6-2').next().children('input').val();
                    document.getElementById('editor6-2').value = yearmakemodel;
                    //GetModels($('#combobox6-1'),$('#combobox6-2'),'#combobox6-3',6);
                });
                $('#div-combobox6-3').focusout(function(){
                    var yearmakemodel = $('#combobox6-3').next().children('input').val();
                    document.getElementById('editor6-3').value = yearmakemodel;

                });
                $('#div-combobox6-4').focusout(function(){
                    var yearmakemodel = $('#combobox6-4').next().children('input').val();
                    document.getElementById('editor6-4').value = yearmakemodel;

                });
                $('#div-combobox7-1').focusout(function(){
                    var yearmakemodel = $('#combobox7-1').next().children('input').val();
                    document.getElementById('editor7-1').value = yearmakemodel;
                    focusoutcall('#snowmobileyear span','#editor7-1','#combobox7-1',yearmakemodel);
                    //GetMakes($('#combobox7-1'),'#combobox7-2',7);
                });
                $('#div-combobox7-2').focusout(function(){
                    var yearmakemodel = $('#combobox7-2').next().children('input').val();
                    document.getElementById('editor7-2').value = yearmakemodel;
                    //GetModels($('#combobox7-1'),$('#combobox7-2'),'#combobox7-3',7);
                });
                $('#div-combobox7-3').focusout(function(){
                    var yearmakemodel = $('#combobox7-3').next().children('input').val();
                    document.getElementById('editor7-3').value = yearmakemodel;

                });
                $('#div-combobox8-1').focusout(function(){
                    var yearmakemodel = $('#combobox8-1').next().children('input').val();
                    document.getElementById('editor8-1').value = yearmakemodel;
                    focusoutcall('#heavyequipmentyear span','#editor8-1','#combobox8-1',yearmakemodel);
                    //GetMakes($('#combobox8-1'),'#combobox8-2',8);
                });
                $('#div-combobox8-2').focusout(function(){
                    var yearmakemodel = $('#combobox8-2').next().children('input').val();
                    document.getElementById('editor8-2').value = yearmakemodel;

                });
                // -------------------------
                //focusout functions End
                function focusoutcall(span,vareditor,varcombo, val){
                                        // $('#editor1-1').trigger('change');

                    var len = val.length;
                    if(len == 4){
                        var isnum = /^\d+$/.test(val);
                        if(isnum === false){
                        //$(span).fadeIn();
                        $(span).text("Invalid : enter only numbers");
                        $(varcombo).next().children('input').val("");
                        $(vareditor).val("");
                        //$(span).delay(3000).fadeOut();
                        $('.centered span').text('Error');
                    }
                    else{
                        $(span).text("");
                        //$('.centered span').text('');
                        middleSpanCheck();
                        }
                    }
                    else if(len > 4){
                        //$(span).fadeIn();
                        $(span).text("Invalid : enter only 4 numbers");
                        $(varcombo).next().children('input').val("");
                        $(vareditor).val("");
                        //$(span).delay(3000).fadeOut();
                        $('.centered span').text('Error');

                    }
                    else if(len == 0){
                        $(varcombo).next().children('input').val("");
                        $(vareditor).val("");
                        //$('.centered span').text('');
                        middleSpanCheck();

                    }
                    else{
                        //$(span).fadeIn();
                        $(span).text("Invalid : need 4 numbers");
                        $(varcombo).next().children('input').val("");
                        $(vareditor).val("");
                        //$(span).delay(3000).fadeOut();
                        $('.centered span').text('Error');
                        }
                    }

                // drop down combo boxes
                $(function() {
                    $( "#combobox1-1" ).combobox();
                    $( "#combobox1-2" ).combobox();
                    $( "#combobox1-3" ).combobox();
                    $( "#combobox1-4" ).combobox();
                    $( "#combobox2-1" ).combobox();
                    $( "#combobox2-2" ).combobox();
                    $( "#combobox2-3" ).combobox();
                    $( "#combobox3-1" ).combobox();
                    $( "#combobox3-2" ).combobox();
                    $( "#combobox3-3" ).combobox();
                    $( "#combobox4-1" ).combobox();
                    $( "#combobox4-2" ).combobox();
                    $( "#combobox4-3" ).combobox();
                    $( "#combobox5-1" ).combobox();
                    $( "#combobox5-2" ).combobox();
                    $( "#combobox6-1" ).combobox();
                    $( "#combobox6-2" ).combobox();
                    $( "#combobox6-3" ).combobox();
                    $( "#combobox6-4" ).combobox();
                    $( "#combobox7-1" ).combobox();
                    $( "#combobox7-2" ).combobox();
                    $( "#combobox7-3" ).combobox();
                    $( "#combobox8-1" ).combobox();
                    $( "#combobox8-2" ).combobox();
                });

                unitTypeInitialLoad();

                //Initial page load
                //hide panels
                function unitTypeInitialLoad() {
                    $("#vehicle").hide();
                    $("#rv").hide();
                    $("#camper").hide();
                    $("#atv").hide();
                    $("#boat").hide();
                    $("#motorcycle").hide();
                    $("#snowmobile").hide();
                    $("#heavyequipment").hide();
                    $("#advanceDateFormDiv").hide();

                    document.getElementById('vehiclemiles').value = "";
                    document.getElementById('rvmiles').value = "";
                    document.getElementById('rvlength').value = "";
                    document.getElementById('camperlength').value = "";
                    document.getElementById('atvmiles').value = "";
                    document.getElementById('motorcyclemiles').value = "";

                    document.getElementById('txtCost').value = "";
                    document.getElementById('txtAdvanceAmount').value = "";

                    $("#advanceDate").val("");
                    $('#advanceDate').attr("placeholder", "MM/DD/YYYY");
                    
                }


                $('.vinUnique').focus(function(){
                    $('.vinCheck').text("");
                    middleSpanCheck();
                });

                // mouseleave for check vin number and bind year to year text box
                $('#vehicleVin').change (function () {

                    var vin1 =document.getElementById('vehicleVin').value;
                    var vin2 = vin1.replace(/\W/g, '');
                    var yearx= "";
                    var makex = "";

                    $('#vehicleVin').val(vin2);
                    if($('#vehicleVin').val().length == 17){
                        $("#vehicleVin").val(($("#vehicleVin").val()).toUpperCase());
                        var vin =document.getElementById('vehicleVin').value;
                        $('#vehicleVIN span').text("");
                        $.ajax({
                            url: '/Unit/GetYearByVin',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({vin: vin }),
                            success: function (data) {
                                var year = data;
                                if(year != 0){
                                    $('#combobox1-1').next().children('input').val(year);
                                    document.getElementById('editor1-1').value = year;
                                    //GetMakes($('#combobox1-1'),'#combobox1-2',1);
                                    yearx = year;
                                    $('.y').text("");

                                    $.ajax({
                                        url: '/Unit/GetMakeByVin',
                                        type: 'POST',
                                        contentType: 'application/json;',
                                        data: JSON.stringify({vin: vin }),
                                        success: function (data) {
                                            var make = data;
                                            if(make != ""){
                                                $('#combobox1-2').next().children('input').val(make);
                                                document.getElementById('editor1-2').value = make;
                                                //GetMakes($('#combobox1-1'),'#combobox1-2',1);
                                                makex = make;
                                                //alert(makex);
                                                $('.ma').text("");
                                            }else{
                                                $('#combobox1-2').next().children('input').val("");
                                                document.getElementById('editor1-2').value = "";
                                                //GetMakes($('#combobox1-1'),'#combobox1-2',1);
                                                makex = "";
                                            }
                                                //alert(yearx);
                                                $.ajax({
                                                    url: '/Unit/GetModelByVin',
                                                    type: 'POST',
                                                    contentType: 'application/json;',
                                                    data: JSON.stringify({ makex: makex, yearx: yearx }),
                                                    success: function (data) {
                                                        var model = data;
                                                        //alert(model);
                                                        if(model != ""){
                                                            $('#combobox1-3').next().children('input').val(model);
                                                            document.getElementById('editor1-3').value = model;
                                                            //GetMakes($('#combobox1-1'),'#combobox1-2',1);
                                                            $('.mo').text("");
                                                        }else{
                                                            $('#combobox1-3').next().children('input').val("");
                                                            document.getElementById('editor1-3').value = "";
                                                        }
                                                    },
                                                    error: function (jqXHR, textStatus, errorThrown){
                                                        // Your handler here...
                                
                                                        // if session expires
                                                        if(jqXHR.status == "404"){
                                                            window.location.href='/Login/UserLogin?lbl="Session expired"';
                                                        }
                                                    }
                                                });
                                            
                                        },
                                        error: function (jqXHR, textStatus, errorThrown){
                                            // Your handler here...
                                
                                            // if session expires
                                            if(jqXHR.status == "404"){
                                                window.location.href='/Login/UserLogin?lbl=Session expired';
                                            }
                                        }
                                    });
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                        });

                        
                      
                    }
                    else if($('#vehicleVin').val().length == 0){
                        //$('#vehicleVIN span').fadeIn();
                        //$('#vehicleVIN span').text("");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else if($('#vehicleVin').val().length < 17){
                        // var vinlen = $('#vehicleVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        // $('#vehicleVIN span').text(17 - vinlen + " charactors remaining");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else{
                        var vinlen = $('#vehicleVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        // $('#vehicleVIN span').text("charactors exceeded");
                        //$('#vehicleVIN span').delay(100).fadeOut();

                    }

                });

                $('#rvVin').change(function () {

                    var vin1 =document.getElementById('rvVin').value;
                    var vin2 = vin1.replace(/\W/g, '');
                    $('#rvVin').val(vin2);
                    if($('#rvVin').val().length == 17){
                        $("#rvVin").val(($("#rvVin").val()).toUpperCase());
                        $('#rvVIN span').text("");
                        var vin =document.getElementById('rvVin').value;
                        $.ajax({
                            url: '/Unit/GetYearByVin',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({vin: vin }),
                            success: function (data) {
                                var year = data;
                                if(year != 0){
                                    $('#combobox2-1').next().children('input').val(year);
                                    document.getElementById('editor2-1').value = year;
                                    //GetMakes($('#combobox2-1'),'#combobox2-2',2);
                                    $('.y').text("");
                                }

                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                        });
                    }
                    else if($('#rvVin').val().length == 0){
                        //$('#vehicleVIN span').fadeIn();
                        //$('#rvVIN span').text("");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else if($('#rvVin').val().length < 17){
                        var vinlen = $('#rvVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#rvVIN span').text(17 - vinlen + " charactors remaining");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else{
                        var vinlen = $('#rvVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        // $('#rvVIN span').text("charactors exceeded");
                        //$('#vehicleVIN span').delay(100).fadeOut();

                    }
                });

                $('#camperVin').change(function () {

                    var vin1 =document.getElementById('camperVin').value;
                    var vin2 = vin1.replace(/\W/g, '');
                    $('#camperVin').val(vin2);
                    if($('#camperVin').val().length == 17){
                        $("#camperVin").val(($("#camperVin").val()).toUpperCase());
                        $('#camperVIN span').text("");
                        var vin =document.getElementById('camperVin').value;
                        $.ajax({
                            url: '/Unit/GetYearByVin',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({vin: vin }),
                            success: function (data) {
                                var year = data;
                                if(year != 0){
                                    $('#combobox3-1').next().children('input').val(year);
                                    document.getElementById('editor3-1').value = year;
                                    //GetMakes($('#combobox3-1'),'#combobox3-2',3);
                                    $('.y').text("");
                                }

                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                        });
                    }else if($('#camperVin').val().length == 0){
                        //$('#vehicleVIN span').fadeIn();
                        //$('#camperVIN span').text("");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else if($('#camperVin').val().length < 17){
                        var vinlen = $('#camperVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#camperVIN span').text(17 - vinlen + " charactors remaining");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else{
                        var vinlen = $('#camperVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#camperVIN span').text("charactors exceeded");
                        //$('#vehicleVIN span').delay(100).fadeOut();

                    }
                });

                $('#atvVin').change(function () {

                    var vin1 =document.getElementById('atvVin').value;
                    var vin2 = vin1.replace(/\W/g, '');
                    $('#atvVin').val(vin2);
                    if($('#atvVin').val().length == 17){
                        $("#atvVin").val(($("#atvVin").val()).toUpperCase());
                        $('#atvVIN span').text("");
                        var vin =document.getElementById('atvVin').value;
                        $.ajax({
                            url: '/Unit/GetYearByVin',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({vin: vin }),
                            success: function (data) {
                                var year = data;
                                if(year != 0){
                                    $('#combobox4-1').next().children('input').val(year);
                                    document.getElementById('editor4-1').value = year;
                                    //GetMakes($('#combobox4-1'),'#combobox4-2',4);
                                    $('.y').text("");
                                }

                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                        });
                    }else if($('#atvVin').val().length == 0){
                        //$('#vehicleVIN span').fadeIn();
                        //$('#atvVIN span').text("");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else if($('#atvVin').val().length < 17){
                        //var vinlen = $('#atvVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#atvVIN span').text(17 - vinlen + " charactors remaining");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else{
                        var vinlen = $('#atvVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#atvVIN span').text("charactors exceeded");
                        //$('#vehicleVIN span').delay(100).fadeOut();

                    }
                });

                $('#boatVin').change(function () {

                    var vin1 =document.getElementById('boatVin').value;
                    var vin2 = vin1.replace(/\W/g, '');
                    $('#boatVin').val(vin2);
                    if($('#boatVin').val().length == 12){
                        $("#boatVin").val(($("#boatVin").val()).toUpperCase());
                        $('#boatVIN span').text("");
                        var vin =document.getElementById('boatVin').value;
                        $.ajax({
                            url: '/Unit/GetYearByVin',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({vin: vin }),
                            success: function (data) {
                                var year = data;
                                if(year != 0){
                                    $('#combobox5-1').next().children('input').val(year);
                                    document.getElementById('editor5-1').value = year;
                                    //GetMakes($('#combobox5-1'),'#combobox5-2',5);
                                    $('.y').text("");
                                }

                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                        });
                    }else if($('#boatVin').val().length == 0){
                        //$('#vehicleVIN span').fadeIn();
                        //$('#boatVIN span').text("");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else if($('#boatVin').val().length < 12){
                        //var vinlen = $('#boatVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#boatVIN span').text(12 - vinlen + " charactors remaining");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else{
                        //var vinlen = $('#boatVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#boatVIN span').text("charactors exceeded");
                        //$('#vehicleVIN span').delay(100).fadeOut();

                    }

                });

                $('#motorcycleVin').change(function () {

                    var vin1 =document.getElementById('motorcycleVin').value;
                    var vin2 = vin1.replace(/\W/g, '');
                    $('#motorcycleVin').val(vin2);
                    if($('#motorcycleVin').val().length == 17){
                        $("#motorcycleVin").val(($("#motorcycleVin").val()).toUpperCase());
                        $('#motorcycleVIN span').text("");
                        var vin =document.getElementById('motorcycleVin').value;
                        $.ajax({
                            url: '/Unit/GetYearByVin',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({vin: vin }),
                            success: function (data) {
                                var year = data;
                                if(year != 0){
                                    $('#combobox6-1').next().children('input').val(year);
                                    document.getElementById('editor6-1').value = year;
                                    //GetMakes($('#combobox6-1'),'#combobox6-2',6);
                                    $('.y').text("");
                                }

                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                        });
                    }else if($('#motorcycleVin').val().length == 0){
                        //$('#vehicleVIN span').fadeIn();
                        //$('#motorcycleVIN span').text("");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else if($('#motorcycleVin').val().length < 17){
                        //var vinlen = $('#motorcycleVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#motorcycleVIN span').text(17 - vinlen + " charactors remaining");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else{
                        var vinlen = $('#motorcycleVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#motorcycleVIN span').text("charactors exceeded");
                        //$('#vehicleVIN span').delay(100).fadeOut();

                    }
                });

                $('#snowmobileVin').change(function () {

                    var vin1 =document.getElementById('snowmobileVin').value;
                    var vin2 = vin1.replace(/\W/g, '');
                    $('#snowmobileVin').val(vin2);
                    if($('#snowmobileVin').val().length == 17){
                        $("#snowmobileVin").val(($("#snowmobileVin").val()).toUpperCase());
                        $('#snowmobileVIN span').text("");
                        var vin =document.getElementById('snowmobileVin').value;
                        $.ajax({
                            url: '/Unit/GetYearByVin',
                            type: 'POST',
                            contentType: 'application/json;',
                            data: JSON.stringify({vin: vin }),
                            success: function (data) {
                                var year = data;
                                if(year != 0){
                                    $('#combobox7-1').next().children('input').val(year);
                                    document.getElementById('editor7-1').value = year;
                                    //GetMakes($('#combobox7-1'),'#combobox7-2',7);
                                    $('.y').text("");
                                }

                            },
                            error: function (jqXHR, textStatus, errorThrown){
                                // Your handler here...
                                
                                // if session expires
                                if(jqXHR.status == "404"){
                                    window.location.href='/Login/UserLogin?lbl=Session expired';
                                }
                            }
                        });
                    }else if($('#snowmobileVin').val().length == 0){
                        //$('#vehicleVIN span').fadeIn();
                        //$('#snowmobileVIN span').text("");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else if($('#snowmobileVin').val().length < 17){
                        //var vinlen = $('#snowmobileVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#snowmobileVIN span').text(17 - vinlen + " charactors remaining");
                        //$('#vehicleVIN span').delay(100).fadeOut();
                    }
                    else{
                        //var vinlen = $('#snowmobileVin').val().length ;
                        //$('#vehicleVIN span').fadeIn();
                        //$('#snowmobileVIN span').text("charactors exceeded");
                        //$('#vehicleVIN span').delay(100).fadeOut();

                    }
                });
                $('#heavyequipmentSerial').change(function () {
                    $("#heavyequipmentSerial").val(($("#heavyequipmentSerial").val()).toUpperCase());
                });
                //hide the panels
                //show one panel at a time

                initialUnitType();

                function initialUnitType(){
                    var unitType  = '@ViewBag.loanDetails.defaultUnitType';
                    changeUnitType(unitType);
                    $(".miles").val("");
                    $(".lengths").val("");
                    $('#txtCost').val("");
                    $('#txtAdvanceAmount').val("");

                }
                function valueChangeUnitType(){
                    var unitType  = document.getElementById("unitType").value
                    clearform();
                    changeUnitType(unitType);
                    $(".miles").val("");
                    $(".lengths").val("");
                }
                function changeUnitType(unitType) {

                    document.getElementById("form").reset();

                    _previousMakeYear = "";
                    _previousMake     = "";
                    if (unitType == "1") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "1";
                        $("#vehicle").show();
                    } else if (unitType == "2") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "2";
                        $("#rv").show();
                    } else if (unitType == "3") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "3";
                        $("#camper").show();
                    } else if (unitType == "4") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "4";
                        $("#atv").show();
                    } else if (unitType == "5") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "5";
                        $("#boat").show();
                    } else if (unitType == "6") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "6";
                        $("#motorcycle").show();
                    } else if (unitType == "7") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "7";
                        $("#snowmobile").show();
                    } else if (unitType == "8") {
                        unitTypeInitialLoad();
                        document.getElementById("unitType").value = "8";
                        $("#heavyequipment").show();
                    } else {
                        unitTypeInitialLoad();
                    }

                }

                $('.advanceNow').change(function() {
                    var isAdvance = $(this).filter(':checked').val();

                    if (isAdvance === "Yes") {
                        $('#advanceDateFormDiv').show();
                        $('#btnSubmit').prop('value', 'Add and Advance');
                    } else {
                        $('#advanceDateFormDiv').hide();
                        $('#advanceDate').val('');
                        $('#advanceDate').attr("placeholder", "MM/DD/YYYY");
                        $('#advanceDate').removeClass('input-validation-error');
                        $('#advanceDate').siblings('span').text('');


                        $('#btnSubmit').prop('value', 'Add');
                    }
                });

                var files;
                var storedFiles = [];
                var upc = 0;

                //Reset the data and clear just the form
                $('#btnCancel').click(function() {
                    clearform();
                    $('#advanceDateFormDiv').hide();
                    $('#advanceDate').val('');
                    $('#errorAdvanceDate').text("");
                    $('#advanceDate').attr("placeholder", "MM/DD/YYYY");
                    $('#advanceDate').removeClass('input-validation-error');
                    $('#advanceDate').siblings('span').text('');

                    files = null;
                    storedFiles = [];
                    upc = 0;

                    $('#selectedFiles').children().remove();
                    $(".miles").val("");
                    $(".lengths").val("");
                    $('.radios').children('span').children('span').text('');
                    
                    $('input[type=radio]').each(function(){
                        ($(this).removeClass('input-validation-error'));
                    });

                });

                function clearform() {
                    var unitType = document.getElementById("unitType").value;
                    document.getElementById("form").reset();
                    changeUnitType(unitType);
                    _previousMakeYear = "";
                    _previousMake     = "";

                    // for all input field
                    $('input').next('span').children('span').text('');

                    // for dropdown field
                    $('select').next('span').children('span').text('');

                    $('#vehicleVIN').children('span').text('');
                    $('#vehicleyear').children('span').text("");
                    $('#vehiclemake').children('span').text("");
                    $('#vehiclemodel').children('span').text("");

                    $('#rvVIN').children('span').text('');
                    $('#rvyear').children('span').text("");
                    $('#rvmake').children('span').text("");
                    $('#rvmodel').children('span').text("");

                    $('#camperVIN').children('span').text('');
                    $('#camperyear').children('span').text("");
                    $('#campermake').children('span').text("");
                    $('#campermodel').children('span').text("");

                    $('#atvVIN').children('span').text('');
                    $('#atvyear').children('span').text("");
                    $('#atvmake').children('span').text("");
                    $('#atvmodel').children('span').text("");

                    $('#boatVIN').children('span').text('');
                    $('#boatyear').children('span').text("");
                    $('#boatmake').children('span').text("");

                    $('#motorcycleVIN').children('span').text('');
                    $('#motorcycleyear').children('span').text("");
                    $('#motorcyclemake').children('span').text("");
                    $('#motorcyclemodel').children('span').text("");

                    $('#snowmobileVIN').children('span').text('');
                    $('#snowmobileyear').children('span').text("");
                    $('#snowmobilemake').children('span').text("");
                    $('#snowmobilemodel').children('span').text("");

                    $('#heavyequipmentVIN').children('span').text('');
                    $('#heavyequipmentyear').children('span').text("");
                    $('#heavyequipmentmake').children('span').text("");

                    $('#tagscloudAdvance').children('span').text('');
                    $('#tagscloud').children('span').text('');

                    $('.centered span').text('');

                    $('.vinCheck').text('');

                    // reset the form
                    // for all input field
                    $('input').next('span').children('span').text('');
                    $('input').removeClass('valid');
                    // for dropdown field
                    $('select').next('span').children('span').text('');
                    $('select').removeClass('valid');

                    $('.new_err_msg').children("span").text("");

                };
                // vin key press key block validation with 17 charactors and Miles 10 charactors

                $("#vehicleVin").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#vehicleVin').val().length >= 17){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(alphaNumericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#rvVin").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#rvVin').val().length >= 17){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(alphaNumericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#camperVin").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#camperVin').val().length >= 17){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(alphaNumericAllow(e)){
                        
                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#atvVin").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#atvVin').val().length >= 17){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(alphaNumericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#boatVin").keypress(function(e){
                    
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#boatVin').val().length >= 17){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(alphaNumericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#motorcycleVin").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#motorcycleVin').val().length >= 17){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(alphaNumericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#snowmobileVin").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#snowmobileVin').val().length >= 17){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(alphaNumericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#vehiclemiles").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#vehiclemiles').val().length >= 10){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(numericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#rvmiles").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#rvmiles').val().length >= 10){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(numericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#atvmiles").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#atvmiles').val().length >= 10){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(numericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#motorcyclemiles").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if($('#motorcyclemiles').val().length >= 10){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(numericAllow(e)){

                        }else{
                            e.preventDefault();
                        }
                    } 
                    
                });
                $("#rvlength").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        var val = $("#rvlength").val();
                        if($('#rvlength').val().length >= 10){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(numericAllowDecimal(e,val)){

                        }else{
                            e.preventDefault();
                        }
                    }                   
                    
                });
                $("#camperlength").keypress(function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        var val = $("#camperlength").val();
                        if($('#camperlength').val().length >= 10){
                            if(e.which != 8)
                                e.preventDefault();
                        }
                        else if(numericAllowDecimal(e,val)){

                        }else{
                            e.preventDefault();
                        }
                    }
                });
                function numericAllowDecimal(e,val){
                    var ch = e.which;
                    if(val.indexOf('.')=== -1){
                        if ((ch >= 48 && ch <= 57 )|| ch == 46|| ch == 8) {
                            return 1;
                        }
                    }else{
                        if (ch >= 48 && ch <= 57 ) {
                            return 1;
                        }
                    }
                    return 0;
                }
                function alphaNumericAllow(e){
                    var ch = e.which;

                    if ((ch >= 48 && ch <= 57)||(ch >= 65 && ch <= 90)||(ch >= 97 && ch <= 122) || ch == 8){
                        return 1;
                    }
                    return 0;
                }
                function numericAllow(e){
                    var ch = e.which;
                    if ((ch >= 48 && ch <= 57)|| ch == 8) {
                        return 1;
                    }
                    return 0;
                }

                $(".miles").on('click', function(e) {
                    //if (this.value === "0") {
                    //    document.getElementById(this.id).value = "";
                    //}
                    $(this).removeAttr('placeholder');
                });
                $(".miles").blur( function() {
                    if (this.value === "") {
                        //document.getElementById(this.id).value = "0";
                        $(this).attr('placeholder','0');
                    }
                });
                $(".lengths").on('click', function(e) {
                    //if (this.value === "0") {
                    //    document.getElementById(this.id).value = "";
                    //}
                    $(this).removeAttr('placeholder');

                });
                $(".lengths").blur( function() {
                    if (this.value === "") {
                        //document.getElementById(this.id).value = "0";
                        $(this).attr('placeholder','0');
                    }
                });
                // cost tab///
                var model = @Html.Raw(Json.Encode(Model));
                var advancePt = model.AdvancePt;
                //var maxCost = model.LoanAmount * 100 / advancePt;
                var maxCost = model.Balance * 100 / advancePt;
                var maxAdvance = model.Balance ;


                $("#txtCost").on('click', function(e) {
                    //document.getElementById(this.id).value = "";
                    $(this).removeAttr('placeholder');
                });

                $("#txtAdvanceAmount").on('click', function(e) {
                    //if (this.value === "0.00") {
                    //    document.getElementById(this.id).value = "";
                    //}
                    //else if (this.value === "0") {
                    //    document.getElementById(this.id).value = "";
                    //}
                    $(this).removeAttr('placeholder');
                });

                //calculate advance
                $('#txtCost').keypress(function(e) {
                   

                    $("#tagscloud span").text("");
                    if ((e.which >= 48 && e.which <= 57) || e.which === 46 || e.which === 8 ||e.keyCode === 9) {
                        //var val = this.value + (e.which - 48);
                        var cost = document.getElementById('txtCost').value;
                        if (e.which !== 46 && e.which !== 8) {
                            if (cost <= maxCost) {
                                //$("#tagscloudAdvance span").fadeOut();
                                $('#txtAdvanceAmount').removeClass('input-validation-error');
                                //$("#tagscloudAdvance span").text("");
                                $('#txtAdvanceAmount').next('span').children('span').text('');
                            } else {
                                //$("#tagscloud span").fadeIn();
                                $(this).addClass('input-validation-error');
                                $("#tagscloud span").text("Cost must be less than balance");
                                //$("#tagscloud span").delay(1000).fadeOut();
                                $(this).removeClass('input-validation-error');
                                $("#tagscloud span");
                                e.preventDefault();
                            }
                        }

                    } else {
                        //$("#tagscloud span").fadeIn();
                        //$(this).addClass('input-validation-error');
                        //$("#tagscloud span").text("Invalid character");
                        //$("#tagscloud span").delay(1000).fadeOut();
                        //$(this).removeClass('input-validation-error');
                        //$("#tagscloud span");

                        e.preventDefault();


                    }
                });

                //claculate advance when click back-space
                $('#txtCost').keyup(function(e) {
                    if (e.keyCode === 8) {
                        var val = this.value;
                        var advanceAmount = (advancePt * val) / 100;
                        document.getElementById('txtAdvanceAmount').value = advanceAmount;
                        $("#tagscloud span").text("");
                        $("#tagscloudAdvance span").text("");
                    }
                });

                $('#txtCost').blur(function () {
                    var val = $.trim($(this).val());
                    if (val.indexOf(',') > -1) {
                        val = val.replace(',', '');
                    }

                    var num = parseFloat(val);
                    num = num.toFixed(2);
                    if (isNaN(num)) {
                        num = '';
                    }

                    if (isNaN(num)) {

                        //$("#tagscloud span").fadeIn();
                        $(this).addClass('input-validation-error');
                        //$("#tagscloud span").text("Cost must be a positive number");

                    }
                    else if (Number(num) > Number(maxCost)) {
                        //$("#tagscloud span").fadeIn();
                        $(this).addClass('input-validation-error');
                        $("#tagscloud span").text("Cost must be less than balance");
                    }
                    else if (Number(num) == "") {
                        //$("#tagscloudAdvance span").fadeIn();
                        //$(this).addClass('input-validation-error');
                        $("#tagscloud span").text("");
                        $(this).attr('placeholder', '0.00');
                        $('#txtAdvanceAmount').val("");
                        $('#txtAdvanceAmount').attr('placeholder', '0.00');
                        //$(this).val("0.00");
                        //$('#txtAdvanceAmount').val("0.00");
                    }
                    else if (Number(num) <= 0) {
                        //$("#tagscloud span").fadeIn();
                        $(this).addClass('input-validation-error');
                        $("#tagscloud span").text("Cost must be greater than zero");
                    } else {
                        //$("#tagscloud span").fadeOut();
                        $(this).removeClass('input-validation-error');
                        $("#tagscloud span").text("");

                        //$("#tagscloudAdvance span").fadeOut();
                        $('#txtAdvanceAmount').removeClass('input-validation-error');
                        $("#tagscloudAdvance span").text("");
                        if(num != 0){
                            $(this).val(num);
                        }                       

                        var advanceAmount = (advancePt * num) / 100;

                        advanceAmount = parseFloat(advanceAmount);
                        advanceAmountRoundUp = advanceAmount.toFixed(2);
                        document.getElementById('txtAdvanceAmount').value = advanceAmountRoundUp;

                        if (advanceAmountRoundUp == ""||advanceAmountRoundUp <=  0) {
                            //$("#tagscloudAdvance span").fadeIn();
                            //$(this).addClass('input-validation-error');
                            $(this).attr('placeholder', '0.00');
                            $('#txtAdvanceAmount').attr('placeholder', '0.00');
                            //$(this).val("0.00");
                            //$('#txtAdvanceAmount').val("0.00");
                        }
                    }


                    if(advanceAmount > maxCost){
                        //$("#tagscloudAdvance span").fadeIn();
                        $(this).addClass('input-validation-error');
                        $("#tagscloudAdvance span").text("Advance must be less than balance");
                        //$("#tagscloudAdvance span").delay(1000).fadeOut();
                        //$(this).removeClass('input-validation-error');
                    }
                });

                $('#txtAdvanceAmount').keypress(function(e) {
                    var cost = document.getElementById('txtCost').value;
                    //alert(e.which);
                    var advance = document.getElementById('txtAdvanceAmount').value;
                    if ((e.which >= 48 && e.which <= 57) || e.which === 46 || e.which === 8 || e.keyCode === 9) {
                        //var val = this.value + (e.which - 48);
                        //alert(cost + ' ' + val);
                        if (e.which !== 46 && e.which !== 8) {
                            if (cost === 0.00 || Number(advance) > Number(cost)) {
                                //$("#tagscloudAdvance span").fadeIn();
                                $(this).addClass('input-validation-error');
                                $("#tagscloudAdvance span").text("Advance must be less than cost");
                                //$("#tagscloudAdvance span").delay(1000).fadeOut();
                                //$(this).removeClass('input-validation-error');
                                e.preventDefault();
                            }
                            if (advance > maxAdvance) {
                                //$("#tagscloudAdvance span").fadeIn();
                                $(this).addClass('input-validation-error');
                                $("#tagscloudAdvance span").text("Advance must be less than balance");
                                //$("#tagscloudAdvance span").delay(1000).fadeOut();
                                //$(this).removeClass('input-validation-error');
                                e.preventDefault();
                            }
                        }
                    }
                    //else {
                    //    //$("#tagscloudAdvance span").fadeIn();
                    //    $(this).addClass('input-validation-error');
                    //    $("#tagscloudAdvance span").text("Invalid character");
                    //    //$("#tagscloudAdvance span").delay(1000).fadeOut();
                    //    $(this).removeClass('input-validation-error');
                    //    e.preventDefault();
                    //}
                });

                //claculate advance when click back-space
                $('#txtAdvanceAmount').keyup(function(e) {
                    //alert(e.keyCode);
                    if (e.keyCode === 8) {
                        var val = this.value;
                        //document.getElementById('txtAdvanceAmount').value = val;
                        $("#tagscloudAdvance span").text("");
                    }
                });

                $('#txtAdvanceAmount').blur(function () {
                    var cost = document.getElementById('txtCost').value;
                    var advance = document.getElementById('txtAdvanceAmount').value;
                    var val = $.trim($(this).val());

                    if (val.indexOf(',') > -1) {
                        val = val.replace(',', '');
                    }

                    var num = parseFloat(val);
                    num = num.toFixed(2);
                    if (isNaN(num)) {
                        num = '';
                    }

                    if (isNaN(num)) {

                        //$("#tagscloudAdvance span").fadeIn();
                        $(this).addClass('input-validation-error');
                        $("#tagscloudAdvance span").text("Advance must be a positive number");
                    }
                    else if (Number(num) > Number(cost)) {
                        //$("#tagscloudAdvance span").fadeIn();
                        $(this).addClass('input-validation-error');
                        $("#tagscloudAdvance span").text("Advance  must be less than cost");
                    }
                    else if (Number(num) == "") {
                        //$("#tagscloudAdvance span").fadeIn();
                        $(this).removeClass('input-validation-error');
                        $("#tagscloudAdvance span").text("");
                    }
                    else if (Number(num) <= 0) {
                        //$("#tagscloudAdvance span").fadeIn();
                        $(this).addClass('input-validation-error');
                        $("#tagscloudAdvance span").text("Advance must be greater than zero");
                    }
                    else if (advance > maxAdvance) {
                        //$("#tagscloudAdvance span").fadeIn();
                        $(this).addClass('input-validation-error');
                        $("#tagscloudAdvance span").text("Advance must be less than balance");
                        //$("#tagscloudAdvance span").delay(1000).fadeOut();
                        //$(this).removeClass('input-validation-error');
                        e.preventDefault();
                    }
                    else {
                        //$("#tagscloudAdvance span").fadeOut();
                        $(this).removeClass('input-validation-error');
                        $("#tagscloudAdvance span").text("");
                    }
                    $(this).val(num);
                    if (num == "") {
                        //$("#tagscloudAdvance span").fadeIn();
                        //$(this).val("0.00");
                        $(this).attr('placeholder', '0.00');

                    }
                });

                $('#advanceDate').blur(function() {
                    if(this.value === '')
                        $(this).attr('placeholder', 'MM/DD/YYYY');
                });

                
                $('#form').submit(function(e) {
                    $('#btnSubmit').prop('disabled', true);
                    var unitType = document.getElementById("unitType").value;
                    var cost = document.getElementById("txtCost").value;
                    var advance = document.getElementById("txtAdvanceAmount").value;




                    if (vin == ""  || cost =="" || advance == "") {
                        $('#btnSubmit').prop('disabled', false);
                    } 

                    if( $('.vinCheck').text().length > 0){
                        $('#btnSubmit').prop('disabled', false);
                        if (cost =="" || advance == "") {
                        } else {
                            e.preventDefault();
                        }  
                        
                    }
                    if (unitType == "1") {
                        var vin = document.getElementById("vehicleVin").value;
                        var trim = document.getElementById("vehicletrim").value;
                        var miles = document.getElementById("vehiclemiles").value;

                        if ($('#combobox1-1').next().children('input').val() == "") {
                            //$('#vehicleyear span').fadeIn();
                            $('#vehicleyear span').text("Please select the vehicle year");
                            //$('#vehicleyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "" ) {
                            } else {
                                
                                e.preventDefault();
                            }
                        }
                        if ($('#combobox1-2').next().children('input').val() == "") {
                            //$('#vehiclemake span').fadeIn();
                            $('#vehiclemake span').text("Please enter the vehicle Make");
                            // $('#vehiclemake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "") {
                            } else {
                                
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox1-3').next().children('input').val() == "") {
                            // $('#vehiclemodel span').fadeIn();
                            $('#vehiclemodel span').text("Please enter the vehicle Model");
                            //$('#vehiclemodel span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                    } else if (unitType == "2") {

                        var vin = document.getElementById("rvVin").value;
                        var length = document.getElementById("rvlength").value;
                        var miles = document.getElementById("rvmiles").value;

                        if ($('#combobox2-1').next().children('input').val() == "") {
                            //$('#rvyear span').fadeIn();
                            $('#rvyear span').text("Please select the rv year");
                            //$('#rvyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "" ) {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox2-2').next().children('input').val() == "") {
                            //$('#rvmake span').fadeIn();
                            $('#rvmake span').text("Please enter the rv Make");
                            //$('#rvmake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "" ) {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox2-3').next().children('input').val() == "") {
                            //$('#rvmodel span').fadeIn();
                            $('#rvmodel span').text("Please enter the rv Model");
                            //$('#rvmodel span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "" ) {
                            } else {
                                e.preventDefault();
                            }
                            
                        }


                    } else if (unitType == "3") {

                        var vin = document.getElementById("camperVin").value;
                        var length = document.getElementById("camperlength").value;
                        var hitch = document.getElementById("camperhitch").value;

                        if ($('#combobox3-1').next().children('input').val() == "") {
                            //$('#camperyear span').fadeIn();
                            $('#camperyear span').text("Please select the camper year");
                            //$('#camperyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""|| cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox3-2').next().children('input').val() == "") {
                            //$('#campermake span').fadeIn();
                            $('#campermake span').text("Please enter the camper Make");
                            //$('#campermake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "" ) {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox3-3').next().children('input').val() == "") {
                            //$('#campermodel span').fadeIn();
                            $('#campermodel span').text("Please enter the camper Model");
                            //$('#campermodel span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                                $('.centered span').text('Error');
                            } else {
                                e.preventDefault();
                            }
                            
                        }

                    } else if (unitType == "4") {

                        var vin = document.getElementById("atvVin").value;
                        var miles = document.getElementById("atvmiles").value;

                        if ($('#combobox4-1').next().children('input').val() == "") {
                            //$('#atvyear span').fadeIn();
                            $('#atvyear span').text("Please select the atv year");
                            //$('#atvyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox4-2').next().children('input').val() == "") {
                            //$('#atvmake span').fadeIn();
                            $('#atvmake span').text("Please enter the atv Make");
                            //$('#atvmake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "" ) {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox4-3').next().children('input').val() == "") {
                            //$('#atvmodel span').fadeIn();
                            $('#atvmodel span').text("Please enter the atv Model");
                            //$('#atvmodel span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }

                    } else if (unitType == "5") {

                        var vin = document.getElementById("boatVin").value;
                        var trailer = document.getElementById("boattrailer").value;
                        var serial = document.getElementById("boatserial").value;

                        if ($('#combobox5-1').next().children('input').val() == "") {
                            //$('#boatyear span').fadeIn();
                            $('#boatyear span').text("Please select the vehicle year");
                            //$('#boatyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox5-2').next().children('input').val() == "") {
                            //$('#boatmake span').fadeIn();
                            $('#boatmake span').text("Please enter the boat Make");
                            //$('#boatmake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                           
                        }


                    } else if (unitType == "6") {
                        var vin = document.getElementById("motorcycleVin").value;
                        var miles = document.getElementById("motorcyclemiles").value;

                        if ($('#combobox6-1').next().children('input').val() == "") {
                            //$('#motorcycleyear span').fadeIn();
                            $('#motorcycleyear span').text("Please select the vehicle year");
                            //$('#motorcycleyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox6-2').next().children('input').val() == "") {
                            //$('#motorcyclemake span').fadeIn();
                            $('#motorcyclemake span').text("Please enter the motorcycle Make");
                            //$('#motorcyclemake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox6-3').next().children('input').val() == "") {
                            //$('#motorcyclemodel span').fadeIn();
                            $('#motorcyclemodel span').text("Please enter the motorcycle Model");
                            //$('#motorcyclemodel span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }

                    } else if (unitType == "7") {
                        var vin = document.getElementById("snowmobileVin").value;

                        if ($('#combobox7-1').next().children('input').val() == "") {
                            //$('#snowmobileyear span').fadeIn();
                            $('#snowmobileyear span').text("Please select the vehicle year");
                            //$('#snowmobileyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox7-2').next().children('input').val() == "") {
                            //$('#snowmobilemake span').fadeIn();
                            $('#snowmobilemake span').text("Please enter the snowmobile Make");
                            //$('#snowmobilemake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox7-3').next().children('input').val() == "") {
                            //$('#snowmobilemodel span').fadeIn();
                            $('#snowmobilemodel span').text("Please enter the snowmobile Model");
                            //$('#snowmobilemodel span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == ""  || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                    } else if (unitType == "8") {
                        var vin = document.getElementById("heavyequipmentSerial").value;

                        if ($('#combobox8-1').next().children('input').val() == "") {
                            //$('#heavyequipmentyear span').fadeIn();
                            $('#heavyequipmentyear span').text("Please select the heavyequipment year");
                            //$('#heavyequipmentyear span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }
                        if ($('#combobox8-2').next().children('input').val() == "") {
                            //$('#heavyequipmentmake span').fadeIn();
                            $('#heavyequipmentmake span').text("Please enter the heavyequipment Make");
                            //$('#heavyequipmentmake span').delay(1000).fadeOut();
                            $('.centered span').text('Error');
                            $('#btnSubmit').prop('disabled', false);
                            if (vin == "" || cost =="" || advance == "") {
                            } else {
                                e.preventDefault();
                            }
                            
                        }

                    } else {

                    }
                    @if (ViewBag.IsTitleTrack == "Yes")
                    {<text>
                        if ($('#rdYes').is(':checked') || $('#rdNo').is(':checked')){

                        }else{
                        $('#btnSubmit').prop('disabled', false);
                        }
                    </text>
                    }
                   
                    if(unitType != "8"){
                        if($('.conditionRadio:checked').length > 0){
                    
                        }else{
                            $('#btnSubmit').prop('disabled', false);
                        }
                    }
                    

                    if($('#rdAdvanceYes').is(':checked') || $('#rdAdvanceNo').is(':checked')){
                        if($('#rdAdvanceYes').is(':checked')){
                            //alert(checkDate());
                            if(checkDate()){

                            }
                            else{
                                $('#btnSubmit').prop('disabled', false);
                                e.preventDefault();
                            }
                        }

                    }else{
                        $('#btnSubmit').prop('disabled', false);
                    }
                    var cost = parseFloat(document.getElementById('txtCost').value);
                    var advance = parseFloat(document.getElementById('txtAdvanceAmount').value);
                    if (advance > cost) {
                        //$("#tagscloudAdvance span").fadeIn();
                        //$("#tagscloudAdvance span").addClass('input-validation-error');
                        //$("#tagscloudAdvance span").text("Advance must be less than cost");
                        //$("#tagscloudAdvance span").delay(1000).fadeOut();
                        //$(this).removeClass('input-validation-error');
                        $('#btnSubmit').prop('disabled', false);
                        e.preventDefault();
                        
                    } else if (cost > maxCost) {
                        //$("#tagscloudAdvance span").fadeIn();
                        //$("#tagscloudAdvance span").addClass('input-validation-error');
                        //$("#tagscloudAdvance span").text("Advance must be less than balance");
                        //$("#tagscloudAdvance span").delay(1000).fadeOut();
                        //$(this).removeClass('input-validation-error');
                        $('#btnSubmit').prop('disabled', false);
                        e.preventDefault();
                        
                    } else if (advance > maxAdvance) {
                        //$("#tagscloudAdvance span").fadeIn();
                        //$("#tagscloudAdvance span").addClass('input-validation-error');
                        //$("#tagscloudAdvance span").text("Advance must be less than balance");
                        //$("#tagscloudAdvance span").delay(1000).fadeOut();
                        //$(this).removeClass('input-validation-error');
                        $('#btnSubmit').prop('disabled', false);
                        e.preventDefault();
                        
                    } else {
                       
                    }
                    
                });


                //$('#Note').keyup(function(e) {
                //    //alert(this.value.length);
                //    if (this.value.length === 1) {
                //        //alert(this.value.length);
                //        document.getElementById('Note').value = this.value.toUpperCase();
                //    }
                //});
                $('#Note').keypress(function(e) {
                    //alert(this.value.length);
                    if (this.value.length === 0) {
                        //alert(this.value.length);
                        document.getElementById('Note').value = String.fromCharCode(e.which).toUpperCase();
                        e.preventDefault();
                    }
                });

                $("input[id^='fileToUpload']").change(function (e) {
                    var res = doReCreate(e);
                });

                function doReCreate(e) {
                    if(upc < 9)
                    {
                        upc = upc + 1;
                        var res = handleFileSelect(e);
                        //if (res === 0) return 0;
                        $("input[id^='fileToUpload']").hide();

                        $('<input>').attr({
                            type: 'file',
                            multiple: 'multiple',
                            id: 'fileToUpload' + upc,
                            class: 'fUpload',
                            name: 'fileUpload',
                            style: 'float: left;margin-bottom:2px;',
                            title: '  ',
                            onchange: "doReCreate(event)"

                        }).appendTo('#fileUploaderInsideDiv');
                        //return 1;
                    }
                    //return 0;
                }




                function handleFileSelect(e) {
                    var validExt = ['gif', 'png', 'jpg', 'jpeg', 'pdf', 'docx', 'xls'];

                    var selDiv = document.querySelector("#selectedFiles");

                    if (!e.target.files) return;

                    files = e.target.files;
                    var maxSize = 375000;
                    for (var i = 0; i < files.length; i++) {

                        var f = files[i];
                        var ext = f.name.split('.').pop().toLowerCase();

                        if($.inArray(ext, validExt) === -1) {
                            $('#tagscloudFileUpload span').fadeIn();
                            $("#tagscloudFileUpload span").text("invalid file type!");
                            $('#tagscloudFileUpload span').delay(1000).fadeOut();
                            return;
                        }
                        else if (f.size > parseFloat(maxSize)) {
                            $('#tagscloudFileUpload span').fadeIn();
                            $("#tagscloudFileUpload span").text("File size should be less than 3MB.");
                            $('#tagscloudFileUpload span').delay(1000).fadeOut();
                            return;
                        }

                        selDiv.innerHTML += "<div>" + f.name + "<a id='imgLink' onclick='removeAtt(this)'> <b style='color: red'>   X </b> </a> </div>";

                        //<img id='' src='~/Images/deleteRow.png'/>
                        storedFiles.push(f.name);
                    }
                    $('#@Html.IdFor(i => i.FileName)').val(storedFiles);
                }

                function removeAtt(t) {
                    var serEle = $(t).parent().text().slice(0, -3);
                    var index = storedFiles.indexOf(serEle);
                    if (index !== -1) {
                        storedFiles.splice(index, 1);
                    }
                    $(t).parent().remove();

                    $('#@Html.IdFor(i => i.FileName)').val(storedFiles);
                    upc = upc - 1;
                }

            </script>

            <script>
                //Add date picker
                var startPicker = new Pikaday({
                    field: document.getElementById('advanceDate'),
                    format: 'l'
                });

                //Set min date and max date
                startPicker.setMinDate(new Date("@Model.StartDate"));
                startPicker.setMaxDate(new Date("@Model.EndDate"));
                $('#advanceDate').val('');
                // onclick remove success msg


                $('textarea').click(function () {
                    $('.centered1 span').text('');

                });
                $(document).on('click', '.ui-button', function(){
                    $('.centered1 span').text('');
                });

                function middleSpanCheck(){
                    if ($('input').next('span').children('span').text().length > 1 || $('.vinCheck').text()) {

                        $('.centered span').text('Error');
                    }
                    //else if ($('.vinCheck').text().length > 0) {
                    //    $('.centered span').text('Error');
                    //}
                    else{
                        $('.centered span').text('');
                    }
                }


                // block unwanted characters

                $(document).on('keypress','.block_invalid_char' , function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ',','@@','&','_','.'];
                        res = InvalidCharacters(this, array, e.which);

                        if (res === 1) {
                            e.preventDefault();
                            return;
                        }
                        else if (e.which === 92 || e.which === 39) {
                            //$(this).siblings('div').children('span').text("Invalid character.");
                            e.preventDefault();
                            return;
                        }
                    }
                    
                   
                } );
                //$(document).on('keypress','.block_invalid span input' , function(e){
                //    var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '-', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ',','@@','&','_','.'];
                //    res = InvalidCharacters(this, array, e.which);

                //    if (res === 1) {
                //        e.preventDefault();
                //        return;
                //    }
                //    else if (e.which === 92 || e.which === 39) {
                //        //$(this).siblings('div').children('span').text("Invalid character.");
                //        e.preventDefault();
                //        return;
                //    }
                //} );
                $(document).on('keypress','.block_invalid_allow_dash' , function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        var array = ['~', '`', '!', '#', '$', '%', '*', '(', ')', '+', '/', '=', '?', '^', '{', '|', '}', '[', ']', ':', ';', '"', '<', '>', '', ' ', ',','@@','&','_','.'];
                        res = InvalidCharacters(this, array, e.which);

                        if (res === 1) {
                            e.preventDefault();
                            return;
                        }
                        else if (e.which === 92 || e.which === 39) {
                            //$(this).siblings('div').children('span').text("Invalid character.");
                            e.preventDefault();
                            return;
                        }
                    }
                    
                    
                } );

                $(document).on('keypress','.max_length4 span input' , function(e){
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        
                        if($(this).val().length  == 4){

                            e.preventDefault();
                            return;
                        }
                    }
                    

                } );

                $(document).on('keypress','.allow_numeric span input' , function(e){

                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        if (e.which > 47 && e.which < 58 || e.which == 8 || e.which == 127 ) {

                            return;
                        }
                        else {
                            e.preventDefault();
                            return;
                        }
                    }
                    
                } );

                function ClearVin(){
                    $('.vinUnique').val("");
                    $('.custom-combobox-input').val("");

                }
                $('.dateKeyPressValidate').keypress(function (e) {
                    if (e.which != 8 && e.keyCode != 46 && e.keyCode != 9) {
                        var ch = e.which;
                        if ((ch >= 47 && ch <= 57) || ch === 127 || ch === 8) {
                            return 1;
                        }
                        else {

                            e.preventDefault();
                        }
                    }
                    
                    
                });

                $('#advanceDate').blur(function () {

                    if ($(this).val() == "") {
                        //$('#errorAdvanceDate').text('Please select the Advance Date');
                        //$(this).addClass('input-validation-error');
                        $('#errorAdvanceDate').text("");
                        $(this).attr('placeholder', 'MM/DD/YYYY');
                        //$('.centered span').text('Error');
                        return;
                    }
                    var valid = isValidDate($(this).val());
                    if (valid) {
                        var selectedDate = new Date($(this).val());
                        var minDate = new Date("@ViewBag.loanDetails.startDate.Date");
                        var maxDate = new Date("@ViewBag.loanDetails.maturityDate.Date");
                        if (selectedDate < minDate || selectedDate > maxDate) {
                            // out off range error
                            $('#errorAdvanceDate').text('Out of Range');
                            $(this).addClass('input-validation-error');
                            $('.centered span').text('Error');
                        } else {
                            // delete error mssage
                            $('#errorAdvanceDate').text('');
                            $(this).removeClass('input-validation-error');
                        }
                    } else {

                        // not valid data error
                        $('#errorAdvanceDate').text('Not valid date');
                        $(this).addClass('input-validation-error');
                        $('.centered span').text('Error');
                    }
                });

                function checkDate(){
                    if ($('#advanceDate').val() == "") {
                        //$('#errorAdvanceDate').text('Please select the Advance Date');
                        //$('#advanceDate').addClass('input-validation-error');
                        $('#errorAdvanceDate').text("");
                        $('#advanceDate').attr('placeholder', 'MM/DD/YYYY');
                        $('.centered span').text('Error');
                        return false;
                    }
                    var valid = isValidDate($('#advanceDate').val());
                    if (valid) {
                        var selectedDate = new Date($('#advanceDate').val());
                        var minDate = new Date("@ViewBag.loanDetails.startDate.Date");
                        var maxDate = new Date("@ViewBag.loanDetails.maturityDate.Date");
                        if (selectedDate < minDate || selectedDate > maxDate) {
                            // out off range error
                            $('#errorAdvanceDate').text('Out of Range');
                            $('#advanceDate').addClass('input-validation-error');
                            $('.centered span').text('Error');
                            return false;
                        } else {
                            // delete error mssage
                            $('#errorAdvanceDate').text('');
                            $('#advanceDate').removeClass('input-validation-error');
                            return true;
                        }



                    } else {

                        // not valid data error
                        $('#errorAdvanceDate').text('Not valid date');
                        $('#advanceDate').addClass('input-validation-error');
                        $('.centered span').text('Error');
                        return false;
                    }
                }
            </script>
        </div>      
    </div>

    <div class="link-bar" style="margin-bottom:15px;">
        @{
            Html.RenderAction("GetLinkBar", "Unit");
        }
    </div>
<div style="clear:both"></div>




<script>
        // if advance page
        @if(ViewBag.Title == "Advance Unit") {

        @*<text>$("#lkadv").before($(".link")).addClass('active').attr("disabled", "disabled").css('cursor', 'default').css('opacity', 'initial').siblings().removeClass('active').removeAttr('disabled');</text>
            <text>$("#lkadv").click(function (e) { e.preventDefault(); });</text>
              <text>$("#lkadv").siblings().click(function (e) {
            return true;

        });</text>*@

            <text>$("#lkadv").hide();</text>
        }else if(ViewBag.Title == "Add Unit Page")
        {
                @*<text>

        //if unit page
        $("#lkuni").before($(".link")).addClass('active').attr("disabled", "disabled").css('cursor', 'default').css('opacity', 'initial').siblings().removeClass('active').removeAttr('disabled');</text>
            <text>$("#lkuni").click(function (e) { e.preventDefault(); });</text>
            <text>$("#lkuni").siblings().click(function (e) {
            return true;

        });</text>*@

            <text>$("#lkuni").hide();</text>
        }



</script>


<div class="overlay-content popup8" style="width:491px;text-align:center;margin-left: 232px;top:314px !important">


    <h3>VIN Exist</h3>

    <span class="text-warning"> This unit is currently active in another loan on our system, would you still like to add it at this time?</span><br />
    <br />
    <button class="close-btn btn btn-info" style="width:70px">Yes</button>
    <button class="close-btn btn btn-info" style="width:70px" onclick="ClearVin();">No</button>


</div>
<script >


    // function to show our popups
    function showPopup(whichpopup) {
        var docHeight = $(document).height(); //grab the height of the page
        var scrollTop = $(window).scrollTop(); //grab the px value from the top of the page to where you're scrolling
        $('.overlay-bg').show().css({ 'height': docHeight }); //display your popup background and set height to the page height
        $('.popup' + whichpopup).show().css({ 'top': scrollTop + 314 + 'px' }); //show the appropriate popup and set the content 20px from the window top
    }

    // function to close our popups
    function closePopup() {
        $('.overlay-bg, .overlay-content').hide(); //hide the overlay
    }

    // timer if we want to show a popup after a few seconds.
    //get rid of this if you don't want a popup to show up automatically
    // setTimeout(function() {
    // Show popup3 after 2 seconds
    //    showPopup(3);
    // }, 2000);


    // show popup when you click on the link
    $('.show-popup').click(function (event) {
        //event.preventDefault(); // disable normal link function so that it doesn't refresh the page
        var selectedPopup = $(this).data('showpopup'); //get the corresponding popup to show

        showPopup(selectedPopup); //we'll pass in the popup number to our showPopup() function to show which popup we want
    });

    // hide popup when user clicks on close button or if user clicks anywhere outside the container
    $('.close-btn').click(function () {
        closePopup();
    });

    // hide the popup when user presses the esc key
    $(document).keyup(function (e) {
        if (e.keyCode == 27) { // if user presses esc key
            closePopup();
        }
    });



    // help 
    $('.title-help').click(function () {

        $('.help-text h4').html("About this page");
        $('.help-text p').html(" &nbsp;&nbsp; On the add unit page you can add the unit to the system. If there are multiple unit types for the loan you can select which type of unit you are adding (if it is not already selected for you). Some of the identifying fields will change based on the type of unit selected. Some fields are optional but have been included to make it easier to identify the unit when lot inspections are done.<br></br> &nbsp;&nbsp; Once you have entered the unit details you are able to enter the cost of the unit and the advance amount will be automatically calcuated for you based on the information entered into the loan set up. You are able to chose if the title has been delivered to the lender.<br></br> &nbsp;&nbsp; You will also be able to advance the unit on this page if you chose or you will be able to advance later from the advance unit page. Until the unit is advanced it will be considered pending. The loan balance will not change and no fees or curtailments will be calculated until the unit is active. If you have multiple loans please make sure you are adding the unit to the correct loan.");

    });

    $('.help-veh-trim').click(function () {

        $('.help-text h4').html("Trim");
        $('.help-text p').html(" &nbsp;&nbsp; The vehicle trim is sometimes referred to as submodel. It gives an indication of the features included in that vehicle package.<br></br><i> (example: Ford F150 comes with trim options - XL, XLT, Lariat...)</i>");

    });

    $('.help-veh-vin').click(function () {

        $('.help-text h4').html("VIN");
        $('.help-text p').html(" &nbsp;&nbsp; The Vehicle Identification Number is a 17 character code which consists of numbers and letters. It is unique to each vehicle and the only way to uniquely identify the vehicle, therefore it is important to enter this number in correctly. It can be found on the top of the vehicle title. Multiple details of the vehicle are coded into the VIN.");
       

    });

    $('.help-veh-col').click(function () {

        $('.help-text h4').html("Color");
        $('.help-text p').html(" &nbsp;&nbsp; If you enter the color of the vehicle (often found on the title or purchase paperwork), it is typically easier for the inspector during lot inspection to identify the proper vehicle more quickly.");

    });  

    $('.help-mot-vin').click(function () {

        $('.help-text h4').html("VIN");
        $('.help-text p').html(" &nbsp;&nbsp; The Vehicle Identification Number is a 17 character code which consists of numbers and letters. It is unique to each vehicle and the only way to uniquely identify the vehicle, therefore it is important to enter this number in correctly. It can be found on the top of the vehicle title. Multiple details of the vehicle are coded into the VIN.");

    });

    $('.help-mot-col').click(function () {

        $('.help-text h4').html("Color");
        $('.help-text p').html(" &nbsp;&nbsp; If you enter the color of the vehicle (often found on the title or purchase paperwork), it is typically easier for the inspector during lot inspection to identify the proper vehicle more quickly.");

    }); 

    $('.help-snow-vin').click(function () {

        $('.help-text h4').html("VIN");
        $('.help-text p').html(" &nbsp;&nbsp; The Vehicle Identification Number is a 17 character code which consists of numbers and letters. It is unique to each vehicle and the only way to uniquely identify the vehicle, therefore it is important to enter this number in correctly. It can be found on the top of the vehicle title. Multiple details of the vehicle are coded into the VIN.");

    }); 

    $('.help-boat-hin').click(function () {

        $('.help-text h4').html("HIN");
        $('.help-text p').html(" &nbsp;&nbsp; The Hull Identification Number is a 12 character code which consists of numbers and letters. It is unique to each boat and the only way to uniquely identify the boat, therefore it is important to enter this number correctly. It can be found on the title.");

    }); 

    $('.help-boat-tra_id').click(function () {

        $('.help-text h4').html("Trailer ID");
        $('.help-text p').html(" &nbsp;&nbsp; If the boat comes with a trailer you can include the ID of that trailer here for reference purposes only.");

    }); 

    $('.help-boat-eng_ser').click(function () {

        $('.help-text h4').html("Engine Serial");
        $('.help-text p').html(" &nbsp;&nbsp; If the boat comes with an engine, you can enter the engine serial number here for reference purposes only.");

    }); 

    $('.help-cost').click(function () {

        $('.help-text h4').html("Unit cost");
        $('.help-text p').html(" &nbsp;&nbsp; Please enter the cost of the unit. This is the amount which will be used to calculate the advance amount and curtailments.");

    }); 

    $('.help-adv_amount').click(function () {

        $('.help-text h4').html("Advance amount");
        $('.help-text p').html(" &nbsp;&nbsp; This amount is automatically calculated based on the loan set up. If allowed by the loan terms this amount can be changed by certain users.");

    }); 

    $('.help-date').click(function () {

        $('.help-text h4').html("Advance unit");
        $('.help-text p').html(" &nbsp;&nbsp; You can choose to advance the unit at this time. You will be asked to chose what date the unit is being added. If you choose not to advance the unit now  it will be added as a pending unit. You will then be able to view and advance it at a later time on the advance unit page.");

    }); 

</script>